{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","auth/KeycloakViews.js","components/Admin/EditProjectModal.js","components/Admin/ProjectActionItems.js","components/Customer/customDataTable.js","components/Customer/customerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminDashboardElement.js","api/tickets.js","api/ticketingsystem.js","components/SubscriptionDetails/TicketList.js","api/subscriptions.js","api/portalusers.js","components/Admin/EditSubscriptionModal.js","components/SubscriptionDetails/subscription.js","api/keycloak.js","components/Customer/CustomerProjectList.js","components/App.js","custom-elements/AdminAddCustomerElement.js","components/Admin/RoleCheck.js","custom-elements/AdminRoleCheckElement.js","custom-elements/CustomDataTableElement.js","custom-elements/CustomerDetailsElement.js","custom-elements/SubscriptionElement.js","components/Forms/openTicket.js","custom-elements/FormsOpenTicketElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","components/Forms/enhancementRequest.js","custom-elements/FormsEnhancementRequestElement.js","custom-elements/AppElement.js","custom-elements/TicketListElement.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","custom-elements/OpenTicketElement.js","components/Admin/ManageUser/AssignUser.js","components/Admin/ManageUser/DeleteUser.js","components/Admin/ManageUser/ManageUser.js","custom-elements/ManageUserElement.js","custom-elements/AssignUserElement.js","custom-elements/DeleteUserElement.js","custom-elements/TicketingSystemElement.js","custom-elements/ProductVersionElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getKeycloakToken","window","entando","authenticated","token","hasKeycloakClientRole","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","data","json","Promise","reject","Error","statusText","resource","apiCustomerDelete","serviceUrl","id","method","apiCustomersGet","apiCustomerGet","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiGetCustomersProjects","customerId","apiAddProjectToCustomer","projectId","apiDeleteProjectFromCustomer","adminResource","apiAdminCustomersGet","apiAdminCustomerGet","myResource","apiMyCustomersGet","apiGetMyCustomersProjects","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","result","submitMsg","t","submitColour","updateCustomerList","catch","err","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","initialized","addEventListener","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","modalLabel","style","color","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","project","apiProjectPut","apiAddTicketToProject","ticketId","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiAddPartnerToProject","partnerId","apiGetProjectsUsers","apiGetProjectSubscriptions","apiGetProjectIdNames","apiGetMyProjectIdNames","apiAdminProjectsGet","apiMyProjectsGet","partnerNumber","partnerPost","projectList","prevProps","changedAuth","getProjects","projects","Select","defaultValue","SelectItem","text","Object","keys","allProjects","map","i","description","systemId","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","label","allCustomers","AuthenticatedView","children","UnauthenticatedView","projectPut","updateProjectList","modalId","buttonId","getProjectDetails","buttonClassName","handleClick","showMenu","removeEventListener","handleOutsideClick","prevState","node","contains","search","location","URLSearchParams","hasSubscription","Button","onClick","padding","kind","zIndex","position","backgroundColor","to","sub","textDecoration","display","width","margin","border","borderTop","href","handleDeleteProject","CustomTable","fetchData","String","closeMenu","preventDefault","confirm","deleteProject","action","headerData","header","key","console","log","render","DataTable","rows","rowData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","TableHeader","TableBody","index","projectSubscriptions","TableCell","partners","tickets","entandoVersion","Date","startDate","toDateString","setMonth","getMonth","lengthInMonths","projectName","partnerName","endDate","openTickets","getCustomer","Tile","getCustomerDetails","updateCustomer","getCustomersProjects","deleteCustomer","AccordionItem","title","open","accordionOpened","handleDelete","getTime","handleSearch","event","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","customersProjects","role","test","numberOfPages","Math","ceil","Search","placeHolderText","onKeyPress","Accordion","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","cssClass","subscribeToWidgetEvent","eventType","eventHandler","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminDashboardElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","appendChild","getAttribute","ReactDOM","Provider","HTMLElement","customElements","define","jiraResource","apiJiraTicketsGet","organization","apiJiraTicketPost","ticket","apiTicketingSystemDelete","apiTicketingSystemsGet","apiTicketingSystemPost","ticketingsystem","apiTicketingSystemPut","TicketList","currentTicketingSystem","ticketingSystems","substr","type","priority","createDate","updateDate","creationDate","openTicket","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiGetMySubscription","apiRenewSubscription","projectSubscriptionRenew","apiUserDelete","apiUsersGet","apiUserPost","user","apiUserGetByUsername","username","subscriptionRequest","projectSubscription","subscription","level","moment","format","subscriptionPut","updateSubscription","handleStartDateChange","date","toISOString","isNumeric","match","str","isNaN","parseFloat","getSubscriptionDetails","disabled","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","subscriptionData","getSubscription","loading","users","params","license","apiKeycloakUserGet","client_id","password","grant_type","path","AdminAddCustomerElement","RoleCheck","roleType","renderForm","AdminRoleCheckElement","CustomDataTableElement","CustomerDetailsElement","SubscriptionElement","parse","fetchProjectSubscription","createTicket","res","error","types","priorities","projectParam","forEach","ticketingSystem","fetchProjects","getTicketingSystem","tabIndex","FormsOpenTicketElement","Navigation","NavigationElement","EnhancementRequest","ticketNo","customerName","openedBy","enhancementDescription","FormsEnhancementRequestElement","hidden","paginationMode","disableDefaultEventHandler","AppElement","Locale","TicketListCustomerElement","createTicketingSystem","updateTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","getTicketingSystems","deleteTicketingSystem","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","addProductVersion","updateProductVersions","handleEndDateChange","version","versionPut","getVersionDetails","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","productVersions","ToggleSmall","handleToggleChange","aria-label","defaultToggled","EditVersionModal","marginTop","fill","entVersion","adminConfig","content","class","toString","AdminConfigurationElement","OpenTicketElement","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","keycloakUser","set","email","assignUser","handleFormValidation","assignUserToProject","getPortalUserId","portalUserId","portalUserApi","portalUser","message","createPortalUser","authServerUrl","keycloakUrl","userList","projectIdsNames","size","unshift","setupFormComponents","handleRemoveUser","portalUsers","updatedPortalUsers","delete","handleUserDisplay","displayUsers","filterText","handleMapFormatting","portalUsernames","values","dateAdded","createdTimestamp","toLocaleString","month","getFullYear","userAccess","row","cells","cell","userFunctionality","ManageUserElement","AssignUserElement","DeleteUserElement","TicketingSystemElement","ProductVersionElement","subscriptionLevel","GOLD","PLATINUM","subscriptionStatus","subscriptionTypes","submitSuccess","submitError","subscriptionType","newSubscription","renewSubscription","subscriptionLength","entandoVersionId","selectedProjectId","subscriptionLevelList","entries","versionList","formInputs","formComponents","isAdmin","createFormMessage","subMessageKey","successErrorMessage","required","SubsciptionFormElement"],"mappings":"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","file":"static/js/main.81bd5160.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = (locale) => {\r\n    i18n.locale = locale;\r\n}\r\n\r\nexport default i18n;","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([\r\n  PropTypes.func,\r\n  PropTypes.shape({ current: PropTypes.elementType }),\r\n  PropTypes.shape(null),\r\n]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  \r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n  \r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","export const getKeycloakToken = () => {\r\n  if (\r\n    window &&\r\n    window.entando &&\r\n    window.entando.keycloak &&\r\n    window.entando.keycloak.authenticated\r\n  ) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const hasKeycloakClientRole = (clientRole) => {\r\n  if (getKeycloakToken()) {\r\n    const { resourceAccess } = window.entando.keycloak;\r\n    if (resourceAccess) {\r\n      for (const client in resourceAccess) {\r\n        const item = resourceAccess[client];\r\n        if (item.roles && item.roles.includes(clientRole)) {\r\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json'\r\n  }),\r\n});\r\n\r\nexport const getDefaultKeycloakOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  }),\r\n});\r\n\r\nexport const getUrl = (url) => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count')\r\n      ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\r\n      : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '', status: response.status};\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers, status: response.status }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGetForAdminDashboard = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}/all`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/customers/admin';\r\nexport const apiAdminCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAdminCustomerGet = async (serviceUrl, customerId) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}/${customerId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/customers/mycustomers';\r\nexport const apiMyCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${myResource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost } from '../../api/customers';\r\n\r\nclass AddCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n\r\n        this.baseState = this.state\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async customerPost(customer) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiCustomerPost(this.props.serviceUrl, customer);\r\n        }\r\n    }\r\n\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = {\r\n                name: this.state.name,\r\n                customerNumber: this.state.customerNumber,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail: this.state.contactEmail,\r\n                notes: this.state.notes\r\n              };\r\n\r\n            this.customerPost(customer).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.added'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateCustomerList();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n        //this.props.testFunction();\r\n        //super.componentDidMount();\r\n    };\r\n\r\n    clearValues = () => {\r\n        const customerModalElement = document.querySelector('#modal-form-customer');\r\n        if(!customerModalElement.className.includes(\"is-visible\")) {\r\n            this.setState(this.baseState);\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const modalOpenButton = document.querySelector('.add-customer-button');\r\n        modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n                modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n                buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-customer\"\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + \" *\"}\r\n                            value={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            value={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            value={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + \" *\"}\r\n                            value={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${id}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGetForCustomer = async (serviceUrl, customerNumber) => {\r\n  const url = `${serviceUrl}/${resource}/subscriptions/customer/${customerNumber}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsTickets = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectIdNames = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/nameId/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyProjectIdNames = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/myprojects/nameId/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/projects/admin';\r\nexport const apiAdminProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/projects/myprojects';\r\nexport const apiMyProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiPartnerPost } from '../../api/partners';\r\nimport { apiProjectPost, apiProjectsGet, apiAddPartnerToProject } from '../../api/projects';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getProjects();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getProjects() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const projects = await apiProjectsGet(this.props.serviceUrl);\r\n      this.setState({ projectList: projects });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes\r\n      };\r\n      this.partnerPost(partner).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateCustomerList();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if(!partnerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black'\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-partner-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addPartner')}\r\n        modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-partner\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          {/*<p> {i18n.t('adminDashboard.addPartner.desc')}</p>*/}\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"project-list\"\r\n              name=\"projectId\"\r\n              labelText={i18n.t('adminDashboard.addPartner.projectList') + \" *\"}\r\n              value={this.state.projectId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['projectId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\r\n              {Object.keys(this.props.allProjects).length !== 0\r\n                ? this.props.allProjects.map((projectList, i) => (\r\n                    <SelectItem key={i} text={projectList.name} value={projectList.id}>\r\n                      {projectList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerName') + \" *\"}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"partnerNumber\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + \" *\"}\r\n              value={this.state.partnerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['partnerNumber']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectsGet } from '../../api/projects';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') == -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({ customerList: customers });\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== \"\") {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateCustomerList();\r\n        this.getAllProjects();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if(!projectModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {}\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n  \r\n  render() {\r\n    const customerList = ['Customer1', 'Customer2', 'Customer3'];\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-project\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          {/*<p> {i18n.t('adminDashboard.addProject.desc')} </p>*/}\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"customer-list\"\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList') + \" *\"}\r\n              defaultValue={{ label: \"Select Dept\", value: 0 }}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.props.allCustomers).length !== 0\r\n                ? this.props.allCustomers.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + \" *\"}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + \" *\"}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectGet, apiProjectPut, apiProjectsGet } from '../../api/projects';\r\n\r\nclass EditProjectModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            projects: {},\r\n            customerList: {},\r\n            customerId: '',\r\n            name: '',\r\n            description: '',\r\n            systemId: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail:'',\r\n            notes:'',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if(this.state.name === ''){\r\n          formIsValid = false;\r\n          invalid[\"name\"] = true;\r\n        }\r\n\r\n        //description\r\n        if(this.state.description === ''){\r\n            formIsValid = false;\r\n            invalid[\"description\"] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if(typeof this.state.contactEmail !== \"undefined\"){\r\n          let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n          let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n    \r\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && this.state.contactEmail.indexOf('@@') == -1 && lastDotPos > 2 && (this.state.contactEmail.length - lastDotPos) > 2)) {\r\n            formIsValid = false;\r\n            invalid[\"contactEmail\"] = true;\r\n          }\r\n        }\r\n    \r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n          this.getAllProjects();\r\n          this.getProjectDetails();\r\n        }\r\n      }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customers = await apiCustomersGet(this.props.serviceUrl);\r\n            this.setState({customerList: customers})\r\n        }\r\n    }\r\n\r\n    async getProjectDetails() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\r\n            this.setState({\r\n                name: project.data.name,\r\n                description: project.data.description,\r\n                systemId: project.data.systemId,\r\n                contactName: project.data.contactName,\r\n                contactPhone: project.data.contactPhone,\r\n                contactEmail:project.data.contactEmail,\r\n                notes:project.data.notes,\r\n                modalId: \"modal-form-project-edit-\" + project.data.id,\r\n                buttonId: \"edit-project-button-\" + project.data.id\r\n            })\r\n        }\r\n    }\r\n\r\n    async getAllProjects() {\r\n        const projects = await apiProjectsGet(this.props.serviceUrl);\r\n        this.setState({\r\n          projects: projects.data\r\n        });\r\n      }\r\n\r\n    async projectPut(project) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProjectPut(this.props.serviceUrl, project);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const project = {\r\n                id: this.props.project.id,\r\n                customer: this.props.project.customer,\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                systemId: this.state.systemId,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail: this.state.contactEmail,\r\n                notes: this.state.notes\r\n            }\r\n            for (var i = 0; i < this.props.allProjects.length; i++) {\r\n                if((project.systemId === this.props.allProjects[i].systemId) && (project.id !== this.props.allProjects[i].id) && (project.systemId.trim() !== \"\")) {\r\n                    window.alert('That system id is already in use in another project');\r\n                    return;\r\n                }\r\n            }\r\n            this.projectPut(project).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateProjectList();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.project.name,\r\n                description: this.props.project.description,\r\n                systemId: this.props.project.systemId,\r\n                contactName: this.props.project.contactName,\r\n                contactPhone: this.props.project.contactPhone,\r\n                contactEmail:this.props.project.contactEmail,\r\n                notes:this.props.project.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            this.getCustomers();\r\n            this.getAllProjects();\r\n            this.getProjectDetails();\r\n\r\n            const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\r\n            modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"dropdown-button-button bx--btn bx--btn--ghost edit-project-button-\" + this.props.project.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    {/*<p> {i18n.t('adminDashboard.addProject.desc')} </p>*/}\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput \r\n                            name=\"name\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"} \r\n                            value={this.state.name} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"name\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"description\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectDesc') + \" *\"} \r\n                            value={this.state.description} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"description\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"systemId\" \r\n                            labelText={i18n.t('adminDashboard.addProject.systemId')} \r\n                            value={this.state.systemId}\r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactName\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactName')} \r\n                            value={this.state.contactName} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactPhone\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactPhone')} \r\n                            value={this.state.contactPhone} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactEmail\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactEmail') + \" *\"} \r\n                            value={this.state.contactEmail} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.email')} \r\n                            invalid={this.state.invalid[\"contactEmail\"]} \r\n                        />\r\n                        <TextArea \r\n                            name=\"notes\" \r\n                            labelText={i18n.t('adminDashboard.addProject.notes')} \r\n                            value={this.state.notes} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(EditProjectModal)","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Button } from 'carbon-components-react';\r\nimport EditProjectModal from '../Admin/EditProjectModal'\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass ProjectActionItems extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            showMenu: false\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (!this.state.showMenu) {\r\n          document.addEventListener(\"mousedown\", this.handleOutsideClick, false);\r\n        } else {\r\n          document.removeEventListener(\"mousedown\", this.handleOutsideClick, false);\r\n        }\r\n    \r\n        this.setState(prevState => ({\r\n            showMenu: !prevState.showMenu\r\n        }));\r\n      };\r\n    \r\n    handleOutsideClick = (e) => {\r\n        if (this.node && !this.node.contains(e.target)) { \r\n            this.handleClick();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let search = window.location.search;\r\n        let params = new URLSearchParams(search);\r\n        let projectParam = params.get('project');\r\n        \r\n        if (!this.props.hasSubscription) {\r\n            return(\r\n                <div>\r\n                    <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\r\n                    +\r\n                    </Button>\r\n                    {this.state.showMenu ? \r\n                    <div \r\n                        className=\"menu\" \r\n                        style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n                        ref={node => {\r\n                            this.node = node;\r\n                        }}\r\n                    >\r\n                        <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}} />\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                        <div>\r\n                            <EditProjectModal key={this.props.project.id} allProjects={this.props.allProjects} project={this.props.project} serviceUrl={this.props.serviceUrl} updateProjectList={this.props.updateProjectList}/>\r\n                            <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}} />\r\n                        </div> : null\r\n                        }\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                        <div>\r\n                            <Button kind='ghost' onClick={(e) => this.props.handleDeleteProject(e, this.props.project.id)} style={{display: 'block', width: '100%', color: 'red'}}>Delete</Button>\r\n                            <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}} />\r\n                        </div> : null\r\n                        }\r\n                    </div> : null\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <div>\r\n                    <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\r\n                    +\r\n                    </Button>\r\n                    {this.state.showMenu ? \r\n                    <div \r\n                        className=\"menu\" \r\n                        style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n                        ref={node => {\r\n                            this.node = node;\r\n                        }}\r\n                    >\r\n                        <Link to={`/subscription-details/${this.props.sub.id}`} style={{textDecoration: 'none'}}><Button kind='ghost' style={{display: 'block', width: '100%'}} value=\"View\">View</Button></Link>\r\n                        <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}} />\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                        <div>\r\n                            <EditProjectModal key={this.props.project.id} allProjects={this.props.allProjects} project={this.props.project} serviceUrl={this.props.serviceUrl} updateProjectList={this.props.updateProjectList}/>\r\n                            <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}} />\r\n                        </div> : null\r\n                        }\r\n                        <a href={`/entando-de-app/${this.props.locale}/open_service_ticket.page?project=${this.props.project.id}`} style={{textDecoration: 'none'}}><Button kind='ghost' style={{display: 'block', width: '100%'}} value=\"View\">Open Ticket</Button></a>\r\n                        <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}} />\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                        <div>\r\n                            <Button kind='ghost' onClick={(e) => this.props.handleDeleteProject(e, this.props.project.id)} style={{display: 'block', width: '100%', color: 'red'}}>Delete</Button>\r\n                            <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}} />\r\n                        </div> : null\r\n                        }\r\n                    </div> : null\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(ProjectActionItems);","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, Button } from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport { apiGetCustomersProjects, apiGetMyCustomersProjects, apiDeleteProjectFromCustomer } from '../../api/customers';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Link, HashRouter } from 'react-router-dom';\r\nimport i18n from '../../i18n';\r\nimport EditProjectModal from '../Admin/EditProjectModal'\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport { apiProjectsDelete } from '../../api/projects';\r\nimport ProjectActionItems from '../Admin/ProjectActionItems';\r\n\r\nclass CustomTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      projects: {},\r\n      action: \"Edit\",\r\n      showMenu: {},\r\n     }\r\n     this.headerData = [\r\n      {\r\n        header: i18n.t('customerDashboard.projectName'),\r\n        key: 'projectName',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.partners'),\r\n        key: 'partners',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n          header: i18n.t('customerDashboard.endDate'),\r\n          key: 'endDate',\r\n      },\r\n      {\r\n          header: i18n.t('customerDashboard.openTickets'),\r\n          key: 'openTickets',\r\n      },\r\n      {\r\n        header: i18n.t('customerDetails.notes'),\r\n        key: 'notes',\r\n      },  \r\n      {\r\n          header: i18n.t('customerDashboard.action'),\r\n          key: 'action',\r\n      }\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n    if (authenticated) {\r\n      try {\r\n      var projects;\r\n      if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n        projects = await apiGetCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\r\n      }\r\n      else {\r\n        projects = await apiGetMyCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\r\n      }\r\n      \r\n      this.setState({\r\n          projects: projects\r\n      });\r\n    } catch(error) {\r\n      console.log(error)\r\n    }\r\n    }\r\n    this.render();\r\n}\r\n\r\ncomponentDidMount(){\r\n  const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.fetchData();\r\n    }\r\n}\r\n\r\nupdateProjectList = () => {\r\n  this.fetchData();\r\n}\r\n\r\nshowMenu = (e, id) => {\r\n  var showMenu = {};\r\n  showMenu[String(id)] = !this.state.showMenu[String(id)];\r\n  this.setState({\r\n    showMenu: showMenu\r\n  })\r\n  //document.addEventListener('mousedown', this.closeMenu);\r\n}\r\n\r\ncloseMenu = () => {\r\n  this.setState({ showMenu: false }, () => {\r\n    document.removeEventListener('click', this.closeMenu);\r\n  });  \r\n}\r\n\r\nasync deleteProject(id) {\r\n  const { t, keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  if (authenticated) {\r\n    return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customerNumber, id);\r\n  }\r\n}\r\n\r\nhandleDeleteProject = (e, id) => {\r\n  e.preventDefault();\r\n  if (window.confirm(\"Are you sure you want to delete this project?\")) {\r\n    this.deleteProject(id).then(result => {\r\n      this.setState({\r\n          submitMsg: i18n.t('submitMessages.deleted'),\r\n          submitColour: '#24a148'\r\n      })\r\n      this.props.updateCustomerList();\r\n    }).catch(err => {\r\n      this.setState({\r\n          submitMsg: i18n.t('submitMessages.error'),\r\n          submitColour: '#da1e28'\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <DataTable rows={rowData} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => {\r\n                    if(header.header === i18n.t('customerDetails.notes')) {\r\n                      if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                        return(\r\n                          <TableHeader {...getHeaderProps({ header })}>\r\n                            {header.header}\r\n                          </TableHeader>\r\n                        )\r\n                      }\r\n                    }\r\n                    else {\r\n                      return(\r\n                        <TableHeader {...getHeaderProps({ header })}>\r\n                          {header.header}\r\n                        </TableHeader>\r\n                      )\r\n                    }\r\n                  })}\r\n                  \r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {Object.keys(this.state.projects).length !== 0 ? \r\n                  this.state.projects.data.map((project, index) => {\r\n                    if (project.projectSubscriptions.length === 0) {\r\n                      return(\r\n                        <TableRow key={index} >\r\n                          <TableCell>{project.name}</TableCell>\r\n                          {project.partners.length !== 0 ? \r\n                            <TableCell>\r\n                              {project.partners.map(partner => (\r\n                                <p>{partner.name}</p>\r\n                              ))}\r\n                            </TableCell> \r\n                          : <TableCell>{i18n.t('userMessages.none')}</TableCell>}\r\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                          <TableCell>{project.tickets.length}</TableCell>\r\n                          {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')  ? <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                          <TableCell>\r\n                            <ProjectActionItems serviceUrl={this.props.serviceUrl} hasSubscription={false} project={project} allProjects={this.state.projects.data} handleDeleteProject={this.handleDeleteProject} updateProjectList={this.updateProjectList} />\r\n                          </TableCell>\r\n                      </TableRow>\r\n                      )\r\n                    }\r\n                    else {\r\n                      var sub = project.projectSubscriptions[project.projectSubscriptions.length - 1];\r\n                      return(\r\n                        <TableRow key={index} >\r\n                            <TableCell><Link to={`/subscription-details/${sub.id}`}>{project.name}</Link></TableCell>\r\n                            {project.partners.length !== 0 ? \r\n                              <TableCell>\r\n                                {project.partners.map(partner => (\r\n                                  <p>{partner.name}</p>\r\n                                ))}\r\n                              </TableCell> \r\n                              : <TableCell>{i18n.t('userMessages.none')}</TableCell>}\r\n                            {sub.entandoVersion ? <TableCell>{sub.entandoVersion.name}</TableCell> : <TableCell>{i18n.t('userMessages.none')}</TableCell>}\r\n                            <TableCell>{sub.status}</TableCell>\r\n                            <TableCell>{String(new Date(sub.startDate).toDateString())}</TableCell>\r\n                            <TableCell>{String(new Date(new Date(sub.startDate).setMonth(new Date(sub.startDate).getMonth() + sub.lengthInMonths)).toDateString())}</TableCell>\r\n                            <TableCell>{project.tickets.length}</TableCell>\r\n                            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')  ? <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                            <TableCell>\r\n                              <ProjectActionItems serviceUrl={this.props.serviceUrl} locale={this.props.locale} sub={sub} hasSubscription={true} project={project} allProjects={this.state.projects.data} handleDeleteProject={this.handleDeleteProject} updateProjectList={this.updateProjectList} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                      )\r\n                    }\r\n                  }) : null\r\n              }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: <a href=\"\">Supplier Portal</a>,\r\n       partnerName: 'Leonardo',\r\n       entandoVersion: 5.2,\r\n       startDate: 'October, 2019',\r\n       endDate: 'October, 2022',\r\n       openTickets: '5',\r\n    },\r\n    {\r\n      id: 'b',\r\n      projectName: <a href=\"\">Task Manager</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'July, 2019',\r\n      endDate: 'July, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'c',\r\n      projectName: <a href=\"\">Sales Coordination App</a>,\r\n      partnerName: 'Accenture',\r\n      entandoVersion: 6.2,\r\n      startDate: 'September, 2019',\r\n      endDate: 'September, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'd',\r\n      projectName: <a href=\"\">Website</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'October, 2019',\r\n      endDate: 'October, 2022',\r\n      openTickets: '1',\r\n    }  \r\n];\r\n \r\nexport default withKeycloak(CustomTable);","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiCustomerGet } from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nconst customerData = {\r\n  name: 'Ford',\r\n  id: '5564 4563 3345',\r\n  startDate: '01/01/2020'\r\n};\r\n\r\nclass CustomerDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  async getCustomer() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerNumber);\r\n      this.setState({\r\n        customer: customer.data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, id, startDate } = customerData; //destructuring\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.state.customer.name}\r\n          </p>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.state.customer.id}\r\n          </p>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerGet, apiCustomerPut } from '../../api/customers';\r\n\r\nclass EditCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n\r\n    async updateCustomer(customer) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiCustomerPut(this.props.serviceUrl, customer);\r\n        }\r\n    }\r\n\r\n    getCustomerDetails = (customerId) => {\r\n        this.getCustomer(customerId)\r\n    }\r\n\r\n    async getCustomer(customerId) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n            this.setState({\r\n                name: customer.data.name,\r\n                customerNumber: customer.data.customerNumber,\r\n                contactName: customer.data.contactName,\r\n                contactPhone: customer.data.contactPhone,\r\n                contactEmail:customer.data.contactEmail,\r\n                notes:customer.data.notes,\r\n                modalId: \"modal-form-customer-edit-\" + customer.data.id,\r\n                buttonId: \"edit-customer-button-\" + customer.data.id\r\n              })\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = {\r\n                id: this.props.customer.id,\r\n                name: this.state.name,\r\n                customerNumber: this.state.customerNumber,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail:this.state.contactEmail,\r\n                notes:this.state.notes\r\n            }\r\n            this.updateCustomer(customer).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateCustomerList();\r\n                this.getCustomerDetails(this.props.customer.id);\r\n\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.customer.name,\r\n                customerNumber: this.props.customer.customerNumber,\r\n                contactName: this.props.customer.contactName,\r\n                contactPhone: this.props.customer.contactPhone,\r\n                contactEmail:this.props.customer.contactEmail,\r\n                notes:this.props.customer.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            if (this.props.customerId) {\r\n                this.getCustomerDetails(this.props.customerId);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n              this.getCustomerDetails(this.props.customerId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-customer-button-\" + this.props.customer.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + \" *\"}\r\n                            value={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            value={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            value={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + \" *\"}\r\n                            value={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AccordionItem, Button } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerGet, apiCustomerDelete, apiGetCustomersProjects,  apiGetMyCustomersProjects } from '../../api/customers';\r\nimport { apiGetProjectsUsers } from '../../api/projects';\r\nimport CustomTable from './customDataTable';\r\nimport CustomerDetails from './customerDetails';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\nimport i18n from '../../i18n';\r\n\r\nclass CustomerAccordian extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: {},\r\n            customer: {},\r\n            authenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getCustomersProjects(this.props.customerNumber);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            this.getCustomersProjects(this.props.customerNumber);\r\n        }\r\n      }\r\n\r\n    async getCustomersProjects(id) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customer = await apiCustomerGet(this.props.serviceUrl, id);\r\n\r\n            var projects;\r\n            try {\r\n                if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                    projects = await apiGetCustomersProjects(this.props.serviceUrl, id);\r\n                }\r\n                else {\r\n                    projects = await apiGetMyCustomersProjects(this.props.serviceUrl, id);\r\n                }\r\n\r\n                this.setState({\r\n                    projects: projects.data,\r\n                    customer: customer.data\r\n                })\r\n            } catch(error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    async deleteCustomer() {\r\n        return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\r\n    }\r\n\r\n    handleDelete(e) {\r\n        if (window.confirm(\"Are you sure you want to delete this customer?\")) {\r\n            this.deleteCustomer().then(result => {\r\n                this.props.updateCustomerList();\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                        <CustomerDetails serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} /> : null \r\n                    }\r\n                    <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\r\n                        <div style={{display: 'flex'}}>\r\n                            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') ?\r\n                                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}><Button kind='ghost'>{i18n.t('buttons.viewDetails')}</Button></Link>  : null\r\n                            }\r\n                            {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                                <div style={{display: 'flex'}}>\r\n                                    <EditCustomerModal serviceUrl={this.props.serviceUrl} customer={this.state.customer} key={this.state.customer.id} updateCustomerList={this.props.updateCustomerList} customerId={this.state.customer.id}/>\r\n                                    <Button kind='ghost' style={{color: 'red'}} onClick={() => this.handleDelete()}>{i18n.t('buttons.delete')}</Button>\r\n                                </div>  : null\r\n                            }\r\n                        </div>\r\n                        <CustomTable key={(new Date).getTime()} serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} locale={this.props.locale} updateCustomerList={this.props.updateCustomerList} />\r\n                    </AccordionItem>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Accordion, AccordionItem, PaginationNav, Search, Tile} from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport AddProjectModal from './AddProjectModal'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminCustomersGet, apiMyCustomersGet } from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport { apiProjectsGet, apiMyProjectsGet } from '../../api/projects';\r\n\r\nclass AdminDashboard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: {},\r\n            projects: {},\r\n            customersProjects: {},\r\n            role: '',\r\n            filteredCustomers: {},\r\n            currentPage: 0,\r\n            test: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCustomers();\r\n        this.getProjects();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n          this.getProjects();\r\n        }\r\n      }\r\n\r\n    async getProjects() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            var projects = ''\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                projects = await apiProjectsGet(this.props.serviceUrl);\r\n            }\r\n            else {\r\n                projects = await apiMyProjectsGet(this.props.serviceUrl);\r\n            }\r\n            this.setState({\r\n                projects: projects.data,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            var customers;\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                customers = await apiAdminCustomersGet(this.props.serviceUrl);\r\n            }\r\n            else {\r\n                customers = await apiMyCustomersGet(this.props.serviceUrl);\r\n            }\r\n\r\n            this.setState({\r\n                customers: customers.data,\r\n                filteredCustomers: customers.data\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        if (event.key === 'Enter') {\r\n            const newFilteredState = this.state.customers.filter(customer => customer.name.toLowerCase().includes(event.target.value.toLowerCase()))\r\n            this.setState({\r\n                filteredCustomers: newFilteredState,\r\n                currentPage: 0\r\n            })\r\n        }\r\n        else {\r\n            if (event.target.value === '' || event.target.value === undefined) {\r\n                this.setState({\r\n                    filteredCustomers: this.state.customers\r\n                })\r\n            }\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateCustomerList = () => {\r\n        this.getCustomers();\r\n        this.getProjects();\r\n    }\r\n\r\n    render(){\r\n        var numberOfPages = 1;\r\n        if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n            numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n        }\r\n        else {\r\n            numberOfPages = 1;\r\n        }\r\n        \r\n        const props = () => ({\r\n            loop: Boolean(false),\r\n            page: Number(this.state.currentPage),\r\n            totalItems: Number(numberOfPages),\r\n            itemsShown: Number(1),\r\n            onChange: (event) => this.setState({currentPage: event}),\r\n        });\r\n\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> : \r\n                hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> : \r\n                hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> : \r\n                hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> : \r\n                null}\r\n            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_PARTNER') ?\r\n                <Tile>\r\n                    <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Search onChange={this.handleSearch} id=\"search\" placeHolderText={i18n.t('adminDashboard.searchText')} onKeyPress={this.handleSearch}/>\r\n                        </div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                        <div className=\"bx--col\">\r\n                            \r\n                            <div>\r\n                                <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} allProjects={this.state.projects} />\r\n                                <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} />\r\n                                <AddProjectModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} allCustomers={this.state.customers} />\r\n                            </div>\r\n                        </div> : null}\r\n                    </div>\r\n                </Tile>  \r\n                : null\r\n            }\r\n                    \r\n                <div className=\"form-container\">\r\n                    <Accordion>\r\n                        {Object.keys(this.state.customers).length !== 0 ? this.state.filteredCustomers.map((customer, index) => {\r\n                            // Pagination for Admin and Support roles (5 items per page)\r\n                            var indexOfLastItem = ((this.state.currentPage + 1) * 5) - 1;\r\n                            var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                            var accordionOpened = this.state.customers.length === 1;\r\n                            \r\n                            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                                if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                                    return(\r\n                                        <CustomerAccordian key={customer.id} serviceUrl={this.props.serviceUrl} customerNumber={customer.id} title={customer.name} updateCustomerList={this.updateCustomerList} locale={this.props.locale} accordionOpened={accordionOpened}/>\r\n                                    )\r\n                                }\r\n                                else {\r\n                                    return(null)\r\n                                }\r\n                            }\r\n                            else {\r\n                                return(null)\r\n                            }\r\n                        }) : null}\r\n                    </Accordion>\r\n                    <PaginationNav {...props()} cssClass='pagination-right' />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload =>\r\n  publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n    formUpdate: 'customer.form.update',\r\n    formCreate: 'customer.form.create',\r\n    formDelete: 'customer.form.delete',\r\n  };\r\n  \r\n  export const OUTPUT_EVENT_TYPES = {\r\n    select: 'customer.table.select',\r\n    add: 'customer.table.add',\r\n    error: 'customer.table.error',\r\n    delete: 'customer.table.delete',\r\n  };\r\n  \r\n  export const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminDashboard from '../components/Admin/AdminDashboard';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminDashboardElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminDashboard serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async (serviceUrl ) => {\r\n\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\nexport const apiJiraTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectName, organization) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectName, organization, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, PaginationNav } from 'carbon-components-react';\r\nimport { apiJiraTicketsGet } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectGet, apiAddTicketToProject } from '../../api/projects';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      tickets: {},\r\n      project: {},\r\n      currentTicketingSystem: {},\r\n      currentPage: 0\r\n     }\r\n     this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.description'),\r\n        key: 'description',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      }\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      try {\r\n          const project = await apiProjectGet(this.props.serviceUrl, this.props.projectId);\r\n          const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n          const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n          var tickets = await apiJiraTicketsGet(this.props.serviceUrl, currentTicketingSystem.systemId, project.data.systemId);\r\n          for(var i = 0; i < tickets.data.length; i++) {\r\n            apiAddTicketToProject(this.props.serviceUrl, this.props.projectId, tickets.data[i].id);\r\n          }\r\n\r\n          this.setState({\r\n              tickets: tickets,\r\n              project: project,\r\n              currentTicketingSystem: currentTicketingSystem\r\n          });\r\n      }\r\n      catch(err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  if(authenticated) {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n  if (authenticated && changedAuth) {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n}\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.tickets).length !== 0) {\r\n        numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\r\n    }\r\n\r\n    const paginationProps = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: (event) => this.setState({currentPage: event}),\r\n    });\r\n\r\n    return ( \r\n      <div>\r\n        <DataTable rows={rowData} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer \r\n            title={i18n.t('ticketDetails.listOfTickets')} \r\n            description={Object.keys(this.state.tickets).length !== 0 && Object.keys(this.state.project).length !== 0  ? <a href={this.state.currentTicketingSystem.url.substr(0, this.state.currentTicketingSystem.url.indexOf(\"/rest\")) + \"/browse/\" + this.state.tickets.data[0].systemId + \"?jql=Organizations=\" + this.state.project.data.systemId} style={{textDecoration: 'none'}} target=\"_blank\" >{i18n.t('ticketDetails.tickets')}</a> : <a>{i18n.t('ticketDetails.tickets')}</a>}\r\n          >\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.keys(this.state.tickets).length !== 0 ? this.state.tickets.data.map((ticket, index) => {\r\n                  var indexOfLastItem = ((this.state.currentPage + 1) * 10) - 1;\r\n                  var firstIndexOfCurrentPage = this.state.currentPage * 10;\r\n\r\n                  if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                    return (\r\n                      <TableRow key={ticket.id}>\r\n                        <TableCell key={ticket.id}>{ticket.systemId}</TableCell>\r\n                        <TableCell key={ticket.id}>{ticket.description}</TableCell>\r\n                        <TableCell key={ticket.id}>{ticket.status}</TableCell>\r\n                        <TableCell key={ticket.id}>{ticket.type}</TableCell>\r\n                        <TableCell key={ticket.id}>{ticket.priority}</TableCell>\r\n                        <TableCell key={ticket.id}>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                        <TableCell key={ticket.id}>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                        <TableCell key={ticket.id}><a href={this.state.currentTicketingSystem.url.substr(0, this.state.currentTicketingSystem.url.indexOf(\"/rest\")) + \"/browse/\" + ticket.systemId} target=\"_blank\">{i18n.t('ticketDetails.viewTicket')}</a></TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  }\r\n                  else {\r\n                    return(null)\r\n                  }\r\n                }) : <p></p> }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n      <PaginationNav {...paginationProps()} cssClass='pagination-right' />\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: 'Ticket1',\r\n       project: 'Leonardo',\r\n       entandoVersion: 6.2,\r\n       creationDate: 'October, 2019',\r\n       openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n     },\r\n  \r\n];\r\n \r\nexport default withKeycloak(TicketList);","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/project-subscriptions'\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\n\r\nexport const apiSubscriptionGetAll = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n * \r\n * @param {string} serviceUrl \r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation \r\n * @returns \r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'POST',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/project-subscriptions/mysubscription'\r\nexport const apiGetMySubscription = async (serviceUrl, customerId) => {\r\n    const url = `${serviceUrl}/${myResource}/${customerId}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'GET'\r\n    };\r\n  \r\n    return request(url, options);\r\n  };\r\n\r\n  // Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n    const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null\r\n    };\r\n\r\n    return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${userId}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsername = async (serviceUrl, username) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/username/${username}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea, Select, SelectItem, DatePicker, DatePickerInput} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPut, apiSubscriptionGet } from '../../api/subscriptions';\r\nimport moment from 'moment';\r\n\r\nclass EditSubscriptionModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            level: '',\r\n            status: '',\r\n            lengthInMonths: '',\r\n            startDate: '',\r\n            notes: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.level === 'level') {\r\n            formIsValid = false;\r\n            invalid['level'] = true;\r\n        }\r\n\r\n        if (this.state.status === 'status') {\r\n            formIsValid = false;\r\n            invalid['status'] = true;\r\n        }\r\n\r\n        if (this.state.lengthInMonths === '' || !this.isNumeric(String(this.state.lengthInMonths))) {\r\n            formIsValid = false;\r\n            invalid['lengthInMonths'] = true;\r\n        }\r\n\r\n        if(typeof this.state.startDate !== \"undefined\"){\r\n            if(!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['startDate'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    isNumeric(str) {\r\n        if (typeof str != \"string\")\r\n            return false\r\n        return !isNaN(str) && !isNaN(parseFloat(str))\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const subscriptionRequest = {\r\n                projectSubscription : {\r\n                    id: this.props.subscription.id,\r\n                    level: this.state.level,\r\n                    status: this.state.status,\r\n                    lengthInMonths: this.state.lengthInMonths,\r\n                    startDate: moment(this.state.startDate).format(),\r\n                    notes: this.state.notes,\r\n                    project: this.props.project,\r\n                    entandoVersion: this.props.subscription.entandoVersion\r\n                }\r\n            }\r\n            this.subscriptionPut(subscriptionRequest).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateSubscription();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getSubscriptionDetails();\r\n\r\n        }\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        this.setState({\r\n            startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n        })\r\n    }\r\n\r\n    async getSubscriptionDetails() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const subscription =  await apiSubscriptionGet(this.props.serviceUrl, this.props.subscription.id);\r\n            this.setState({\r\n                level: subscription.data.level,\r\n                status: subscription.data.status,\r\n                lengthInMonths: subscription.data.lengthInMonths,\r\n                startDate: moment(subscription.data.startDate).format('MM/DD/YYYY'),\r\n                notes: subscription.data.notes,\r\n                submitMsg: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    async subscriptionPut(subscription) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProjectSubscriptionPut(this.props.serviceUrl, subscription);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const levelList = ['GOLD', 'PLATINUM'];\r\n        const statusList = ['REQUESTED', 'PENDING', 'ACTIVE', 'EXPIRED'];\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('editSubscription.title')}\r\n                buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary edit-sub-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-sub-edit\"\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                {/*<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>*/}\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <Select\r\n                            name=\"level\"\r\n                            labelText={i18n.t('subscriptionDetails.level') + \" *\"}\r\n                            value={this.state.level}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['level']}\r\n                            >\r\n                            <SelectItem disabled text=\"Select Level\" value=\"level\" />\r\n                            {levelList.map((level, i) => (\r\n                                    <SelectItem key={i} text={level} value={level}>\r\n                                        {level}\r\n                                    </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <Select\r\n                            name=\"status\"\r\n                            labelText={i18n.t('subscriptionDetails.status') + \" *\"}\r\n                            value={this.state.status}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['status']}\r\n                            >\r\n                            <SelectItem disabled text=\"Select Status\" value=\"status\" />\r\n                            {statusList.map((status, i) => (\r\n                                <SelectItem key={i} text={status} value={status}>\r\n                                    {status}\r\n                                </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.startDate') + \" *\"}\r\n                                //onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')}\r\n                                invalid={this.state.invalid['startDate']}\r\n                            />\r\n                        </DatePicker>\r\n                        <TextInput\r\n                            name=\"lengthInMonths\"\r\n                            labelText={i18n.t('subscriptionDetails.lengthInMonths') + \" *\"}\r\n                            value={this.state.lengthInMonths}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.number')}\r\n                            invalid={this.state.invalid['lengthInMonths']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addProject.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditSubscriptionModal)\r\n\r\n\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiSubscriptionGet, apiGetMySubscription } from '../../api/subscriptions'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiUsersGet } from '../../api/portalusers';\r\nimport { apiGetProjectsUsers, apiProjectGet } from '../../api/projects'; \r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport EditSubscriptionModal from '../Admin/EditSubscriptionModal';\r\nimport i18n from '../../i18n';\r\n\r\nconst subscriptionData = {\r\n    description: 'Entando Product Support Subscription Suplier Portal',\r\n    commitment: 'Leonardo',\r\n    type: 'Product Support Subscription Entando Platform',\r\n    quantityRequest: '1(8 Core)',\r\n    components: '',\r\n    level: 'Gold',\r\n    startDate: 'May 2019',\r\n    endDate: 'May 2020',\r\n    license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            subscription: {},\r\n            users: {},\r\n            project: {},\r\n            customer: {}\r\n        }\r\n    }\r\n\r\n    async getSubscription() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            try {\r\n                var subscription;\r\n                var users = '';\r\n                if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                    subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n                    var project = '';\r\n                    if (subscription.data.project) {\r\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\r\n                        users = await apiGetProjectsUsers(this.props.serviceUrl, project.data.id)\r\n                    }\r\n                }\r\n                else if (hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                    subscription = await apiGetMySubscription(this.props.serviceUrl, this.props.match.params.id);\r\n                    var project = '';\r\n                    if (subscription.data.project) {\r\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\r\n                    }\r\n                }\r\n                this.setState({\r\n                    subscription: subscription,\r\n                    project: project,\r\n                    customer: project.customer,\r\n                    users: users,\r\n                    loading: false\r\n                })\r\n            }\r\n            catch(err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSubscription = () => {\r\n        this.getSubscription();\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.getSubscription();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.getSubscription();\r\n            }\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { description, commitment, type, quantityRequest, components, level, startDate, endDate, license } = subscriptionData\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n                    return (\r\n                        <div className=\"subscription-details\">\r\n                            <div>\r\n                            <Tile>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <p><strong>{i18n.t('customerDashboard.customerName')}:</strong> {this.state.project.data.customer.name}</p>\r\n                                            <p><strong>{i18n.t('customerDashboard.projectName')}:</strong> {this.state.project.data.name}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.description')}:</strong> {this.state.subscription.data.project.description}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                                            {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? \r\n                                                <>\r\n                                                    {this.state.project.data.partners.map((partner, index) => (\r\n                                                        <> {index === this.state.project.data.partners.length - 1 ? partner.name : partner.name + \", \"} </>\r\n                                                    ))}\r\n                                                </>\r\n                                                : <> None </>\r\n                                            }\r\n                                            </p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}</p>\r\n                                            {(hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) ?\r\n                                                <p><strong>{i18n.t('subscriptionDetails.notes')}:</strong> {this.state.subscription.data.notes}</p> : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"bx--col\">\r\n                                            <p><strong>{i18n.t('subscriptionDetails.status')}:</strong> {this.state.subscription.data.status}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.level')}:</strong> {this.state.subscription.data.level}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.startDate')}:</strong> {String(new Date(this.state.subscription.data.startDate).toDateString())}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.endDate')}:</strong> {String(new Date(new Date(this.state.subscription.data.startDate).setMonth(new Date(this.state.subscription.data.startDate).getMonth() + this.state.subscription.data.lengthInMonths)).toDateString())}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}</p>\r\n                                            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                                                <>\r\n                                                    <p><strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\r\n                                                    {this.state.project.data !== '' && Object.keys(this.state.users.data).length !== 0 ?\r\n                                                        <>\r\n                                                            {this.state.users.data.map((user, index) => (\r\n                                                                <> {index === this.state.users.data.length - 1 ? user.username : user.username + \", \"} </>\r\n                                                            ))}\r\n                                                        </>\r\n                                                        : <> None </>\r\n                                                    }\r\n                                                    </p>\r\n                                                </> : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                                    <EditSubscriptionModal project={this.state.project.data} subscription={this.state.subscription.data} serviceUrl={this.props.serviceUrl} updateSubscription={this.updateSubscription}/>\r\n                                : null}\r\n                            </Tile>\r\n                            <br/>\r\n                            <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl} />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n                }\r\n            }\r\n            else {\r\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(Subscription);","import { getDefaultOptions, getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\nconst usersResourceProd = 'admin/realms/entando/users'\r\n//const usersResourceDev = 'admin/realms/jhipster/users'\r\nconst tokenResourceProd = 'realms/entando/protocol/openid-connect/token';\r\n//const tokenResourceDev = 'realms/jhipster/protocol/openid-connect/token';\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${usersResourceProd}`;\r\n  const keycloakBody = {\r\n    client_id: \"admin_cli\",\r\n    username: \"admin\",\r\n    password: \"admin\",\r\n    grant_type: \"password\"\r\n  }\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${tokenResourceProd}`\r\n  );\r\n  const keycloakBody = {\r\n    client_id: \"web_app\",\r\n    username: \"admin\",\r\n    password: \"admin\",\r\n    grant_type: \"password\"\r\n  }\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join(\"&\");\r\n}","import React from 'react';\r\nimport { Tile } from 'carbon-components-react';\r\nimport CustomTable from './customDataTable';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminProjectsGet } from '../../api/projects';\r\nimport { apiAdminCustomerGet, apiGetCustomersProjects } from '../../api/customers'; \r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nclass CustomerProjectList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            projects: {},\r\n            customer: {}\r\n        }\r\n    }\r\n\r\n    async getCustomer() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            try {\r\n                const customer = await apiAdminCustomerGet(this.props.serviceUrl, this.props.match.params.id);\r\n                const projects = await apiGetCustomersProjects(this.props.serviceUrl, customer.data.id);\r\n                this.setState({\r\n                    customer: customer.data,\r\n                    projects: projects.data,\r\n                    loading: false\r\n                })\r\n            }\r\n            catch(err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    updateCustomer = () => {\r\n        this.getCustomer();\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                this.getCustomer();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                this.getCustomer();\r\n            }\r\n        }\r\n      }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                if (Object.keys(this.state.customer).length !== 0) {\r\n                    return (\r\n                        <div>\r\n                            <Tile>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <p><strong>{i18n.t('customerDetails.id')}: </strong> {this.state.customer.id}</p>\r\n                                            <p><strong>{i18n.t('customerDetails.name')}: </strong> {this.state.customer.name}</p>\r\n                                            <p><strong>{i18n.t('customerDetails.notes')}: </strong> {this.state.customer.notes}</p>\r\n                                        </div>\r\n                                        <div className=\"bx--col\">\r\n                                            <p><strong>{i18n.t('customerDetails.contactName')}: </strong> {this.state.customer.contactName}</p>\r\n                                            <p><strong>{i18n.t('customerDetails.contactPhone')}: </strong> {this.state.customer.contactPhone}</p>\r\n                                            <p><strong>{i18n.t('customerDetails.contactEmail')}: </strong> {this.state.customer.contactEmail}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Tile>\r\n                            <CustomTable serviceUrl={this.props.serviceUrl} customerNumber={this.state.customer.id} locale={this.props.locale} />\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return(<p>{i18n.t('userMessages.loading')}...</p>)\r\n                }\r\n            }\r\n            else {\r\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(CustomerProjectList);","import React, { Component } from 'react';\r\nimport { BrowserRouter, HashRouter, Route, Switch } from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\r\nimport { apiKeycloakToken, apiKeycloakUserGet } from '../api/keycloak';\r\nimport { hasKeycloakClientRole } from '../api/helpers';\r\nimport customerDetails from './Customer/customerDetails';\r\nimport CustomerProjectList from './Customer/CustomerProjectList';\r\nimport i18n from '../i18n';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n        \r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_PARTNER') || hasKeycloakClientRole(\"ROLE_CUSTOMER\")) {\r\n                return (\r\n                    <div id=\"entando-customer-portal\">\r\n                        <AuthenticatedView keycloak={keycloak}>\r\n                            <HashRouter>\r\n                                <Switch>\r\n                                    <Route path={\"**/customer-details/:id\"} render={(props) => (\r\n                                        <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\r\n                                    )}/>\r\n                                    <Route path={\"**/subscription-details/:id\"} render={(props) => (\r\n                                        <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\r\n                                    )}/>\r\n                                    <Route path=\"**/\" render={(props) => (\r\n                                        <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\r\n                                    )}/>\r\n                                </Switch>\r\n                            </HashRouter>\r\n                        </AuthenticatedView>\r\n                        <UnauthenticatedView keycloak={keycloak}>\r\n                            <p>{i18n.t('userMessages.unauthorized')}</p>\r\n                        </UnauthenticatedView>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n     }\r\n  }\r\n  \r\nexport default withKeycloak(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminAddCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AddCustomerModal serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\r\n\r\n","import React, {Component} from 'react';\r\nimport { Select, SelectItem} from 'carbon-components-react';\r\nimport CustomerDetails from '../Customer/customerDetails';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport '../../index.scss';\r\n\r\nexport default class RoleCheck extends Component {\r\n    state = {\r\n        roleType: 'customer'\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const roleType = ['Admin', 'Customer'];\r\n        return (\r\n            \r\n                <div className='role-check'>  \r\n                <Select defaultValue=\"role-type\" name=\"roleType\" labelText=\"Select Role(Testing)\" value={this.state.roleType} onChange={this.handleChanges}>\r\n                        <SelectItem\r\n                                text=\"Select Role\"\r\n                                value=\"role-type\"\r\n                        />\r\n                        {roleType.map((roleType, i) => <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>{roleType}</SelectItem>)}\r\n                        </Select>\r\n                    { this.renderForm()}\r\n                </div>\r\n            \r\n            );\r\n    }\r\n\r\n    // Render Dashboard based on role\r\n    renderForm() {\r\n        if (this.state.roleType === 'customer') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Customer Portal</h3>\r\n                <CustomerDetails />\r\n                <CustomTable />\r\n            </div>\r\n        )\r\n        if (this.state.roleType === 'admin') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Admin View</h3>\r\n                <AdminDashboard />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport RoleCheck from '../components/Admin/RoleCheck';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass AdminRoleCheckElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <RoleCheck serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\r\n\r\n//export default AdminRoleCheckElement;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomDataTable from '../components/Customer/customDataTable';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomDataTableElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomDataTable serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('custom-datatable-widget', CustomDataTableElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomerDetails from '../components/Customer/customerDetails';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomerDetailsElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomerDetails serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Subscription from '../components/SubscriptionDetails/subscription';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass SubscriptionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Subscription serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-widget', SubscriptionElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, Select, SelectItem, Button, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminProjectsGet, apiMyProjectsGet, apiGetProjectSubscriptions } from '../../api/projects';\r\nimport { apiJiraTicketPost } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\n\r\nclass OpenTicket extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading: true,\r\n            project: {},\r\n            projects: [],\r\n            systemId: '',\r\n            type: 'Bug',\r\n            description: '',\r\n            priority: 'Medium',\r\n            status: 'To Do',\r\n            createDate: '',\r\n            updateDate: '',\r\n            role: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n        this.types = [\"Bug\", \"Task\"];\r\n        this.priorities = ['Highest', 'High', 'Medium', 'Low', 'Lowest'];\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.project.systemId === undefined || this.state.project.systemId === 'project-list'){\r\n          formIsValid = false;\r\n          invalid['project'] = true;\r\n        }\r\n\r\n        if(this.state.type === '' || this.state.type === 'Select'){\r\n            formIsValid = false;\r\n            invalid['type'] = true;\r\n        }\r\n\r\n        if(this.state.description === '' || this.state.description === 'Select'){\r\n            formIsValid = false;\r\n            invalid['description'] = true;\r\n        }\r\n\r\n        if(this.state.priority === '' || this.state.priority === 'Select'){\r\n            formIsValid = false;\r\n            invalid['priority'] = true;\r\n        }\r\n\r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n\r\n        if (name === \"project\" && value != '' && value != 'project-list') {\r\n            this.setState({\r\n                project: JSON.parse(value),\r\n            })\r\n        }\r\n        else {\r\n            this.setState({ [name]: value });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            // check if project has subscription \r\n            this.fetchProjectSubscription(this.state.project.id).then(result => {\r\n                // if project has subscription, create ticket\r\n                if(result.data.length > 0) {\r\n                    this.createTicket().then(res => {\r\n                        this.setState({\r\n                            submitMsg: i18n.t('submitMessages.created'),\r\n                            submitColour: '#24a148'\r\n                        })\r\n                    }).catch(err => {\r\n                        this.setState({\r\n                            submitMsg: i18n.t('submitMessages.ticketError'),\r\n                            submitColour: '#da1e28'\r\n                        })\r\n                    });\r\n                }\r\n                // if no subscriptions, don't create ticket\r\n                else {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.subscriptionRequired'),\r\n                        submitColour: '#da1e28'\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    async fetchProjectSubscription(projectId) {\r\n        return await apiGetProjectSubscriptions(this.props.serviceUrl, projectId);\r\n    }\r\n\r\n    async fetchProjects() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                var projects = await apiAdminProjectsGet(this.props.serviceUrl)\r\n                let search = window.location.search;\r\n                let params = new URLSearchParams(search);\r\n                let projectParam = params.get('project');\r\n                if (projectParam) {\r\n                    projects.data.forEach((project) => { \r\n                        if (String(project.id) === projectParam) {\r\n                            projects = project;\r\n                            this.setState({\r\n                                projects: [projects]\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        projects: projects.data\r\n                    })\r\n                }\r\n            }\r\n            else if (hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                var projects = await apiAdminProjectsGet(this.props.serviceUrl)\r\n                let search = window.location.search;\r\n                let params = new URLSearchParams(search);\r\n                let projectParam = params.get('project');\r\n                if (projectParam) {\r\n                    projects.data.forEach((project) => { \r\n                        if (String(project.id) === projectParam) {\r\n                            projects = project;\r\n                            this.setState({\r\n                                projects: [projects]\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        projects: projects.data\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        this.render();\r\n    }\r\n\r\n    async createTicket() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            const ticket = {\r\n                systemId: this.state.project.systemId,\r\n                type: this.state.type,\r\n                description: this.state.description,\r\n                priority: this.state.priority,\r\n                status: 'To Do',\r\n                // these dates are just placeholder to validate the POST request (date will be updated in the backend)\r\n                createDate: '2021-02-22T14:14:09-05:00',\r\n                updateDate: '2021-02-22T14:14:09-05:00'\r\n            }\r\n            return await apiJiraTicketPost(this.props.serviceUrl, this.state.ticketingSystem.systemId, this.state.project.systemId, ticket);\r\n            //const addedTicket = await apiAddTicketToProject(this.props.serviceUrl, this.state.project.id, result.data.id);\r\n        }\r\n    }\r\n\r\n    async getTicketingSystem() {\r\n        if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n            const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n            const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n            this.setState({\r\n                ticketingSystem: currentTicketingSystem\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.fetchProjects();\r\n            this.getTicketingSystem();\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchProjects();\r\n            this.getTicketingSystem();\r\n            this.setState({\r\n                loading: false\r\n              });\r\n        }\r\n    }\r\n        \r\n    render() {\r\n        if (!this.state.loading && this.state.projects.length !== 0) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                return (\r\n                    <div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> : \r\n                        null}\r\n                        <div className=\"form-container\">\r\n                            <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                            <Form onSubmit={this.handleFormSubmit}>\r\n                                <div className=\"form-desc\">\r\n                                    <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\r\n                                    <p>{i18n.t('supportTicketForm.desc')}</p>\r\n                                </div>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <Select \r\n                                                name=\"project\"\r\n                                                labelText={i18n.t('supportTicketForm.selectProject') + \" *\"} \r\n                                                value={JSON.stringify(this.state.project)} \r\n                                                onChange={this.handleChanges}\r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['project']} \r\n                                            >\r\n                                                {/*<SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />*/}\r\n                                                {Object.keys(this.state.projects).length !== 0 ? this.state.projects.map((project, i) => {\r\n                                                        return (\r\n                                                            <SelectItem key={i} text={project.name} value={JSON.stringify(project)}>{project.name}</SelectItem>\r\n                                                        )\r\n                                                }) : null}\r\n                                            </Select>\r\n                                            <Select \r\n                                                name=\"type\" \r\n                                                labelText={i18n.t('supportTicketForm.type') + \" *\"} \r\n                                                value={this.state.type} \r\n                                                onChange={this.handleChanges}\r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['type']} \r\n                                            >\r\n                                                {this.types.map((type, i) => (\r\n                                                    <SelectItem key={i} text={type} value={type}>{type}</SelectItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                            <Select \r\n                                                name=\"priority\" \r\n                                                labelText={i18n.t('supportTicketForm.priority') + \" *\"} \r\n                                                value={this.state.priority}\r\n                                                onChange={this.handleChanges}\r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['priority']} \r\n                                            >\r\n                                                {this.priorities.map((priority, i) => (\r\n                                                    <SelectItem key={i} text={priority} value={priority}>{priority}</SelectItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <TextArea \r\n                                                labelText={i18n.t('supportTicketForm.ticketDescription') + \" *\"} \r\n                                                placeholder={i18n.t('supportTicketForm.addticketDescription')} \r\n                                                name=\"description\" \r\n                                                value={this.state.description} \r\n                                                onChange={this.handleChanges}  \r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['description']} \r\n                                            />\r\n                                            <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}  </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>    \r\n                );\r\n            }\r\n            else {\r\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(OpenTicket);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsOpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n       <ul id='navigation'>\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/subscription-details\">Subscription Details</NavLink></li>\r\n          <li><NavLink to=\"/subscription\">New or Renew Subscription</NavLink></li>\r\n          <li><NavLink to=\"/service-ticket\">Open Service Ticket</NavLink></li>\r\n          <li><NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink></li>\r\n          <li><NavLink to=\"/manage-users\">Manage Users</NavLink></li>\r\n          <li><NavLink to=\"/configuration-settings\">Configuration Settings</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n \r\nexport default Navigation;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass NavigationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Navigation serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('navigation-widget', NavigationElement);\r\n","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\nimport i18n from '../../i18n';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        enhancementDescription: '',\r\n        invalid: {}\r\n    };\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.ticketNo === ''){\r\n          formIsValid = false;\r\n          invalid['ticketNo'] = true;\r\n        }\r\n\r\n        if(this.state.customerName === ''){\r\n            formIsValid = false;\r\n            invalid['customerName'] = true;\r\n        }\r\n\r\n        if(this.state.projectName === ''){\r\n            formIsValid = false;\r\n            invalid['projectName'] = true;\r\n        }\r\n\r\n        if(this.state.openedBy === ''){\r\n            formIsValid = false;\r\n            invalid['openedBy'] = true;\r\n        }\r\n\r\n        if(this.state.partnerName === ''){\r\n            formIsValid = false;\r\n            invalid['partnerName'] = true;\r\n        }\r\n\r\n        if(this.state.enhancementDescription === ''){\r\n            formIsValid = false;\r\n            invalid['enhancementDescription'] = true;\r\n        }\r\n\r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            // placeholder\r\n        }\r\n    };\r\n      \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">{i18n.t('enhancementForm.title')}</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>{i18n.t('enhancementForm.formTitle')}</h4>\r\n                            <p>{i18n.t('enhancementForm.desc')}</p>\r\n                        </div>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"ticketNo\" \r\n                                        labelText={i18n.t('enhancementForm.ticketNumber')} \r\n                                        value={this.state.ticketNo} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['ticketNo']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"projectName\" \r\n                                        labelText={i18n.t('enhancementForm.projectName')} \r\n                                        value={this.state.projectName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['projectName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"priority\" \r\n                                        labelText={i18n.t('enhancementForm.priority')} \r\n                                        value={this.state.priority} \r\n                                        onChange={this.handleChanges}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"customerName\" \r\n                                        labelText={i18n.t('enhancementForm.customerName')} \r\n                                        value={this.state.customerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['customerName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"openedBy\" \r\n                                        labelText={i18n.t('enhancementForm.ticketOpenedBy')} \r\n                                        value={this.state.openedBy} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['openedBy']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"partnerName\" \r\n                                        labelText={i18n.t('enhancementForm.partnerName')} \r\n                                        value={this.state.partnerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['partnerName']} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextArea \r\n                                        labelText={i18n.t('enhancementForm.enhancementDescription')} \r\n                                        placeholder={i18n.t('enhancementForm.addenhancementDescription')} \r\n                                        name=\"enhancementDescription\"  \r\n                                        value={this.state.enhancementDescription} \r\n                                        onChange={this.handleChanges}  \r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['enhancementDescription']} \r\n                                    />\r\n                                    <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsEnhancementRequestElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <EnhancementRequest serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport retargetEvents from 'react-shadow-dom-retarget-events';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl} locale={locale} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('app-element', AppElement);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketList from '../components/SubscriptionDetails/TicketList';\r\nimport '../index.scss'\r\n//import './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketListCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketList serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticket-list-widget', TicketListCustomerElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\nimport { apiTicketingSystemPost, apiTicketingSystemsGet, apiTicketingSystemPut, apiTicketingSystemDelete } from '../../../api/ticketingsystem';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            ticketingSystem: '',\r\n            ticketingSystemType:'',\r\n            url: '',\r\n            serviceAccount: '',\r\n            serviceAccount: '',\r\n            systemId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async createTicketingSystem() {\r\n        const ticketingSystem = {\r\n            url: this.state.url,\r\n            serviceAccount: this.state.serviceAccount,\r\n            serviceAccountSecret: this.state.serviceAccountSecret,\r\n            systemId: this.state.systemId\r\n        }\r\n        return await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem);\r\n    }\r\n\r\n    async updateTicketingSystem() {\r\n        const ticketingSystem = {\r\n            id: this.state.ticketingSystem.id,\r\n            url: this.state.url,\r\n            serviceAccount: this.state.serviceAccount,\r\n            serviceAccountSecret: this.state.serviceAccountSecret,\r\n            systemId: this.state.systemId\r\n        }\r\n        return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem);\r\n    }\r\n\r\n    async getTicketingSystems() {\r\n        const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl)\r\n        if (ticketingSystems.data.length > 0) {\r\n            const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n            \r\n            this.setState({\r\n                ticketingSystem: currentTicketingSystem,\r\n                url: currentTicketingSystem.url,\r\n                serviceAccount: currentTicketingSystem.serviceAccount,\r\n                serviceAccountSecret: currentTicketingSystem.serviceAccountSecret,\r\n                systemId: currentTicketingSystem.systemId\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getTicketingSystems();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.getTicketingSystems();\r\n        }\r\n    }\r\n\r\n    async deleteTicketingSystem() {\r\n        return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n    }\r\n\r\n    handleDelete(e) {\r\n        if (window.confirm(\"Are you sure you want to delete this ticketing system?\")) {\r\n            this.deleteTicketingSystem().then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.deleted'),\r\n                    submitColour: '#24a148'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.ticketingSystem === '') {\r\n            this.createTicketingSystem().then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.created'),\r\n                    submitColour: '#24a148'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n        else {\r\n            this.updateTicketingSystem().then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    render() { \r\n        const ticketingSystem = ['Jira', 'Other'];\r\n        if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n            return (\r\n                <div className=\"cp-form\">\r\n                    <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <Select defaultValue=\"ticketing-system\" name=\"ticketingSystemType\" labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')} value={this.state.ticketingSystemType} onChange={this.handleChanges}>\r\n                                        <SelectItem\r\n                                            text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                            value=\"ticketing-system\"\r\n                                        />\r\n                                        {ticketingSystem.map((ticketingSystem, i) => <SelectItem key={i} text={ticketingSystem} value={ticketingSystem.toLowerCase()}>{ticketingSystem}</SelectItem>)}\r\n                                    </Select>\r\n                                    <TextInput name=\"serviceAccount\" labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')} value={this.state.serviceAccount} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"systemId\" labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')} value={this.state.systemId} onChange={this.handleChanges}/>\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput name=\"url\" labelText={i18n.t('adminConfig.integrationTicketingSystem.url')} value={this.state.url} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"serviceAccountSecret\" type=\"password\" labelText={i18n.t('adminConfig.integrationTicketingSystem.password')} value={this.state.serviceAccountSecret} onChange={this.handleChanges}/>\r\n                                </div>\r\n                            </div>\r\n                            <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\r\n                            {this.state.ticketingSystem ?\r\n                                <Button kind=\"danger\" onClick={() => this.handleDelete()}> Delete </Button> : null\r\n                            }\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n        // Unauthorized\r\n        else {\r\n            return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n        }\r\n    }\r\n}\r\n \r\nexport default withKeycloak(TicketingSystem);","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'PUT',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'POST',\r\n      body: productVersion ? JSON.stringify(productVersion) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n\r\n    this.baseState = this.state\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion().then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateProductVersions();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if(!customerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState(this.baseState);\r\n    }\r\n  }\r\n\r\n  handleStartDateChange = (date) => {\r\n    this.setState({\r\n        startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n    })\r\n  }\r\n\r\n  handleEndDateChange = (date) => {\r\n    this.setState({\r\n        endDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-product-version\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          <p> {i18n.t('adminDashboard.addProductVersion.desc')} </p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass EditProjectModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if(this.state.name === ''){\r\n          formIsValid = false;\r\n          invalid[\"name\"] = true;\r\n        }\r\n\r\n        if(typeof this.state.startDate !== \"undefined\"){\r\n            if(!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['startDate'] = true;\r\n            }\r\n        }\r\n\r\n        if(typeof this.state.endDate !== \"undefined\"){\r\n            if(!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['endDate'] = true;\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            this.getVersionDetails();\r\n        }\r\n      }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleStartDateChange = (date) => {\r\n        this.setState({\r\n            startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n        })\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        this.setState({\r\n            endDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n        })\r\n    }\r\n\r\n\r\n    async getVersionDetails() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n            this.setState({\r\n                name: version.data.name,\r\n                startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n                endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n                modalId: \"modal-form-version-edit-\" + version.data.id,\r\n                buttonId: \"edit-version-button-\" + version.data.id\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    async versionPut(version) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProductVersionPut(this.props.serviceUrl, version);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const version = {\r\n                id: this.props.version.id,\r\n                name: this.state.name,\r\n                startDate: moment(this.state.startDate).format(),\r\n                endDate: moment(this.state.endDate).format()\r\n            }\r\n            this.versionPut(version).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateProductVersions();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getVersionDetails();\r\n            const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n            modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-version-button-\" + this.props.version.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid[\"name\"]}\r\n                        />\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.startDate') + \" *\"}\r\n                                onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')}\r\n                                invalid={this.state.invalid['startDate']}\r\n                            />\r\n                        </DatePicker>\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange} name=\"endDate\" value={this.state.endDate}>\r\n                            <DatePickerInput\r\n                                name=\"endDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.endDate') + \" *\"}\r\n                                onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')}\r\n                                invalid={this.state.invalid['endDate']}\r\n                            />\r\n                        </DatePicker>\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(EditProjectModal)\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  ToggleSmall,\r\n  Button,\r\n  AccordionItem,\r\n  Accordion\r\n} from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport EditCustomerModal from '../EditCustomerModal';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        data: productVersions\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(\"Are you sure you want to delete this Entando version?\")) {\r\n      this.deleteVersion(id).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.updateProductVersions();\r\n      }).catch(err => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28'\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  }\r\n\r\n  async handleToggleChange(id) {\r\n    await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.data).length !== 0\r\n                      ? this.state.data.data.map((productVersion, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{productVersion.name}</TableCell>\r\n                            <TableCell>\r\n                              <ToggleSmall\r\n                                onClick={() => this.handleToggleChange(productVersion.id)}\r\n                                aria-label=\"toggle button\"\r\n                                id={productVersion.id}\r\n                                defaultToggled={productVersion.status ? true : false}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{productVersion.startDate}</TableCell>\r\n                            <TableCell>{productVersion.endDate}</TableCell>\r\n                            <TableCell>\r\n                              <div style={{display: 'flex'}}>\r\n                                <EditVersionModal key={productVersion.id} version={productVersion} serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n                                <a onClick={(e) => this.handleDeleteVersion(e, productVersion.id)} href=\"\" style={{display: 'flex', marginTop: '12px'}}>\r\n                                  <SubtractAlt16 fill=\"red\" style={{marginTop: '4px'}} />\r\n                                  <p>{i18n.t('buttons.delete')}</p>\r\n                                </a>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate'\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n}\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022'\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <ToggleSmall aria-label=\"toggle button\" id=\"status-2\" />,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023'\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024'\r\n  }\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import React from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass AdminConfiguration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n    this.adminConfig = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />\r\n      }\r\n    ];\r\n  }\r\n\r\ncomponentDidMount() {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  if (authenticated) {\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  }\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n  if (authenticated && changedAuth) {\r\n    this.setState({\r\n      loading: false\r\n    });\r\n  }\r\n}\r\n\r\nrender() {\r\n  if (!this.state.loading) {\r\n    // Authorized\r\n    if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n      return(\r\n        <div>\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n          <div className=\"form-container\">\r\n            <Tile>\r\n              <p className=\"title\">{i18n.t('adminConfig.title')}</p>\r\n              <p class=\"desc\">{i18n.t('adminConfig.desc')}</p>\r\n            </Tile>\r\n            <Accordion>\r\n              {this.adminConfig.map((item, index) => (\r\n                <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\r\n                  <p>{item.content}</p>\r\n                </AccordionItem>\r\n              ))}\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n    }\r\n  }\r\n  // Loading\r\n  else {\r\n    return(null)\r\n  }\r\n}\r\n\r\n}\r\nexport default withKeycloak(AdminConfiguration);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass AdminConfigurationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminConfiguration serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-configuration-widget', AdminConfigurationElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass OpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('open-ticket-widget', OpenTicketElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport { apiAddUserToProject, apiGetProjectIdNames } from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nclass AssignUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectId: '',\r\n            assignUser: '',\r\n            users: new Map(),\r\n            projects: {},\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloakUrl)).data);\r\n        const projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\r\n        this.setState({\r\n            users,\r\n            projects\r\n        });\r\n    }\r\n\r\n    mapKeycloakUserEmails = keycloakUsers => {\r\n        const usernameEmailMap = new Map();\r\n        keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n        return usernameEmailMap;\r\n    };\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        const { projectId, assignUser } = this.state;\r\n        const formIsValid = this.handleFormValidation();\r\n\r\n        if (formIsValid) {\r\n            this.assignUserToProject(projectId, assignUser).then(res => {\r\n                if (res.status === 201) {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.updated'),\r\n                        submitColour: '#24a148'\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.error'),\r\n                        submitColour: '#da1e28'\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleFormValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n        const { projectId, assignUser } = this.state;\r\n\r\n        //name\r\n        if (projectId === '') {\r\n            formIsValid = false;\r\n            invalid['projectId'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (assignUser === '') {\r\n            formIsValid = false;\r\n            invalid['assignUser'] = true;\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    assignUserToProject = async (projectId, username) => {\r\n        const portalUserId = await this.getPortalUserId({ username, email: this.state.users.get(username) });\r\n        return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n    };\r\n\r\n    getPortalUserId = async keycloakUser => {\r\n        let portalUserId = null;\r\n        try {\r\n            const portalUser = await portalUserApi.apiUserGetByUsername(this.props.serviceUrl, keycloakUser.username);\r\n            portalUserId = portalUser.data.id;\r\n        } catch (e) {\r\n            if (e.message.toLowerCase().includes('not found')) {\r\n                const portalUser = await this.createPortalUser(keycloakUser);\r\n                portalUserId = portalUser.data.id;\r\n            }\r\n        }\r\n\r\n        return portalUserId;\r\n    };\r\n\r\n    createPortalUser = async keycloakUser => {\r\n        return await portalUserApi.apiUserPost(this.props.serviceUrl, { username: keycloakUser.username, email: keycloakUser.email });\r\n    };\r\n\r\n    setupFormComponents() {\r\n        const users = this.state.users;\r\n        const projectIdsNames = this.state.projects;\r\n        let userList, projectList = (userList = null);\r\n\r\n        if (users.size > 0) {\r\n            userList = [...users.keys()].map((assignUser, i) => (\r\n                <SelectItem key={i} text={assignUser} value={assignUser}>\r\n                    {assignUser}\r\n                </SelectItem>\r\n            ));\r\n            userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\" />);\r\n        } else {\r\n            userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\" />;\r\n        }\r\n\r\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\r\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\r\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>\r\n                    test\r\n                </SelectItem>\r\n            ));\r\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\r\n        } else {\r\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\r\n        }\r\n\r\n        return { userList, projectList };\r\n    }\r\n\r\n    render() {\r\n        const { userList, projectList } = this.setupFormComponents();\r\n\r\n        return (\r\n            <div>\r\n                <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"projectId\"\r\n                                    labelText={i18n.t('manageUsers.assign.projectName')}\r\n                                    value={this.state.projectId}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['projectId']}\r\n                                >\r\n                                    {projectList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"assignUser\"\r\n                                    labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                                    value={this.state.assignUser}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['assignUser']}\r\n                                >\r\n                                    {userList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                            {' '}\r\n                            {i18n.t('buttons.submit')}{' '}\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiUsersGet, apiUserDelete } from '../../../api/portalusers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\n\r\nclass DeleteUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            portalUsers: new Map(),\r\n            keycloakUsers: new Map(),\r\n            displayUsers: [],\r\n            filterText: ''\r\n        };\r\n        this.headerData = [\r\n            {\r\n                header: i18n.t('manageUsers.delete.userName'),\r\n                key: 'username',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.userEmail'),\r\n                key: 'email',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.dateAdded'),\r\n                key: 'dateAdded',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.userAccess'),\r\n                key: 'userAccess',\r\n            }\r\n        ];\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const { keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const portalUsers = this.handleMapFormatting((await apiUsersGet(this.props.serviceUrl)).data);\r\n            const keycloakUsers = this.handleMapFormatting((await apiKeycloakUserGet(keycloakUrl)).data);\r\n\r\n            this.setState({\r\n                portalUsers,\r\n                keycloakUsers\r\n            });\r\n\r\n            this.handleUserDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Turns the list of user objects into a map where the key is the unique username.\r\n     */\r\n    handleMapFormatting(users) {\r\n        return new Map(users.map(user => [user.username, user]));\r\n    }\r\n\r\n    handleUserDisplay() {\r\n        const { portalUsers, keycloakUsers } = this.state;\r\n        const portalUsernames = [...portalUsers.keys()];\r\n        const keycloakUserObjects = [...keycloakUsers.values()];\r\n\r\n        const displayUsers = keycloakUserObjects.map(keycloakUser => (\r\n            {\r\n                id:  keycloakUser.username,\r\n                username: keycloakUser.username,\r\n                email: keycloakUser.email,\r\n                dateAdded: `${new Date(keycloakUser.createdTimestamp).toLocaleString('default', { month: 'long'})} ${new Date(keycloakUser.createdTimestamp).getFullYear()}`,\r\n                userAccess: portalUsernames.includes(keycloakUser.username) ? <a onClick={event => this.handleRemoveUser(keycloakUser.username, event)} href=\"\"><SubtractAlt16 fill=\"red\" />{i18n.t('manageUsers.delete.removeUser')}</a> : ''\r\n            }\r\n        ));\r\n\r\n        this.setState({\r\n            displayUsers\r\n        });\r\n    }\r\n\r\n    handleRemoveUser = (username, event) => {\r\n        event.preventDefault();\r\n        const userId = this.state.portalUsers.get(username).id;\r\n        apiUserDelete(this.props.serviceUrl, userId).then(res => {\r\n            if (res.status === 204) {\r\n                const updatedPortalUsers = this.state.portalUsers;\r\n                updatedPortalUsers.delete(username);\r\n                this.setState({\r\n                    portalUsers: updatedPortalUsers\r\n                });\r\n                this.handleUserDisplay();\r\n            } else {\r\n                // TODO: Error message\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataTable rows={this.state.displayUsers} headers={this.headerData}>\r\n                {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                    <TableContainer>\r\n                        <Table {...getTableProps()}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headers.map((header) => (\r\n                                        <TableHeader {...getHeaderProps({ header })}>\r\n                                            {header.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        {row.cells.map((cell) => (\r\n                                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </DataTable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(DeleteUser);","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUser from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass ManageUser extends Component {\r\n  userFunctionality;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUser serviceUrl={this.props.serviceUrl} />,\r\n        open: true\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUser serviceUrl={this.props.serviceUrl} />,\r\n        open: false\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  \r\n    if (authenticated) {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  \r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n  \r\n    if (authenticated && changedAuth) {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            <div className=\"form-container\">\r\n              <Accordion>\r\n                {this.userFunctionality.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\r\n                    <p>{item.content}</p>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return(null)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageUser);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass ManageUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ManageUser serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('manage-user-widget', ManageUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url'\r\n};\r\n\r\nclass AssignUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AssignUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('assign-user-widget', AssignUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass DeleteUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <DeleteUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('delete-user-widget', DeleteUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketingSystemElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketingSystem serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticketing-system-widget', TicketingSystemElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ProductVersionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ProductVersion serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('product-version-widget', ProductVersionElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport { apiGetProjectIdNames, apiGetMyProjectIdNames } from '../../api/projects';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPost, apiRenewSubscription } from '../../api/subscriptions';\r\nimport { apiProductVersionsGet } from '../../api/productVersion';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport { apiAddSubscriptionToProject } from '../../api/projects';\r\nimport moment from 'moment';\r\n\r\nconst subscriptionLevel = {\r\n    GOLD: 'Gold',\r\n    PLATINUM: 'Platinum'\r\n}\r\n\r\nconst subscriptionStatus = {\r\n    requested: 'REQUESTED',\r\n    pending: 'PENDING',\r\n    active: 'ACTIVE',\r\n    expired: 'EXPIRED'\r\n}\r\n\r\nconst subscriptionTypes = ['New', 'Existing'];\r\n\r\nclass SubscriptionForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            subscriptionType: '',\r\n            projectId: '',\r\n            startDate: '',\r\n            subscriptionLevel: '',\r\n            subscriptionLength: '',\r\n            entandoVersionId: '',\r\n            invalid: {},\r\n            projects: {},\r\n            productVersions: [],\r\n            selectedProjectId: '',\r\n            submitSuccess: false,\r\n            submitError: false,\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.fetchData();\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.fetchData();\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    async fetchData() {\r\n        var projects = ''\r\n        if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n            projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\r\n        }\r\n        else {\r\n            projects = (await apiGetMyProjectIdNames(this.props.serviceUrl)).data;\r\n        }\r\n        const productVersions = (await apiProductVersionsGet(this.props.serviceUrl)).data;\r\n\r\n        this.setState({\r\n            projects,\r\n            productVersions\r\n        });\r\n    }\r\n\r\n    isNumeric(str) {\r\n        if (typeof str != \"string\") \r\n            return false\r\n        return !isNaN(str) && !isNaN(parseFloat(str))\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.subscriptionType === '') {\r\n            formIsValid = false;\r\n            invalid['subscriptionType'] = true;\r\n        }\r\n\r\n        if (this.state.projectId === '') {\r\n            formIsValid = false;\r\n            invalid['projectId'] = true;\r\n        }\r\n\r\n        if (typeof this.state.startDate !== \"undefined\") {\r\n            if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n                formIsValid = false;\r\n                invalid[\"startDate\"] = true;\r\n            }\r\n        }\r\n\r\n        if (this.state.subscriptionLength === '' || !this.isNumeric(this.state.subscriptionLength)) {\r\n            formIsValid = false;\r\n            invalid['subscriptionLength'] = true;\r\n        }\r\n\r\n        if (this.state.subscriptionLevel === '') {\r\n            formIsValid = false;\r\n            invalid['level'] = true;\r\n        }\r\n\r\n        if (this.state.entandoVersionId === '') {\r\n            formIsValid = false;\r\n            invalid['entandoVersionId'] = true;\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n        this.setState({\r\n            submitSuccess: false,\r\n            submitError: false\r\n        });\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if (date !== \"\") {\r\n            this.setState({\r\n                startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            submitSuccess: false,\r\n            submitError: false\r\n        });\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            if (this.state.subscriptionType === 'new') {\r\n                this.newSubscription().then(res => {\r\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\r\n                    this.setState({\r\n                        submitSuccess: true,\r\n                        submitError: false,\r\n                        submitColour: '#24a148'\r\n                    });\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        submitSuccess: false,\r\n                        submitError: true,\r\n                        submitColour: '#da1e28'\r\n                    });\r\n                });\r\n            } else if (this.state.subscriptionType === 'existing') {\r\n                this.renewSubscription().then(res => {\r\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\r\n                    this.setState({\r\n                        submitSuccess: true,\r\n                        submitError: false,\r\n                        submitColour: '#24a148'\r\n                    });\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        submitSuccess: false,\r\n                        submitError: true,\r\n                        submitColour: '#da1e28'\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    async newSubscription() {\r\n        const subscriptionRequest = {\r\n            entandoVersionId: this.state.entandoVersionId,\r\n            projectId: this.state.projectId,\r\n            projectSubscription: {\r\n                startDate: new Date(this.state.startDate),\r\n                lengthInMonths: this.state.subscriptionLength,\r\n                level: this.state.subscriptionLevel,\r\n                status: this.subscriptionStatus()\r\n            }\r\n        }\r\n\r\n        return await apiProjectSubscriptionPost(this.props.serviceUrl, subscriptionRequest);\r\n    }\r\n\r\n    async renewSubscription() {\r\n        const subscriptionRequest = {\r\n            entandoVersionId: this.state.entandoVersionId,\r\n            projectId: this.state.projectId,\r\n            projectSubscription: {\r\n                startDate: new Date(this.state.startDate),\r\n                lengthInMonths: this.state.subscriptionLength,\r\n                level: this.state.subscriptionLevel,\r\n                status: this.subscriptionStatus()\r\n            }\r\n        }\r\n\r\n        return await apiRenewSubscription(this.props.serviceUrl, subscriptionRequest);\r\n    }\r\n\r\n    subscriptionStatus() {\r\n        return hasKeycloakClientRole('ROLE_ADMIN') ? subscriptionStatus.active : subscriptionStatus.requested;\r\n    }\r\n\r\n    setupFormComponents() {\r\n        const projectIdsNames = this.state.projects;\r\n        let projectList = null;\r\n\r\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\r\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\r\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>{projectIdsNames[projectId]}</SelectItem>\r\n            ));\r\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\r\n        } else {\r\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\r\n        }\r\n\r\n        const subscriptionLevelList = Object.entries(subscriptionLevel).map(([key, value]) => (\r\n            <SelectItem key={key} text={value} value={key}>{value}</SelectItem>\r\n        ));\r\n        subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\" />)\r\n\r\n        const versionList = this.state.productVersions.map(version => {\r\n            // only allow the user to choose from active entando versions\r\n            if (version.status) {\r\n                return(<SelectItem key={version.id} text={version.name} value={version.id}>{version.name}</SelectItem>)\r\n            }\r\n            else {\r\n                return(null)\r\n            }\r\n        });\r\n        versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\" />)\r\n\r\n        return { projectList, subscriptionLevelList, versionList }\r\n    }\r\n\r\n    renderForm() {\r\n        const formComponents = this.setupFormComponents()\r\n        const { projectList, subscriptionLevelList, versionList } = formComponents;\r\n        let formInputs;\r\n\r\n        if (this.state.subscriptionType === 'new') {\r\n            formInputs = (\r\n                <div>\r\n                    <p><strong>{i18n.t('subscriptionForm.newSubscription')}</strong></p><br />\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Select\r\n                                id=\"projectId\"\r\n                                name=\"projectId\"\r\n                                labelText={i18n.t('subscriptionForm.projectName')}\r\n                                value={this.state.projectId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['projectId']}\r\n                            >\r\n                                {projectList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"subscriptionLevel\"\r\n                                name=\"subscriptionLevel\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel') + \" *\"}\r\n                                value={this.state.subscriptionLevel} onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['level']}\r\n                            >\r\n                                {subscriptionLevelList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"entandoVersionId\"\r\n                                name=\"entandoVersionId\"\r\n                                labelText={i18n.t('subscriptionForm.entandoVersion') + \" *\"}\r\n                                value={this.state.entandoVersionId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['entandoVersionId']}\r\n                            >\r\n                                {versionList}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n                                <DatePickerInput\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    placeholder=\"mm/dd/yyyy\"\r\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\r\n                                    value={this.state.startDate}\r\n                                    //onChange={this.handleChanges}\r\n                                    type=\"text\"\r\n                                    invalidText={i18n.t('validation.invalid.date')}\r\n                                    invalid={this.state.invalid['startDate']}\r\n                                />\r\n                            </DatePicker>\r\n                            <TextInput\r\n                                id=\"subscriptionLength\"\r\n                                name=\"subscriptionLength\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength') + \" *\"}\r\n                                value={this.state.subscriptionLength}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.number')}\r\n                                invalid={this.state.invalid['subscriptionLength']}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.subscriptionType === 'existing') {\r\n            formInputs = (\r\n                <div>\r\n                    <p><strong>{i18n.t('subscriptionForm.renewSubscription')}</strong></p><br />\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Select\r\n                                id=\"projectId\"\r\n                                name=\"projectId\"\r\n                                labelText={i18n.t('subscriptionForm.projectName')}\r\n                                value={this.state.projectId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['projectId']}\r\n                            >\r\n                                {projectList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"subscriptionLevel\"\r\n                                name=\"subscriptionLevel\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel') + \" *\"}\r\n                                value={this.state.subscriptionLevel}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['level']}\r\n                            >\r\n                                {subscriptionLevelList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"entandoVersionId\"\r\n                                name=\"entandoVersionId\"\r\n                                labelText={i18n.t('subscriptionForm.entandoVersion') + \" *\"}\r\n                                value={this.state.entandoVersionId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['entandoVersionId']}\r\n                            >\r\n                                {versionList}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n                                <DatePickerInput\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    placeholder=\"mm/dd/yyyy\"\r\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\r\n                                    value={this.state.startDate}\r\n                                    //onChange={this.handleChanges}\r\n                                    type=\"text\"\r\n                                    invalidText={i18n.t('validation.invalid.date')}\r\n                                    invalid={this.state.invalid['startDate']}\r\n                                />\r\n                            </DatePicker>\r\n                            <TextInput\r\n                                id=\"subscriptionLength\"\r\n                                name=\"subscriptionLength\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength') + \" *\"}\r\n                                value={this.state.subscriptionLength}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.number')}\r\n                                invalid={this.state.invalid['subscriptionLength']}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return formInputs;\r\n    }\r\n\r\n    successErrorMessage() {\r\n        const isAdmin = hasKeycloakClientRole('ROLE_ADMIN');\r\n        const { subscriptionType, submitSuccess, submitError } = this.state;\r\n\r\n        if (subscriptionType === 'new') {\r\n            if (submitSuccess) {\r\n                return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n            } else if (submitError) {\r\n                return this.createFormMessage('newSubError');\r\n            }\r\n        } else {\r\n            if (submitSuccess) {\r\n                return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n            } else if (submitError) {\r\n                return this.createFormMessage('renewSubError');\r\n            }\r\n        }\r\n    }\r\n\r\n    createFormMessage(subMessageKey) {\r\n        return <p style={{color: this.state.submitColour}}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                return (\r\n                    <div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> : \r\n                        null}\r\n                        <div className=\"form-container\">\r\n                            {this.successErrorMessage()}\r\n                            <Form onSubmit={this.handleFormSubmit}>\r\n                                <div className=\"form-desc\">\r\n                                    <h4>{i18n.t('subscriptionForm.formTitle')}</h4>\r\n                                </div>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <Select id=\"subscriptionType\" name=\"subscriptionType\" labelText={i18n.t('subscriptionForm.subscriptionType')} required value={this.state.subscriptionType} onChange={this.handleChanges}>\r\n                                                <SelectItem\r\n                                                    text={i18n.t('subscriptionForm.selectType')}\r\n                                                    value=\"\"\r\n                                                />\r\n                                                {subscriptionTypes.map((subscriptionType, i) => <SelectItem key={i} text={subscriptionType} required value={subscriptionType.toLowerCase()}>{subscriptionType}</SelectItem>)}\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.renderForm()}\r\n                                    {this.state.subscriptionType ? <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}</Button> : ''}\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else {\r\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(SubscriptionForm);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SubsciptionForm from '../components/Forms/SubscriptionForm';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass SubsciptionFormElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <SubsciptionForm serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-form-widget', SubsciptionFormElement);\r\n\r\n"],"sourceRoot":""}