{"version":3,"sources":["api/helpers.js","api/projects.js","auth/KeycloakViews.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","components/__types__/keycloak.js","components/Customer/customDataTable.js","api/customers.js","components/Admin/AddCustomerModal.js","components/Admin/AddPartnerModal.js","components/Admin/AdminDashboard.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminDashboardElement.js","components/Forms/openTicket.js","components/Forms/enhancementRequest.js","components/Forms/SubscriptionForm.js","components/SubscriptionDetails/TicketList.js","components/SubscriptionDetails/subscription.js","components/Admin/ManageUser/AssignUser.js","components/Admin/ManageUser/DeleteUser.js","components/Admin/ManageUser/ManageUser.js","components/Admin/Configuration/TicketingSystem.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","components/Customer/customerDetails.js","components/Admin/RoleCheck.js","components/Navigation/Navigation.js","components/App.js","custom-elements/AdminAddCustomerElement.js","custom-elements/AdminRoleCheckElement.js","custom-elements/CustomDataTableElement.js","custom-elements/CustomerDetailsElement.js","custom-elements/SubscriptionElement.js","custom-elements/FormsSubscriptionElement.js","custom-elements/FormsOpenTicketElement.js","custom-elements/NavigationElement.js","custom-elements/FormsEnhancementRequestElement.js","custom-elements/AppElement.js"],"names":["getDefaultOptions","headers","Headers","Authorization","window","entando","keycloak","authenticated","token","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","data","json","Promise","reject","Error","statusText","resource","apiProjectsGet","serviceUrl","method","apiProjectPost","project","body","JSON","stringify","apiProjectPut","AuthenticatedView","children","initialized","UnauthenticatedView","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","Consumer","this","Component","defaultProps","forwardRef","bool","CustomTable","state","t","projects","setState","render","console","log","fetchData","prevProps","changedAuth","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","title","description","Table","TableHead","TableRow","map","header","TableHeader","TableBody","Object","keys","length","TableCell","name","id","contactName","customer","createDate","tickets","key","projectName","href","partnerName","entandoVersion","startDate","endDate","openTickets","apiCustomersGet","apiCustomerPost","handleChange","e","target","handleSubmit","addCustomer","customerName","customerNumber","customerEmail","systemId","contactPhone","contactEmail","notes","projectSubscriptions","partners","portalUsers","contactNumber","projectCreated","customerCreated","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","className","Form","TextInput","labelText","onChange","AddPartnerModal","label","content","customers","getCustomer","Tile","Search","placeHolderText","Accordion","item","index","AccordionItem","PaginationNav","cssClass","subscribeToWidgetEvent","eventType","eventHandler","addEventListener","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminDashboardElement","mountPoint","document","createElement","unsubscribeFromKeycloakEvent","appendChild","getAttribute","ReactDOM","Provider","HTMLElement","customElements","define","OpenTicket","assignUser","selectRole","handleChanges","input","handleFormSubmit","event","ticketNo","preventDefault","onSubmit","priority","openedBy","TextArea","placeholder","ticketDescription","Button","kind","tabIndex","type","EnhancementRequest","enhancementDescription","SubscriptionForm","customerNo","customerType","subscriptionLevel","subscriptionLength","contactNo","Select","defaultValue","SelectItem","text","i","toLowerCase","renderForm","DatePicker","dateFormat","datePickerType","DatePickerInput","TicketList","changeState","row","cells","cell","creationDate","openTicket","subscriptionData","Subscription","commitment","quantityRequest","components","level","license","AssignUSer","DeleteUser","filterText","userName","userRole","dateAdded","userAccess","onClick","fill","user","ManageUser","toString","TicketingSystem","ticketingSystem","password","ProductVersion","size","entVersion","ToggleSmall","aria-label","defaultToggled","adminConfig","AdminConfiguration","customerData","CustomerDetails","RoleCheck","roleType","Navigation","to","style","marginTop","path","component","exact","AdminAddCustomerElement","AdminRoleCheckElement","CustomDataTableElement","CustomerDetailsElement","SubscriptionElement","FormsSubscriptionElement","FormsOpenTicketElement","NavigationElement","FormsEnhancementRequestElement","AppElement"],"mappings":"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","file":"static/js/main.2889a543.chunk.js","sourcesContent":["export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json'\n  }),\n});\n\nexport const getUrl = (url) => {\n  return `${url}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  const headers = {\n    ...(response.headers.has('X-Total-Count')\n      ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\n      : {}),\n  };\n\n  if (response.status === 204) {\n    return { data: '' };\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? { data: await response.json(), headers }\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/projects';\n\nexport const apiProjectsDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiProjectsGet = async (serviceUrl ) => {\n\n  const url = getUrl(\n    `${serviceUrl}/${resource}`\n  );\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProjectPost = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProjectPut = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.shape({ current: PropTypes.elementType }),\n  PropTypes.shape(null),\n]);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from '../components/__types__/ref';\nimport KeycloakContext from './KeycloakContext';\n\nexport default function withKeycloak(WrappedComponent) {\n  class WithKeycloakComponent extends Component {\n    renderWrappedComponent = value => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\n    };\n\n    render() {\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\n    }\n  }\n\n  \n  WithKeycloakComponent.propTypes = {\n    forwardedRef: refType,\n  };\n  \n\n  WithKeycloakComponent.defaultProps = {\n    forwardedRef: () => {},\n  };\n\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\n}\n","import PropTypes from 'prop-types';\n\nconst keycloakType = PropTypes.shape({\n  initialized: PropTypes.bool,\n  authenticated: PropTypes.bool,\n});\n\nexport default keycloakType;\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport { apiProjectsGet } from '../../api/projects';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport keycloakType from '../../components/__types__/keycloak';\r\n\r\nclass CustomTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      data: {}\r\n     }\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n        var projects = await apiProjectsGet(this.props.serviceUrl);\r\n        this.setState({\r\n            data: projects\r\n        });\r\n    }\r\n    this.render();\r\n}\r\n\r\ncomponentDidMount(){\r\n    console.log()\r\n    this.fetchData();\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return ( \r\n      <div>\r\n        <DataTable rows={rowData} headers={headerData} data={this.state.data}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title=\"Subscriptions\" description=\"In this table there are open subscriptions\">\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {/*\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.id} >\r\n                    {row.cells.map((cell) => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n                */}\r\n                {Object.keys(this.state.data).length !== 0 ? \r\n                  this.state.data.data.map((project) => (\r\n                    <TableRow key={project.id} >\r\n                        <TableCell key={project.id}>{project.name}</TableCell>\r\n                        <TableCell key={project.id}>{project.contactName}</TableCell>\r\n                        <TableCell key={project.id}>{project.customer ? project.customer.id : \"0\"}</TableCell>\r\n                        <TableCell key={project.id}>{project.createDate}</TableCell>\r\n                        <TableCell key={project.id}>{project.createDate}</TableCell>\r\n                        <TableCell key={project.id}>{project.tickets ? project.tickets.length : \"0\"}</TableCell>\r\n                    </TableRow>\r\n                  )) : null\r\n              }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: 'Project Name',\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: 'Partner Name',\r\n    key: 'partnerName',\r\n  },\r\n  {\r\n    header: 'Entando Version',\r\n    key: 'entandoVersion',\r\n  },\r\n  {\r\n    header: 'Start Date',\r\n    key: 'startDate',\r\n  },\r\n  {\r\n      header: 'End Date',\r\n      key: 'endDate',\r\n  },\r\n  {\r\n      header: 'Open Tickets',\r\n      key: 'openTickets',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: <a href=\"\">Supplier Portal</a>,\r\n       partnerName: 'Leonardo',\r\n       entandoVersion: 5.2,\r\n       startDate: 'October, 2019',\r\n       endDate: 'October, 2022',\r\n       openTickets: '5',\r\n    },\r\n    {\r\n      id: 'b',\r\n      projectName: <a href=\"\">Task Manager</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'July, 2019',\r\n      endDate: 'July, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'c',\r\n      projectName: <a href=\"\">Sales Coordination App</a>,\r\n      partnerName: 'Accenture',\r\n      entandoVersion: 6.2,\r\n      startDate: 'September, 2019',\r\n      endDate: 'September, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'd',\r\n      projectName: <a href=\"\">Website</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'October, 2019',\r\n      endDate: 'October, 2022',\r\n      openTickets: '1',\r\n    }  \r\n];\r\n \r\nexport default withKeycloak(CustomTable);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomersDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async (serviceUrl ) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport { ModalWrapper, Form, TextInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost, apiCustomerPut } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectPut } from '../../api/projects';\r\n\r\n\r\nclass AddCustomerModal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customerName: \"\",\r\n            customerNumber: \"\",\r\n            customerEmail: \"\"\r\n        }\r\n    }\r\n\r\n    async addCustomer() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        console.log(keycloak);\r\n        if (authenticated) {\r\n            var project = {\r\n                name: \"Test Project 1\",\r\n                description: \"string\",\r\n                systemId: \"JAT\",\r\n                contactName: \"Test\",\r\n                contactPhone: \"123-123-1234\",\r\n                contactEmail: \"test@gmail.com\",\r\n                notes: \"string\",\r\n                projectSubscriptions: null,\r\n                tickets: null,\r\n                partners: null,\r\n                portalUsers: null,\r\n                customer: null\r\n            }\r\n            \r\n            const customer = {\r\n                name: this.state.customerName,\r\n                contactName: this.state.customerName,\r\n                customerNumber: this.state.customerNumber,\r\n                contactNumber: this.state.customerNumber,\r\n                contactEmail: this.state.customerEmail\r\n            }\r\n            \r\n            // create project when we create a customer\r\n            console.log(this.props.serviceUrl)\r\n            const projectCreated = await apiProjectPost(this.props.serviceUrl, project);\r\n            const customerCreated = await apiCustomerPost(this.props.serviceUrl, customer);\r\n\r\n            project.id = projectCreated.data.id;\r\n            project.customer = {\r\n                id: customerCreated.data.id\r\n            }\r\n\r\n            // update project with customer\r\n            await apiProjectPut(this.props.serviceUrl, project);\r\n\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        this.addCustomer();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ModalWrapper\r\n                buttonTriggerText=\"Add a customer + \"\r\n                modalHeading=\"Add a new customer\"\r\n                buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary\"\r\n                className=\"modal-form\"\r\n                handleSubmit={this.handleSubmit}\r\n            >\r\n            <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n            <Form>\r\n                    <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChange} />\r\n                    <TextInput name=\"customerNumber\" labelText=\"Customer Number\" value={this.state.customerNumber} onChange={this.handleChange} />\r\n                    <TextInput name=\"customerEmail\" labelText=\"Customer Email\" value={this.state.customerEmail} onChange={this.handleChange} />\r\n                </Form>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal); ","import React from 'react';\r\nimport { ModalWrapper, Form, TextInput } from 'carbon-components-react';\r\n  \r\nconst AddPartnerModal = () => (\r\n    <ModalWrapper\r\n        buttonTriggerText=\"Add a partner + \"\r\n        modalHeading=\"Add a new partner\"\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary\"\r\n        className=\"modal-form\"\r\n    >\r\n    <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n       <Form>\r\n            <TextInput name=\"partnerName\" labelText=\"Partner Name\" value='' onChange='' />\r\n            <TextInput name=\"partnerNumber\" labelText=\"Partner Number\" value='' onChange='' />\r\n            <TextInput name=\"partnerEmail\" labelText=\"Partner Email\" value='' onChange='' />\r\n        </Form>\r\n    </ModalWrapper>\r\n);\r\n\r\nexport default AddPartnerModal; ","import React from 'react';\r\nimport { Accordion, AccordionItem, PaginationNav, Search, Tile} from 'carbon-components-react';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost, apiCustomerPut, apiCustomersGet } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectPut } from '../../api/projects';\r\n\r\nconst customer = [\r\n    {\r\n        label: <div><h4>Blue Cross Subscription</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <CustomTable />\r\n    },\r\n    {\r\n        label: <div><h4>Ford</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <CustomTable />\r\n    },\r\n    {\r\n        label: <div><h4>Veriday</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <CustomTable />\r\n    }\r\n]\r\n\r\nclass AdminDashboard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: \"\",\r\n            projects: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCustomer();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomer();\r\n        }\r\n      }\r\n\r\n    async getCustomer() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customers = await apiCustomersGet(this.props.serviceUrl);\r\n            this.setState({\r\n                customers: customers\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        //console.log(this.state.customers)\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                <Tile>\r\n                    <h4>All Customers</h4><br/>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Search id=\"search\" placeHolderText=\"Which customer are you looking for?\" />\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <AddPartnerModal />\r\n                                <AddCustomerModal serviceUrl={this.props.serviceUrl}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tile>  \r\n                \r\n                <div className=\"form-container\">\r\n                    <Accordion>\r\n                        {customer.map((item, index) => (\r\n                            <AccordionItem index={index} title={item.label}>\r\n                                <p>{item.content}</p>\r\n                            </AccordionItem>\r\n                        ))}\r\n                    </Accordion>\r\n                    <Accordion>\r\n                        {this.state.customers.data ? this.state.customers.data.map((customer, index) => {\r\n                            return(\r\n                            <AccordionItem index={index} title={customer.name}>\r\n                                <CustomTable />\r\n                            </AccordionItem>\r\n                            )\r\n                        }) : null}\r\n                    </Accordion>\r\n                    <PaginationNav cssClass='pagination-right'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","export const publishWidgetEvent = (eventId, payload) => {\n  const widgetEvent = new CustomEvent(eventId, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload =>\n  publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","export const INPUT_EVENT_TYPES = {\n    formUpdate: 'customer.form.update',\n    formCreate: 'customer.form.create',\n    formDelete: 'customer.form.delete',\n  };\n  \n  export const OUTPUT_EVENT_TYPES = {\n    select: 'customer.table.select',\n    add: 'customer.table.add',\n    error: 'customer.table.error',\n    delete: 'customer.table.delete',\n  };\n  \n  export const KEYCLOAK_EVENT_TYPE = 'keycloak';\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminDashboard from '../components/Admin/AdminDashboard';\nimport '../index.scss'\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminDashboardElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminDashboard serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\n","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\n\r\nexport default class OpenTicket extends Component {\r\n    state = {\r\n        projectName: '',\r\n        assignUser: '',\r\n        selectRole: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n    };\r\n        \r\n    render() {\r\n        const textareaProps = {\r\n            labelText: 'Ticket Description',\r\n            placeholder: 'Add ticket description',\r\n            name: 'ticketDescription',\r\n        }\r\n        return (\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form-desc\">\r\n                        <h3>Open Service Ticket</h3>\r\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                    </div>\r\n\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"ticketNo\" labelText=\"Ticket Number\" value={this.state.ticketNo} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"priority\" labelText=\"Priority\" value={this.state.priority} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"openedBy\" labelText=\"Ticket Opened By\" value={this.state.openedBy} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"partnerName\" labelText=\"Partner Name\" value={this.state.partnerName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextArea {...textareaProps} value={this.state.ticketDescription} onChange={this.handleChanges}  />\r\n                                <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        enhancementDescription: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n    };\r\n      \r\n    render() {\r\n        const textareaProps = {\r\n            labelText: 'Enhancement Description',\r\n            placeholder: 'Add enhancement description',\r\n            name: 'enhamcementDescription',\r\n        }\r\n        return (\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form-desc\">\r\n                        <h3>Request for Enhancements</h3>\r\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                    </div>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"ticketNo\" labelText=\"Ticket Number\" value={this.state.ticketNo} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"priority\" labelText=\"Priority\" value={this.state.priority} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                 <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges}/>\r\n                                 <TextInput name=\"openedBy\" labelText=\"Ticket Opened By\" value={this.state.openedBy} onChange={this.handleChanges}/>\r\n                                 <TextInput name=\"partnerName\" labelText=\"Partner Name\" value={this.state.partnerName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextArea {...textareaProps} value={this.state.enhancementDescription} onChange={this.handleChanges}  />\r\n                                <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput} from 'carbon-components-react';\r\n\r\nexport default class SubscriptionForm extends Component {\r\n    state = {\r\n        customerNo: '',\r\n        customerName: '',\r\n        customerType: '',\r\n        customerEmail: '',\r\n        projectName: '',\r\n        startDate: '',\r\n        subscriptionLevel: '',\r\n        subscriptionLength: '',\r\n        contactName: '',\r\n        contactEmail: '',\r\n        contactNo: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.customerType)\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() {\r\n        const customerType = ['New', 'Existing'];\r\n        return (\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form-desc\">\r\n                        <h3>New / Renew Subscription</h3>\r\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                    </div>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"customer-type\" name=\"customerType\" labelText=\"Customer Type\" value={this.state.customerType} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Select Customer Type\"\r\n                                        value=\"customer-type\"\r\n                                    />\r\n                                    {customerType.map((customerType, i) => <SelectItem key={i} text={customerType} value={customerType.toLowerCase()}>{customerType}</SelectItem>)}\r\n                                </Select>\r\n                                <TextInput name=\"customerNo\" labelText=\"Customer Number\" value={this.state.customerNo} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges} />\r\n                                <TextInput name=\"customerEmail\" labelText=\"Customer Email\" value={this.state.customerEmail} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        { this.renderForm()}\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Render the Customer Type Form\r\n    renderForm() {\r\n        const subscriptionLevel = ['Level1', 'Level2', 'Level3'];\r\n        const subscriptionLength = ['1 Year','2 Years', '3 Years'];\r\n        if (this.state.customerType === 'new') return (\r\n            <div>\r\n                <p><strong>New Subscription</strong></p><br/>\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                        <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges} />\r\n                        <Select defaultValue=\"subscription-level\" name=\"subscriptionLevel\" labelText=\"Desired subscription Level\" value={this.state.subscriptionLevel} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-level\"\r\n                            />\r\n                            {subscriptionLevel.map((subscriptionLevel, i) => <SelectItem key={i} text={subscriptionLevel} value={subscriptionLevel.toLowerCase()}>{subscriptionLevel}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name\" value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactNumber\" labelText=\"Contact Phone Number\" value={this.state.contactNo} onChange={this.handleChanges} />\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Desired Subscription Start Date\"\r\n                                value={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                            />\r\n                        </DatePicker>\r\n                        <Select defaultValue=\"subscription-length\" name=\"subscriptionLength\" labelText=\"Desired subscription Length\" value={this.state.subscriptionLength} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-length\"\r\n                            />\r\n                            {subscriptionLength.map((subscriptionLength, i) => <SelectItem key={i} text={subscriptionLength} value={subscriptionLength.toLowerCase()}>{subscriptionLength}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email\" value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        if (this.state.customerType === 'existing') return (\r\n            <div>\r\n                <p><strong>Renew Subscription</strong></p><br/>\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                        <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges} />\r\n                        <Select defaultValue=\"subscription-level\" name=\"subscriptionLevel\" labelText=\"Desired subscription Level\" value={this.state.subscriptionLevel} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-level\"\r\n                            />\r\n                            {subscriptionLevel.map((subscriptionLevel, i) => <SelectItem key={i} text={subscriptionLevel} value={subscriptionLevel.toLowerCase()}>{subscriptionLevel}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name\" value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactNumber\" labelText=\"Contact Phone Number\" value={this.state.contactNo} onChange={this.handleChanges} />\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Desired Subscription Start Date\"\r\n                                value={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                            />\r\n                        </DatePicker>\r\n                        <Select defaultValue=\"subscription-length\" name=\"subscriptionLength\" labelText=\"Desired subscription Length\" value={this.state.subscriptionLength} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-length\"\r\n                            />\r\n                            {subscriptionLength.map((subscriptionLength, i) => <SelectItem key={i} text={subscriptionLength} value={subscriptionLength.toLowerCase()}>{subscriptionLength}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email\" value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      data: \"\"\r\n     }\r\n  }\r\n\r\n  changeState = () => {   \r\n    this.setState({data:'test data'});  \r\n  };  \r\n\r\n  render() { \r\n    return ( \r\n      <div>\r\n        <DataTable rows={rowData} headers={headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title=\"List of Tickets\" description=\"Tickets\">\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.id} >\r\n                    {row.cells.map((cell) => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: 'Project Name',\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: 'Project',\r\n    key: 'project',\r\n  },\r\n  {\r\n    header: 'Entando Version',\r\n    key: 'entandoVersion',\r\n  },\r\n  {\r\n    header: 'Creation Date',\r\n    key: 'creationDate',\r\n  },\r\n  {\r\n      header: 'ee',\r\n      key: 'openTicket',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: 'Ticket1',\r\n       project: 'Leonardo',\r\n       entandoVersion: 6.2,\r\n       creationDate: 'October, 2019',\r\n       openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n     },\r\n  \r\n];\r\n \r\nexport default TicketList;\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport { Tile } from 'carbon-components-react';\r\n\r\nconst subscriptionData = {\r\n    description: 'Entando Product Support Subscription Suplier Portal',\r\n    commitment: 'Leonardo',\r\n    type: 'Product Support Subscription Entando Platform',\r\n    quantityRequest: '1(8 Crore)',\r\n    components: '',\r\n    level: 'Gold',\r\n    startDate: 'May 2019',\r\n    endDate: 'May 2020',\r\n    license: 'Free Commercial Open Source',\r\n};\r\n\r\nconst Subscription = () => {\r\n    const { description, commitment, type, quantityRequest, components, level, startDate, endDate, license } = subscriptionData\r\n    return (\r\n        <div className=\"subscription-details\">\r\n            <Tile>\r\n                <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                             <p><strong>Description:</strong> {description}</p>\r\n                            <p><strong>Commitment:</strong> {commitment}</p>\r\n                            <p><strong>Type:</strong> {type}</p>\r\n                            <p><strong>Quantity Request:</strong> {quantityRequest}</p>\r\n                            <p><strong>Components:</strong> {components}</p>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <p><strong>Level:</strong> {level}</p>\r\n                            <p><strong>Start Date:</strong> {startDate}</p>\r\n                            <p><strong>End Date:</strong> {endDate}</p>\r\n                            <p><strong>License:</strong> {license}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Tile>\r\n            <br/>\r\n            <TicketList/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Subscription;","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\n\r\nclass AssignUSer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            projectName:'',\r\n            assignUser:'',\r\n            selectRole:''\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.assignUser)\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() { \r\n        const assignUser = ['User1', 'User2'];\r\n        const selectRole = ['Role1', 'Role2'];\r\n        return (\r\n            <div className=\"\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"assign-user\" name=\"assignUser\" labelText=\"Assign User\" value={this.state.assignUser} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Assign User\"\r\n                                        value=\"assign-user\"\r\n                                    />\r\n                                    {assignUser.map((assignUser, i) => <SelectItem key={i} text={assignUser} value={assignUser.toLowerCase()}>{assignUser}</SelectItem>)}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"select-role\" name=\"selectRole\" labelText=\"Select Role\" value={this.state.selectRole} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Select Role\"\r\n                                        value=\"select-role\"\r\n                                    />\r\n                                    {selectRole.map((selectRole, i) => <SelectItem key={i} text={selectRole} value={selectRole.toLowerCase()}>{selectRole}</SelectItem>)}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AssignUSer;","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\n\r\n\r\nclass DeleteUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.state.filterText = \"\";\r\n    }\r\n    render() { \r\n        return ( \r\n            <DataTable rows={rowData} headers={headerData}>\r\n              {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                <TableContainer>\r\n                  <Table {...getTableProps()}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        {headers.map((header) => (\r\n                          <TableHeader {...getHeaderProps({ header })}>\r\n                            {header.header}\r\n                          </TableHeader>\r\n                        ))}\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {rows.map((row) => (\r\n                        <TableRow key={row.id}>\r\n                          {row.cells.map((cell) => (\r\n                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n            </DataTable>\r\n         );\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n      header: 'User Name',\r\n      key: 'userName',\r\n    },\r\n    {\r\n      header: 'User Role',\r\n      key: 'userRole',\r\n    },\r\n    {\r\n      header: 'Date Added',\r\n      key: 'dateAdded',\r\n    },\r\n    {\r\n      header: 'User Access',\r\n      key: 'userAccess',\r\n    }\r\n  ];\r\n\r\nconst rowData = [\r\n    {\r\n         id: 'a',\r\n         userName: 'User1',\r\n         userRole: 'Role1',\r\n         dateAdded: 'April, 2019',\r\n         userAccess: <a onClick=''><SubtractAlt16 fill=\"red\" /> Remove User</a>,\r\n      },\r\n      {\r\n        id: 'b',\r\n        userName: 'User2',\r\n        userRole: 'Role2',\r\n        dateAdded: 'October, 2018',\r\n        userAccess: <a onClick=\"\"><SubtractAlt16 fill=\"red\" /> Remove User</a>\r\n      },\r\n      {\r\n        id: 'c',\r\n        userName: 'User3',\r\n        userRole: 'Role3',\r\n        dateAdded: 'August, 2017',\r\n        userAccess: <a onClick=\"\"><SubtractAlt16 fill=\"red\" /> Remove User</a>\r\n      },\r\n      {\r\n        id: 'd',\r\n        userName: 'User4',\r\n        userRole: 'Role4',\r\n        dateAdded: 'October, 2019',\r\n        userAccess: <a onClick=\"\"><SubtractAlt16 fill=\"red\" /> Remove User</a>\r\n      }  \r\n  ];\r\n  \r\nexport default DeleteUser;","import React from 'react';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUSer from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\n\r\nconst user = [\r\n    {\r\n        label: <div><h4>Assign a new User</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <AssignUSer />\r\n    },\r\n    {\r\n        label: <div><h4>Manage all users</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <DeleteUser/>\r\n    }\r\n]\r\n\r\nconst ManageUser = () => (\r\n    <div className=\"form-container\">\r\n        <Accordion>\r\n            {user.map((item, index) => (\r\n                <AccordionItem key={index.toString()} index={index} title={item.label} description={ item.description}>\r\n                    <p>{item.content}</p>\r\n                </AccordionItem>\r\n            ))}\r\n        </Accordion>\r\n    </div>\r\n)\r\n\r\nexport default ManageUser;","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\n\r\nclass TicketingSystem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            ticketingSystem:'',\r\n            url: '',\r\n            userName: '',\r\n            password: '',\r\n            projectName: ''\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.projectName)\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() { \r\n        const ticketingSystem = ['Jira', 'Other'];\r\n        return (\r\n            <div className=\"cp-form\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"ticketing-system\" name=\"ticketingSystem\" labelText=\"Select Backend Ticketing System\" value={this.state.ticketingSystem} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Select\"\r\n                                        value=\"ticketing-system\"\r\n                                    />\r\n                                    {ticketingSystem.map((ticketingSystem, i) => <SelectItem key={i} text={ticketingSystem} value={ticketingSystem.toLowerCase()}>{ticketingSystem}</SelectItem>)}\r\n                                </Select>\r\n                                <TextInput name=\"userName\" labelText=\"User Name\" value={this.state.userName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"url\" labelText=\"URL\" value={this.state.url} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"password\" labelText=\"Password\" value={this.state.password} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TicketingSystem;","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, ToggleSmall, Button} from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\n\r\n\r\nclass ProductVersion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.state.filterText = \"\";\r\n    }\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <DataTable rows={rowData} headers={headerData}>\r\n                {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                    <TableContainer>\r\n                        <Table {...getTableProps()}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headers.map((header) => (\r\n                                    <TableHeader {...getHeaderProps({ header })}>\r\n                                        {header.header}\r\n                                    </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        {row.cells.map((cell) => (\r\n                                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n                </DataTable>\r\n                <br/>\r\n                <Button size='field' kind='tertiary'>Add Product Version +</Button>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n      header: 'Entando Version',\r\n      key: 'entVersion',\r\n    },\r\n    {\r\n      header: 'Status *',\r\n      key: 'status',\r\n    },\r\n    {\r\n      header: 'Start Date',\r\n      key: 'startDate',\r\n    },\r\n    {\r\n      header: 'Support End Date',\r\n      key: 'endDate',\r\n    }\r\n  ];\r\n\r\nconst rowData = [\r\n    {\r\n         id: 'a',\r\n         entVersion: '5.2',\r\n         status:  <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n         startDate: 'April, 2018',\r\n         endDate: 'April, 2022',\r\n    },\r\n    {\r\n        id: 'b',\r\n        entVersion: '6.3',\r\n        status:  <ToggleSmall aria-label=\"toggle button\"  id=\"status-2\" />,\r\n        startDate: 'Jile, 2019',\r\n        endDate: 'April, 2023',\r\n    },\r\n    {\r\n        id: 'c',\r\n        entVersion: '6.2',\r\n        status:  <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\r\n        startDate: 'September, 2020',\r\n        endDate: 'April, 2024',\r\n     },\r\n];\r\n   \r\nexport default ProductVersion;","import React from 'react';\r\nimport { Accordion, AccordionItem, Tile} from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\n\r\nconst adminConfig = [\r\n    {\r\n        label: <div><h4>Integration with Ticketing System</h4><p>This allows you to manage the ticketing system</p></div>,\r\n        content: <TicketingSystem/>\r\n    },\r\n    {\r\n        label: <div><h4>Manage Product Version</h4><p>This let’s you manage the entando product versions</p></div>,\r\n        content: <ProductVersion/>\r\n    }\r\n]\r\n\r\nconst AdminConfiguration = () => (\r\n    <div className=\"form-container\">\r\n        <Tile>\r\n            <h4>Configuration Settings</h4>\r\n            <p>Lorem ipsum dolor sit lorem a amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.</p>\r\n        </Tile>\r\n        <Accordion>\r\n            {adminConfig.map((item, index) => (\r\n                <AccordionItem key={index.toString()} index={index} title={item.label} description={ item.description}>\r\n                    <p>{item.content}</p>\r\n                </AccordionItem>\r\n            ))}\r\n        </Accordion>\r\n    </div>\r\n)\r\n\r\nexport default AdminConfiguration;","import React from 'react';\r\nimport { Tile } from 'carbon-components-react';\r\n\r\nconst customerData = {\r\n    name: 'Ford',\r\n    id: '5564 4563 3345',\r\n    startDate: '01/01/2020'\r\n}\r\n\r\nconst CustomerDetails = () => {\r\n    const { name, id, startDate } = customerData //destructuring\r\n    return (\r\n        <div className=\"customer-details\">\r\n            <Tile>\r\n                <p><strong>Customer Name:</strong> {name}</p>\r\n                <p><strong>Customer Id:</strong> {id}</p>\r\n                <p><strong>Start Date:</strong> {startDate}</p>\r\n            </Tile>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default CustomerDetails;\r\n","import React, {Component} from 'react';\r\nimport { Select, SelectItem} from 'carbon-components-react';\r\nimport CustomerDetails from '../Customer/customerDetails';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport '../../index.scss';\r\n\r\nexport default class RoleCheck extends Component {\r\n    state = {\r\n        roleType: 'customer'\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const roleType = ['Admin', 'Customer'];\r\n        return (\r\n            \r\n                <div className='role-check'>  \r\n                <Select defaultValue=\"role-type\" name=\"roleType\" labelText=\"Select Role(Testing)\" value={this.state.roleType} onChange={this.handleChanges}>\r\n                        <SelectItem\r\n                                text=\"Select Role\"\r\n                                value=\"role-type\"\r\n                        />\r\n                        {roleType.map((roleType, i) => <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>{roleType}</SelectItem>)}\r\n                        </Select>\r\n                    { this.renderForm()}\r\n                </div>\r\n            \r\n            );\r\n    }\r\n\r\n    // Render Dashboard based on role\r\n    renderForm() {\r\n        if (this.state.roleType === 'customer') return (\r\n            <div>\r\n                <h3>Welcome to Entando Customer Portal</h3>\r\n                <CustomerDetails />\r\n                <CustomTable />\r\n            </div>\r\n        )\r\n        if (this.state.roleType === 'admin') return (\r\n            <div>\r\n                <h3>Welcome to Entando Admin Portal</h3>\r\n                <AdminDashboard />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n       <ul id='navigation'>\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/subscription-details\">Subscription Details</NavLink></li>\r\n          <li><NavLink to=\"/subscription\">New or Renew Subscription</NavLink></li>\r\n          <li><NavLink to=\"/service-ticket\">Open Service Ticket</NavLink></li>\r\n          <li><NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink></li>\r\n          <li><NavLink to=\"/manage-users\">Manage Users</NavLink></li>\r\n          <li><NavLink to=\"/configuration-settings\">Configuration Settings</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n \r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport OpenTicket from './Forms/openTicket';\r\nimport EnhancementRequest from './Forms/enhancementRequest';\r\nimport SubscriptionForm from './Forms/SubscriptionForm';\r\nimport Subscription from './SubscriptionDetails/subscription';\r\nimport ManageUser from './Admin/ManageUser/ManageUser';\r\nimport AdminConfiguration from './Admin/Configuration/AdminConfiguration';\r\nimport RoleCheck from './Admin/RoleCheck';\r\nimport Navigation from './Navigation/Navigation';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\r\nimport withKeycloak from '../auth/withKeycloak';\r\n\r\nimport keycloakType from '../components/__types__/keycloak';\r\nimport { apiProjectsGet } from '../api/projects';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n\r\n    async fetchData() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            //console.log('Authenticated')\r\n            const projects = await apiProjectsGet(\"http://localhost:8081/services/custportApp\");\r\n            this.setState({\r\n                data: projects\r\n            });\r\n        }\r\n        else {\r\n            //console.log('Not authenticated')\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.fetchData();\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { t, keycloak } = this.props;\r\n        //console.log(keycloak)\r\n        return (\r\n            <div>  \r\n                <UnauthenticatedView keycloak={keycloak}>\r\n                    <p>User is not authenticated</p>\r\n                </UnauthenticatedView>\r\n                <AuthenticatedView keycloak={keycloak}>\r\n                    <BrowserRouter>\r\n                        <div id=\"dashboard-widget\">\r\n                            <Navigation/>\r\n                            <div style={{marginTop: '100px'}}>\r\n                                <Switch>\r\n                                    <Route path=\"/\" component={RoleCheck} exact />\r\n                                    <Route path=\"/subscription-details\" component={Subscription}/>\r\n                                    <Route path=\"/subscription\" component={SubscriptionForm}/>\r\n                                    <Route path=\"/service-ticket\" component={OpenTicket} />\r\n                                    <Route path=\"/enhancement\" component={EnhancementRequest} />\r\n                                    <Route path=\"/manage-users\" component={ManageUser} />\r\n                                    <Route path=\"/configuration-settings\" component={AdminConfiguration} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </BrowserRouter>\r\n                </AuthenticatedView>\r\n                \r\n            </div>\r\n        )\r\n        \r\n     }\r\n  }\r\n\r\n  App.propTypes = {\r\n    keycloak: keycloakType.isRequired\r\n}\r\n  \r\nexport default withKeycloak(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\nimport '../index.scss'\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport App from '../components/App';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminAddCustomerElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AddCustomerModal serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RoleCheck from '../components/Admin/RoleCheck';\nimport '../index.scss'\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\n  const ATTRIBUTES = {\n    hidden: 'hidden',\n    locale: 'locale',\n    paginationMode: 'pagination-mode',\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n    serviceUrl: 'service-url',\n  };\n\nclass AdminRoleCheckElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <RoleCheck serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\n\n//export default AdminRoleCheckElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomDataTable from '../components/Customer/customDataTable';\nimport KeycloakContext from '../auth/KeycloakContext';\nimport '../index.scss'\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\n  const ATTRIBUTES = {\n    hidden: 'hidden',\n    locale: 'locale',\n    paginationMode: 'pagination-mode',\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n    serviceUrl: 'service-url',\n  };\n\nclass CustomDataTableElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <CustomDataTable serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('custom-datatable-widget', CustomDataTableElement);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomerDetails from '../components/Customer/customerDetails';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\n  const ATTRIBUTES = {\n    hidden: 'hidden',\n    locale: 'locale',\n    paginationMode: 'pagination-mode',\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n    serviceUrl: 'service-url',\n  };\n\nclass CustomerDetailsElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <CustomerDetails serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Subscription from '../components/SubscriptionDetails/subscription';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\n\nclass SubscriptionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Subscription serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('subscription-widget', SubscriptionElement);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\n\nclass FormsSubscriptionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <SubscriptionForm serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('subscription-form-widget', FormsSubscriptionElement);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicket from '../components/Forms/openTicket';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\n\nclass FormsOpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicket serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navigation from '../components/Navigation/Navigation';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\n\nclass NavigationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Navigation serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('navigation-widget', NavigationElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\n\nclass FormsEnhancementRequestElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <EnhancementRequest serviceUrl={serviceUrl}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\n\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport retargetEvents from 'react-shadow-dom-retarget-events';\r\nimport '../index.scss'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('app-element', AppElement);"],"sourceRoot":""}