{"version":3,"sources":["components/Forms/openTicket.js","components/Forms/enhancementRequest.js","components/Forms/SubscriptionForm.js","components/SubscriptionDetails/TicketList.js","components/SubscriptionDetails/subscription.js","components/Admin/ManageUser/AssignUser.js","components/Admin/ManageUser/DeleteUser.js","components/Admin/ManageUser/ManageUser.js","components/Admin/Configuration/TicketingSystem.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","components/Customer/customerDetails.js","api/helpers.js","api/projects.js","auth/KeycloakViews.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","components/__types__/keycloak.js","components/Customer/customDataTable.js","api/customers.js","components/Admin/AddCustomerModal.js","components/Admin/AddPartnerModal.js","components/Admin/AdminDashboard.js","components/Admin/RoleCheck.js","components/Navigation/Navigation.js","components/App.js","custom-elements/AdminDashboardElement.js","custom-elements/AdminAddCustomerElement.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminRoleCheckElement.js","custom-elements/CustomDataTableElement.js","custom-elements/CustomerDetailsElement.js","custom-elements/SubscriptionElement.js","custom-elements/FormsSubscriptionElement.js","custom-elements/FormsOpenTicketElement.js","custom-elements/NavigationElement.js","custom-elements/FormsEnhancementRequestElement.js","custom-elements/AppElement.js"],"names":["OpenTicket","state","projectName","assignUser","selectRole","handleChanges","e","input","target","name","value","setState","handleFormSubmit","event","console","log","ticketNo","preventDefault","className","Form","onSubmit","this","TextInput","labelText","onChange","priority","customerName","openedBy","partnerName","TextArea","placeholder","ticketDescription","Button","kind","tabIndex","type","Component","EnhancementRequest","enhancementDescription","SubscriptionForm","customerNo","customerType","customerEmail","startDate","subscriptionLevel","subscriptionLength","contactName","contactEmail","contactNo","Select","defaultValue","SelectItem","text","map","i","toLowerCase","renderForm","DatePicker","dateFormat","datePickerType","DatePickerInput","TicketList","props","changeState","data","DataTable","rows","rowData","headers","headerData","getHeaderProps","getTableProps","TableContainer","title","description","Table","TableHead","TableRow","header","TableHeader","TableBody","row","cells","cell","TableCell","id","key","project","entandoVersion","creationDate","openTicket","href","subscriptionData","Subscription","commitment","quantityRequest","components","level","endDate","license","Tile","AssignUSer","DeleteUser","filterText","userName","userRole","dateAdded","userAccess","onClick","fill","user","label","content","ManageUser","Accordion","item","index","AccordionItem","toString","TicketingSystem","ticketingSystem","url","password","ProductVersion","size","entVersion","status","ToggleSmall","aria-label","defaultToggled","adminConfig","AdminConfiguration","customerData","CustomerDetails","getDefaultOptions","Headers","Authorization","window","entando","keycloak","authenticated","token","getUrl","request","options","a","fetch","response","has","parseInt","get","json","Promise","reject","Error","statusText","resource","apiProjectsGet","serviceUrl","method","apiProjectPost","body","JSON","stringify","apiProjectPut","AuthenticatedView","children","initialized","UnauthenticatedView","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","forwardedRef","rest","ref","Consumer","defaultProps","forwardRef","bool","CustomTable","t","projects","filteredProjects","filter","customer","customerId","render","fetchData","prevProps","changedAuth","createDate","tickets","length","openTickets","apiCustomersGet","apiCustomerPost","handleChange","handleSubmit","addCustomer","customerNumber","systemId","contactPhone","notes","projectSubscriptions","partners","portalUsers","contactNumber","projectCreated","customerCreated","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","AddPartnerModal","customers","getCustomer","Search","placeHolderText","PaginationNav","cssClass","RoleCheck","roleType","Navigation","to","style","marginTop","path","component","exact","AdminDashboardElement","mountPoint","document","createElement","appendChild","ReactDOM","HTMLElement","customElements","define","AdminAddCustomerElement","subscribeToWidgetEvent","eventType","eventHandler","addEventListener","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","AdminRoleCheckElement","unsubscribeFromKeycloakEvent","Provider","CustomDataTableElement","CustomerDetailsElement","SubscriptionElement","FormsSubscriptionElement","FormsOpenTicketElement","NavigationElement","FormsEnhancementRequestElement","AppElement"],"mappings":"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","file":"static/js/main.70e8f665.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\n\r\nexport default class OpenTicket extends Component {\r\n    state = {\r\n        projectName: '',\r\n        assignUser: '',\r\n        selectRole: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n    };\r\n        \r\n    render() {\r\n        const textareaProps = {\r\n            labelText: 'Ticket Description',\r\n            placeholder: 'Add ticket description',\r\n            name: 'ticketDescription',\r\n        }\r\n        return (\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form-desc\">\r\n                        <h3>Open Service Ticket</h3>\r\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                    </div>\r\n\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"ticketNo\" labelText=\"Ticket Number\" value={this.state.ticketNo} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"priority\" labelText=\"Priority\" value={this.state.priority} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"openedBy\" labelText=\"Ticket Opened By\" value={this.state.openedBy} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"partnerName\" labelText=\"Partner Name\" value={this.state.partnerName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextArea {...textareaProps} value={this.state.ticketDescription} onChange={this.handleChanges}  />\r\n                                <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        enhancementDescription: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n    };\r\n      \r\n    render() {\r\n        const textareaProps = {\r\n            labelText: 'Enhancement Description',\r\n            placeholder: 'Add enhancement description',\r\n            name: 'enhamcementDescription',\r\n        }\r\n        return (\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form-desc\">\r\n                        <h3>Request for Enhancements</h3>\r\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                    </div>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"ticketNo\" labelText=\"Ticket Number\" value={this.state.ticketNo} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"priority\" labelText=\"Priority\" value={this.state.priority} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                 <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges}/>\r\n                                 <TextInput name=\"openedBy\" labelText=\"Ticket Opened By\" value={this.state.openedBy} onChange={this.handleChanges}/>\r\n                                 <TextInput name=\"partnerName\" labelText=\"Partner Name\" value={this.state.partnerName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextArea {...textareaProps} value={this.state.enhancementDescription} onChange={this.handleChanges}  />\r\n                                <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput} from 'carbon-components-react';\r\n\r\nexport default class SubscriptionForm extends Component {\r\n    state = {\r\n        customerNo: '',\r\n        customerName: '',\r\n        customerType: '',\r\n        customerEmail: '',\r\n        projectName: '',\r\n        startDate: '',\r\n        subscriptionLevel: '',\r\n        subscriptionLength: '',\r\n        contactName: '',\r\n        contactEmail: '',\r\n        contactNo: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.customerType)\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() {\r\n        const customerType = ['New', 'Existing'];\r\n        return (\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form-desc\">\r\n                        <h3>New / Renew Subscription</h3>\r\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                    </div>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"customer-type\" name=\"customerType\" labelText=\"Customer Type\" value={this.state.customerType} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Select Customer Type\"\r\n                                        value=\"customer-type\"\r\n                                    />\r\n                                    {customerType.map((customerType, i) => <SelectItem key={i} text={customerType} value={customerType.toLowerCase()}>{customerType}</SelectItem>)}\r\n                                </Select>\r\n                                <TextInput name=\"customerNo\" labelText=\"Customer Number\" value={this.state.customerNo} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges} />\r\n                                <TextInput name=\"customerEmail\" labelText=\"Customer Email\" value={this.state.customerEmail} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        { this.renderForm()}\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Render the Customer Type Form\r\n    renderForm() {\r\n        const subscriptionLevel = ['Level1', 'Level2', 'Level3'];\r\n        const subscriptionLength = ['1 Year','2 Years', '3 Years'];\r\n        if (this.state.customerType === 'new') return (\r\n            <div>\r\n                <p><strong>New Subscription</strong></p><br/>\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                        <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges} />\r\n                        <Select defaultValue=\"subscription-level\" name=\"subscriptionLevel\" labelText=\"Desired subscription Level\" value={this.state.subscriptionLevel} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-level\"\r\n                            />\r\n                            {subscriptionLevel.map((subscriptionLevel, i) => <SelectItem key={i} text={subscriptionLevel} value={subscriptionLevel.toLowerCase()}>{subscriptionLevel}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name\" value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactNumber\" labelText=\"Contact Phone Number\" value={this.state.contactNo} onChange={this.handleChanges} />\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Desired Subscription Start Date\"\r\n                                value={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                            />\r\n                        </DatePicker>\r\n                        <Select defaultValue=\"subscription-length\" name=\"subscriptionLength\" labelText=\"Desired subscription Length\" value={this.state.subscriptionLength} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-length\"\r\n                            />\r\n                            {subscriptionLength.map((subscriptionLength, i) => <SelectItem key={i} text={subscriptionLength} value={subscriptionLength.toLowerCase()}>{subscriptionLength}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email\" value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        if (this.state.customerType === 'existing') return (\r\n            <div>\r\n                <p><strong>Renew Subscription</strong></p><br/>\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                        <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges} />\r\n                        <Select defaultValue=\"subscription-level\" name=\"subscriptionLevel\" labelText=\"Desired subscription Level\" value={this.state.subscriptionLevel} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-level\"\r\n                            />\r\n                            {subscriptionLevel.map((subscriptionLevel, i) => <SelectItem key={i} text={subscriptionLevel} value={subscriptionLevel.toLowerCase()}>{subscriptionLevel}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name\" value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactNumber\" labelText=\"Contact Phone Number\" value={this.state.contactNo} onChange={this.handleChanges} />\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Desired Subscription Start Date\"\r\n                                value={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                            />\r\n                        </DatePicker>\r\n                        <Select defaultValue=\"subscription-length\" name=\"subscriptionLength\" labelText=\"Desired subscription Length\" value={this.state.subscriptionLength} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-length\"\r\n                            />\r\n                            {subscriptionLength.map((subscriptionLength, i) => <SelectItem key={i} text={subscriptionLength} value={subscriptionLength.toLowerCase()}>{subscriptionLength}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email\" value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      data: \"\"\r\n     }\r\n  }\r\n\r\n  changeState = () => {   \r\n    this.setState({data:'test data'});  \r\n  };  \r\n\r\n  render() { \r\n    return ( \r\n      <div>\r\n        <DataTable rows={rowData} headers={headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title=\"List of Tickets\" description=\"Tickets\">\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.id} >\r\n                    {row.cells.map((cell) => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: 'Project Name',\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: 'Project',\r\n    key: 'project',\r\n  },\r\n  {\r\n    header: 'Entando Version',\r\n    key: 'entandoVersion',\r\n  },\r\n  {\r\n    header: 'Creation Date',\r\n    key: 'creationDate',\r\n  },\r\n  {\r\n      header: 'ee',\r\n      key: 'openTicket',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: 'Ticket1',\r\n       project: 'Leonardo',\r\n       entandoVersion: 6.2,\r\n       creationDate: 'October, 2019',\r\n       openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n     },\r\n  \r\n];\r\n \r\nexport default TicketList;\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport { Tile } from 'carbon-components-react';\r\n\r\nconst subscriptionData = {\r\n    description: 'Entando Product Support Subscription Suplier Portal',\r\n    commitment: 'Leonardo',\r\n    type: 'Product Support Subscription Entando Platform',\r\n    quantityRequest: '1(8 Crore)',\r\n    components: '',\r\n    level: 'Gold',\r\n    startDate: 'May 2019',\r\n    endDate: 'May 2020',\r\n    license: 'Free Commercial Open Source',\r\n};\r\n\r\nconst Subscription = () => {\r\n    const { description, commitment, type, quantityRequest, components, level, startDate, endDate, license } = subscriptionData\r\n    return (\r\n        <div className=\"subscription-details\">\r\n            <Tile>\r\n                <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                             <p><strong>Description:</strong> {description}</p>\r\n                            <p><strong>Commitment:</strong> {commitment}</p>\r\n                            <p><strong>Type:</strong> {type}</p>\r\n                            <p><strong>Quantity Request:</strong> {quantityRequest}</p>\r\n                            <p><strong>Components:</strong> {components}</p>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <p><strong>Level:</strong> {level}</p>\r\n                            <p><strong>Start Date:</strong> {startDate}</p>\r\n                            <p><strong>End Date:</strong> {endDate}</p>\r\n                            <p><strong>License:</strong> {license}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Tile>\r\n            <br/>\r\n            <TicketList/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Subscription;","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\n\r\nclass AssignUSer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            projectName:'',\r\n            assignUser:'',\r\n            selectRole:''\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.assignUser)\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() { \r\n        const assignUser = ['User1', 'User2'];\r\n        const selectRole = ['Role1', 'Role2'];\r\n        return (\r\n            <div className=\"\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"assign-user\" name=\"assignUser\" labelText=\"Assign User\" value={this.state.assignUser} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Assign User\"\r\n                                        value=\"assign-user\"\r\n                                    />\r\n                                    {assignUser.map((assignUser, i) => <SelectItem key={i} text={assignUser} value={assignUser.toLowerCase()}>{assignUser}</SelectItem>)}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"select-role\" name=\"selectRole\" labelText=\"Select Role\" value={this.state.selectRole} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Select Role\"\r\n                                        value=\"select-role\"\r\n                                    />\r\n                                    {selectRole.map((selectRole, i) => <SelectItem key={i} text={selectRole} value={selectRole.toLowerCase()}>{selectRole}</SelectItem>)}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AssignUSer;","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\n\r\n\r\nclass DeleteUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.state.filterText = \"\";\r\n    }\r\n    render() { \r\n        return ( \r\n            <DataTable rows={rowData} headers={headerData}>\r\n              {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                <TableContainer>\r\n                  <Table {...getTableProps()}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        {headers.map((header) => (\r\n                          <TableHeader {...getHeaderProps({ header })}>\r\n                            {header.header}\r\n                          </TableHeader>\r\n                        ))}\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {rows.map((row) => (\r\n                        <TableRow key={row.id}>\r\n                          {row.cells.map((cell) => (\r\n                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n            </DataTable>\r\n         );\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n      header: 'User Name',\r\n      key: 'userName',\r\n    },\r\n    {\r\n      header: 'User Role',\r\n      key: 'userRole',\r\n    },\r\n    {\r\n      header: 'Date Added',\r\n      key: 'dateAdded',\r\n    },\r\n    {\r\n      header: 'User Access',\r\n      key: 'userAccess',\r\n    }\r\n  ];\r\n\r\nconst rowData = [\r\n    {\r\n         id: 'a',\r\n         userName: 'User1',\r\n         userRole: 'Role1',\r\n         dateAdded: 'April, 2019',\r\n         userAccess: <a onClick=''><SubtractAlt16 fill=\"red\" /> Remove User</a>,\r\n      },\r\n      {\r\n        id: 'b',\r\n        userName: 'User2',\r\n        userRole: 'Role2',\r\n        dateAdded: 'October, 2018',\r\n        userAccess: <a onClick=\"\"><SubtractAlt16 fill=\"red\" /> Remove User</a>\r\n      },\r\n      {\r\n        id: 'c',\r\n        userName: 'User3',\r\n        userRole: 'Role3',\r\n        dateAdded: 'August, 2017',\r\n        userAccess: <a onClick=\"\"><SubtractAlt16 fill=\"red\" /> Remove User</a>\r\n      },\r\n      {\r\n        id: 'd',\r\n        userName: 'User4',\r\n        userRole: 'Role4',\r\n        dateAdded: 'October, 2019',\r\n        userAccess: <a onClick=\"\"><SubtractAlt16 fill=\"red\" /> Remove User</a>\r\n      }  \r\n  ];\r\n  \r\nexport default DeleteUser;","import React from 'react';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUSer from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\n\r\nconst user = [\r\n    {\r\n        label: <div><h4>Assign a new User</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <AssignUSer />\r\n    },\r\n    {\r\n        label: <div><h4>Manage all users</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <DeleteUser/>\r\n    }\r\n]\r\n\r\nconst ManageUser = () => (\r\n    <div className=\"form-container\">\r\n        <Accordion>\r\n            {user.map((item, index) => (\r\n                <AccordionItem key={index.toString()} index={index} title={item.label} description={ item.description}>\r\n                    <p>{item.content}</p>\r\n                </AccordionItem>\r\n            ))}\r\n        </Accordion>\r\n    </div>\r\n)\r\n\r\nexport default ManageUser;","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\n\r\nclass TicketingSystem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            ticketingSystem:'',\r\n            url: '',\r\n            userName: '',\r\n            password: '',\r\n            projectName: ''\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.projectName)\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() { \r\n        const ticketingSystem = ['Jira', 'Other'];\r\n        return (\r\n            <div className=\"cp-form\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"ticketing-system\" name=\"ticketingSystem\" labelText=\"Select Backend Ticketing System\" value={this.state.ticketingSystem} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Select\"\r\n                                        value=\"ticketing-system\"\r\n                                    />\r\n                                    {ticketingSystem.map((ticketingSystem, i) => <SelectItem key={i} text={ticketingSystem} value={ticketingSystem.toLowerCase()}>{ticketingSystem}</SelectItem>)}\r\n                                </Select>\r\n                                <TextInput name=\"userName\" labelText=\"User Name\" value={this.state.userName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"url\" labelText=\"URL\" value={this.state.url} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"password\" labelText=\"Password\" value={this.state.password} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TicketingSystem;","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, ToggleSmall, Button} from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\n\r\n\r\nclass ProductVersion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.state.filterText = \"\";\r\n    }\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <DataTable rows={rowData} headers={headerData}>\r\n                {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                    <TableContainer>\r\n                        <Table {...getTableProps()}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headers.map((header) => (\r\n                                    <TableHeader {...getHeaderProps({ header })}>\r\n                                        {header.header}\r\n                                    </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        {row.cells.map((cell) => (\r\n                                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n                </DataTable>\r\n                <br/>\r\n                <Button size='field' kind='tertiary'>Add Product Version +</Button>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n      header: 'Entando Version',\r\n      key: 'entVersion',\r\n    },\r\n    {\r\n      header: 'Status *',\r\n      key: 'status',\r\n    },\r\n    {\r\n      header: 'Start Date',\r\n      key: 'startDate',\r\n    },\r\n    {\r\n      header: 'Support End Date',\r\n      key: 'endDate',\r\n    }\r\n  ];\r\n\r\nconst rowData = [\r\n    {\r\n         id: 'a',\r\n         entVersion: '5.2',\r\n         status:  <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n         startDate: 'April, 2018',\r\n         endDate: 'April, 2022',\r\n    },\r\n    {\r\n        id: 'b',\r\n        entVersion: '6.3',\r\n        status:  <ToggleSmall aria-label=\"toggle button\"  id=\"status-2\" />,\r\n        startDate: 'Jile, 2019',\r\n        endDate: 'April, 2023',\r\n    },\r\n    {\r\n        id: 'c',\r\n        entVersion: '6.2',\r\n        status:  <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\r\n        startDate: 'September, 2020',\r\n        endDate: 'April, 2024',\r\n     },\r\n];\r\n   \r\nexport default ProductVersion;","import React from 'react';\r\nimport { Accordion, AccordionItem, Tile} from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\n\r\nconst adminConfig = [\r\n    {\r\n        label: <div><h4>Integration with Ticketing System</h4><p>This allows you to manage the ticketing system</p></div>,\r\n        content: <TicketingSystem/>\r\n    },\r\n    {\r\n        label: <div><h4>Manage Product Version</h4><p>This let’s you manage the entando product versions</p></div>,\r\n        content: <ProductVersion/>\r\n    }\r\n]\r\n\r\nconst AdminConfiguration = () => (\r\n    <div className=\"form-container\">\r\n        <Tile>\r\n            <h4>Configuration Settings</h4>\r\n            <p>Lorem ipsum dolor sit lorem a amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.</p>\r\n        </Tile>\r\n        <Accordion>\r\n            {adminConfig.map((item, index) => (\r\n                <AccordionItem key={index.toString()} index={index} title={item.label} description={ item.description}>\r\n                    <p>{item.content}</p>\r\n                </AccordionItem>\r\n            ))}\r\n        </Accordion>\r\n    </div>\r\n)\r\n\r\nexport default AdminConfiguration;","import React from 'react';\r\nimport { Tile } from 'carbon-components-react';\r\n\r\nconst customerData = {\r\n    name: 'Ford',\r\n    id: '5564 4563 3345',\r\n    startDate: '01/01/2020'\r\n}\r\n\r\nconst CustomerDetails = () => {\r\n    const { name, id, startDate } = customerData //destructuring\r\n    return (\r\n        <div className=\"customer-details\">\r\n            <Tile>\r\n                <p><strong>Customer Name:</strong> {name}</p>\r\n                <p><strong>Customer Id:</strong> {id}</p>\r\n                <p><strong>Start Date:</strong> {startDate}</p>\r\n            </Tile>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default CustomerDetails;\r\n","export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const getUrl = (url) => {\n  return `${url}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  const headers = {\n    ...(response.headers.has('X-Total-Count')\n      ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\n      : {}),\n  };\n\n  if (response.status === 204) {\n    return { data: '' };\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? { data: await response.json(), headers }\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/projects';\n\nexport const apiProjectsDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiProjectsGet = async (serviceUrl ) => {\n\n  const url = getUrl(\n    `${serviceUrl}/${resource}`\n  );\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProjectPost = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProjectPut = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.shape({ current: PropTypes.elementType }),\n  PropTypes.shape(null),\n]);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from '../components/__types__/ref';\nimport KeycloakContext from './KeycloakContext';\n\nexport default function withKeycloak(WrappedComponent) {\n  class WithKeycloakComponent extends Component {\n    renderWrappedComponent = value => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\n    };\n\n    render() {\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\n    }\n  }\n\n  \n  WithKeycloakComponent.propTypes = {\n    forwardedRef: refType,\n  };\n  \n\n  WithKeycloakComponent.defaultProps = {\n    forwardedRef: () => {},\n  };\n\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\n}\n","import PropTypes from 'prop-types';\n\nconst keycloakType = PropTypes.shape({\n  initialized: PropTypes.bool,\n  authenticated: PropTypes.bool,\n});\n\nexport default keycloakType;\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport { apiProjectsGet } from '../../api/projects';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport keycloakType from '../../components/__types__/keycloak';\r\n\r\nclass CustomTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      data: \"\"\r\n     }\r\n  }\r\n\r\n  changeState = () => {   \r\n    this.setState({data:'test data'});  \r\n  };  \r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n        //console.log('Authenticated')\r\n        var projects = await apiProjectsGet(\"http://localhost:8081/services/custportApp\");\r\n        var filteredProjects = projects.data.filter(project => project.customer != null)\r\n        console.log(filteredProjects)\r\n        filteredProjects = filteredProjects.filter(project => project.customer.id === this.props.customerId)\r\n        console.log(filteredProjects)\r\n        this.setState({\r\n            data: filteredProjects\r\n        });\r\n    }\r\n    this.render();\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.fetchData();\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return ( \r\n      <div>\r\n        <DataTable rows={rowData} headers={headerData} data={this.state.data}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title=\"Subscriptions\" description=\"In this table there are open subscriptions\">\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {/*\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.id} >\r\n                    {row.cells.map((cell) => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n                */}\r\n                {this.state.data ? \r\n                  this.state.data.map((project) => (\r\n                    <TableRow key={project.id} >\r\n                        <TableCell key={project.id}>{project.name}</TableCell>\r\n                        <TableCell key={project.id}>{project.contactName}</TableCell>\r\n                        <TableCell key={project.id}>{project.customer ? project.customer.id : \"0\"}</TableCell>\r\n                        <TableCell key={project.id}>{project.createDate}</TableCell>\r\n                        <TableCell key={project.id}>{project.createDate}</TableCell>\r\n                        <TableCell key={project.id}>{project.tickets ? project.tickets.length : \"0\"}</TableCell>\r\n                    </TableRow>\r\n                  )) : null\r\n              }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: 'Project Name',\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: 'Partner Name',\r\n    key: 'partnerName',\r\n  },\r\n  {\r\n    header: 'Entando Version',\r\n    key: 'entandoVersion',\r\n  },\r\n  {\r\n    header: 'Start Date',\r\n    key: 'startDate',\r\n  },\r\n  {\r\n      header: 'End Date',\r\n      key: 'endDate',\r\n  },\r\n  {\r\n      header: 'Open Tickets',\r\n      key: 'openTickets',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: <a href=\"\">Supplier Portal</a>,\r\n       partnerName: 'Leonardo',\r\n       entandoVersion: 5.2,\r\n       startDate: 'October, 2019',\r\n       endDate: 'October, 2022',\r\n       openTickets: '5',\r\n    },\r\n    {\r\n      id: 'b',\r\n      projectName: <a href=\"\">Task Manager</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'July, 2019',\r\n      endDate: 'July, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'c',\r\n      projectName: <a href=\"\">Sales Coordination App</a>,\r\n      partnerName: 'Accenture',\r\n      entandoVersion: 6.2,\r\n      startDate: 'September, 2019',\r\n      endDate: 'September, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'd',\r\n      projectName: <a href=\"\">Website</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'October, 2019',\r\n      endDate: 'October, 2022',\r\n      openTickets: '1',\r\n    }  \r\n];\r\n \r\nexport default withKeycloak(CustomTable);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomersDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async (serviceUrl ) => {\r\n\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport { ModalWrapper, Form, TextInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost, apiCustomerPut } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectPut } from '../../api/projects';\r\n\r\n\r\nclass AddCustomerModal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customerName: \"\",\r\n            customerNumber: \"\",\r\n            customerEmail: \"\"\r\n        }\r\n    }\r\n\r\n    async addCustomer() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            var project = {\r\n                name: \"Test Project 1\",\r\n                description: \"string\",\r\n                systemId: \"JAT\",\r\n                contactName: \"Test\",\r\n                contactPhone: \"123-123-1234\",\r\n                contactEmail: \"test@gmail.com\",\r\n                notes: \"string\",\r\n                projectSubscriptions: null,\r\n                tickets: null,\r\n                partners: null,\r\n                portalUsers: null,\r\n                customer: null\r\n            }\r\n            \r\n            const customer = {\r\n                name: this.state.customerName,\r\n                contactName: this.state.customerName,\r\n                customerNumber: this.state.customerNumber,\r\n                contactNumber: this.state.customerNumber,\r\n                contactEmail: this.state.customerEmail\r\n            }\r\n            \r\n            // create project when we create a customer\r\n            const projectCreated = await apiProjectPost(\"http://localhost:8081/services/custportApp\", project);\r\n            const customerCreated = await apiCustomerPost(\"http://localhost:8081/services/custportApp\", customer);\r\n\r\n            project.id = projectCreated.data.id;\r\n            project.customer = {\r\n                id: customerCreated.data.id\r\n            }\r\n\r\n            // update project with customer\r\n            await apiProjectPut(\"http://localhost:8081/services/custportApp\", project);\r\n\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        this.addCustomer();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ModalWrapper\r\n                buttonTriggerText=\"Add a customer + \"\r\n                modalHeading=\"Add a new customer\"\r\n                buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary\"\r\n                className=\"modal-form\"\r\n                handleSubmit={this.handleSubmit}\r\n            >\r\n            <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n            <Form>\r\n                    <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChange} />\r\n                    <TextInput name=\"customerNumber\" labelText=\"Customer Number\" value={this.state.customerNumber} onChange={this.handleChange} />\r\n                    <TextInput name=\"customerEmail\" labelText=\"Customer Email\" value={this.state.customerEmail} onChange={this.handleChange} />\r\n                </Form>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal); ","import React from 'react';\r\nimport { ModalWrapper, Form, TextInput } from 'carbon-components-react';\r\n  \r\nconst AddPartnerModal = () => (\r\n    <ModalWrapper\r\n        buttonTriggerText=\"Add a partner + \"\r\n        modalHeading=\"Add a new partner\"\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary\"\r\n        className=\"modal-form\"\r\n    >\r\n    <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n       <Form>\r\n            <TextInput name=\"partnerName\" labelText=\"Partner Name\" value='' onChange='' />\r\n            <TextInput name=\"partnerNumber\" labelText=\"Partner Number\" value='' onChange='' />\r\n            <TextInput name=\"partnerEmail\" labelText=\"Partner Email\" value='' onChange='' />\r\n        </Form>\r\n    </ModalWrapper>\r\n);\r\n\r\nexport default AddPartnerModal; ","import React from 'react';\r\nimport { Accordion, AccordionItem, PaginationNav, Search, Tile} from 'carbon-components-react';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost, apiCustomerPut, apiCustomersGet } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectPut } from '../../api/projects';\r\n\r\nconst customer = [\r\n    {\r\n        label: <div><h4>Blue Cross Subscription</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <CustomTable />\r\n    },\r\n    {\r\n        label: <div><h4>Ford</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <CustomTable />\r\n    },\r\n    {\r\n        label: <div><h4>Veriday</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <CustomTable />\r\n    }\r\n]\r\n\r\nclass AdminDashboard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: \"\",\r\n            projects: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCustomer();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomer();\r\n        }\r\n      }\r\n\r\n    async getCustomer() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customers = await apiCustomersGet(\"http://localhost:8081/services/custportApp\");\r\n            this.setState({\r\n                customers: customers\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.customers)\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                <Tile>\r\n                    <h4>All Customers</h4><br/>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Search id=\"search\" placeHolderText=\"Which customer are you looking for?\" />\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <AddPartnerModal />\r\n                                <AddCustomerModal/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tile>  \r\n                \r\n                <div className=\"form-container\">\r\n                    <Accordion>\r\n                        {customer.map((item, index) => (\r\n                            <AccordionItem index={index} title={item.label}>\r\n                                <p>{item.content}</p>\r\n                            </AccordionItem>\r\n                        ))}\r\n                    </Accordion>\r\n                    <Accordion>\r\n                        {this.state.customers.data ? this.state.customers.data.map((customer, index) => {\r\n                            return(\r\n                            <AccordionItem index={index} title={customer.name}>\r\n                                <CustomTable customerId={customer.id}/>\r\n                            </AccordionItem>\r\n                            )\r\n                        }) : null}\r\n                    </Accordion>\r\n                    <PaginationNav cssClass='pagination-right'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","import React, {Component} from 'react';\r\nimport { Select, SelectItem} from 'carbon-components-react';\r\nimport CustomerDetails from '../Customer/customerDetails';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport '../../index.scss';\r\n\r\nexport default class RoleCheck extends Component {\r\n    state = {\r\n        roleType: 'customer'\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const roleType = ['Admin', 'Customer'];\r\n        return (\r\n            \r\n                <div className='role-check'>  \r\n                <Select defaultValue=\"role-type\" name=\"roleType\" labelText=\"Select Role(Testing)\" value={this.state.roleType} onChange={this.handleChanges}>\r\n                        <SelectItem\r\n                                text=\"Select Role\"\r\n                                value=\"role-type\"\r\n                        />\r\n                        {roleType.map((roleType, i) => <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>{roleType}</SelectItem>)}\r\n                        </Select>\r\n                    { this.renderForm()}\r\n                </div>\r\n            \r\n            );\r\n    }\r\n\r\n    // Render Dashboard based on role\r\n    renderForm() {\r\n        if (this.state.roleType === 'customer') return (\r\n            <div>\r\n                <h3>Welcome to Entando Customer Portal</h3>\r\n                <CustomerDetails />\r\n                <CustomTable customerId={17116}/>\r\n            </div>\r\n        )\r\n        if (this.state.roleType === 'admin') return (\r\n            <div>\r\n                <h3>Welcome to Entando Admin Portal</h3>\r\n                <AdminDashboard />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n       <ul id='navigation'>\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/subscription-details\">Subscription Details</NavLink></li>\r\n          <li><NavLink to=\"/subscription\">New or Renew Subscription</NavLink></li>\r\n          <li><NavLink to=\"/service-ticket\">Open Service Ticket</NavLink></li>\r\n          <li><NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink></li>\r\n          <li><NavLink to=\"/manage-users\">Manage Users</NavLink></li>\r\n          <li><NavLink to=\"/configuration-settings\">Configuration Settings</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n \r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport OpenTicket from './Forms/openTicket';\r\nimport EnhancementRequest from './Forms/enhancementRequest';\r\nimport SubscriptionForm from './Forms/SubscriptionForm';\r\nimport Subscription from './SubscriptionDetails/subscription';\r\nimport ManageUser from './Admin/ManageUser/ManageUser';\r\nimport AdminConfiguration from './Admin/Configuration/AdminConfiguration';\r\nimport RoleCheck from './Admin/RoleCheck';\r\nimport Navigation from './Navigation/Navigation';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\r\nimport withKeycloak from '../auth/withKeycloak';\r\n\r\nimport keycloakType from '../components/__types__/keycloak';\r\nimport { apiProjectsGet } from '../api/projects';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n\r\n    async fetchData() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            //console.log('Authenticated')\r\n            const projects = await apiProjectsGet(\"http://localhost:8081/services/custportApp\");\r\n            this.setState({\r\n                data: projects\r\n            });\r\n        }\r\n        else {\r\n            //console.log('Not authenticated')\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.fetchData();\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { t, keycloak } = this.props;\r\n        //console.log(keycloak)\r\n        return (\r\n            <div>  \r\n                <UnauthenticatedView keycloak={keycloak}>\r\n                    <p>User is not authenticated</p>\r\n                </UnauthenticatedView>\r\n                <AuthenticatedView keycloak={keycloak}>\r\n                    <BrowserRouter>\r\n                        <div id=\"dashboard-widget\">\r\n                            <Navigation/>\r\n                            <div style={{marginTop: '100px'}}>\r\n                                <Switch>\r\n                                    <Route path=\"/\" component={RoleCheck} exact />\r\n                                    <Route path=\"/subscription-details\" component={Subscription}/>\r\n                                    <Route path=\"/subscription\" component={SubscriptionForm}/>\r\n                                    <Route path=\"/service-ticket\" component={OpenTicket} />\r\n                                    <Route path=\"/enhancement\" component={EnhancementRequest} />\r\n                                    <Route path=\"/manage-users\" component={ManageUser} />\r\n                                    <Route path=\"/configuration-settings\" component={AdminConfiguration} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </BrowserRouter>\r\n                </AuthenticatedView>\r\n                \r\n            </div>\r\n        )\r\n        \r\n     }\r\n  }\r\n\r\n  App.propTypes = {\r\n    keycloak: keycloakType.isRequired\r\n}\r\n  \r\nexport default withKeycloak(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminDashboard from '../components/Admin/AdminDashboard';\n\nclass AdminDashboardElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<AdminDashboard />, this.mountPoint);\n  }\n}\n\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\n\nexport default AdminDashboardElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\n\nclass AdminAddCustomerElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<AddCustomerModal />, this.mountPoint);\n  }\n}\n\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\n\nexport default AdminAddCustomerElement;\n","export const publishWidgetEvent = (eventId, payload) => {\n  const widgetEvent = new CustomEvent(eventId, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload =>\n  publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","export const INPUT_EVENT_TYPES = {\n    formUpdate: 'customer.form.update',\n    formCreate: 'customer.form.create',\n    formDelete: 'customer.form.delete',\n  };\n  \n  export const OUTPUT_EVENT_TYPES = {\n    select: 'customer.table.select',\n    add: 'customer.table.add',\n    error: 'customer.table.error',\n    delete: 'customer.table.delete',\n  };\n  \n  export const KEYCLOAK_EVENT_TYPE = 'keycloak';\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RoleCheck from '../components/Admin/RoleCheck';\nimport '../index.scss'\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nclass AdminRoleCheckElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <RoleCheck />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\n\n//export default AdminRoleCheckElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomDataTable from '../components/Customer/customDataTable';\nimport KeycloakContext from '../auth/KeycloakContext';\nimport '../index.scss'\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nclass CustomDataTableElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <CustomDataTable />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('custom-datatable-widget', CustomDataTableElement);\n\nexport default CustomDataTableElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomerDetails from '../components/Customer/customerDetails';\n\nclass CustomerDetailsElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<CustomerDetails />, this.mountPoint);\n  }\n}\n\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\n\nexport default CustomerDetailsElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Subscription from '../components/SubscriptionDetails/subscription';\n\nclass SubscriptionElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<Subscription />, this.mountPoint);\n  }\n}\n\ncustomElements.define('subscription-widget', SubscriptionElement);\n\nexport default SubscriptionElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\n\nclass FormsSubscriptionElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<SubscriptionForm />, this.mountPoint);\n  }\n}\n\ncustomElements.define('subscription-form-widget', FormsSubscriptionElement);\n\nexport default FormsSubscriptionElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicket from '../components/Forms/openTicket';\n\nclass FormsOpenTicketElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<OpenTicket />, this.mountPoint);\n  }\n}\n\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\n\nexport default FormsOpenTicketElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navigation from '../components/Navigation/Navigation';\n\nclass NavigationElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<Navigation />, this.mountPoint);\n  }\n}\n\ncustomElements.define('navigation-widget', NavigationElement);\n\nexport default NavigationElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\n\nclass FormsEnhancementRequestElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<EnhancementRequest />, this.mountPoint);\n  }\n}\n\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\n\nexport default FormsEnhancementRequestElement;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport retargetEvents from 'react-shadow-dom-retarget-events';\r\nimport '../index.scss'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('app-element', AppElement);"],"sourceRoot":""}