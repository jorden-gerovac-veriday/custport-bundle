{"version":3,"sources":["components/Forms/openTicket.js","components/Forms/enhancementRequest.js","components/Forms/SubscriptionForm.js","components/Customer/customerDetails.js","components/Customer/customDataTable.js","components/Admin/AddCustomerModal.js","auth/KeycloakViews.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","components/Admin/AdminDashboard.js","api/helpers.js","api/tickets.js","components/Admin/RoleCheck.js","components/Navigation/Navigation.js","components/App.js","components/__types__/keycloak.js","custom-elements/AdminDashboardElement.js","custom-elements/AdminAddCustomerElement.js","custom-elements/AdminRoleCheckElement.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/CustomDataTableElement.js","custom-elements/CustomerDetailsElement.js","components/SubscriptionDetails/subscription.js","custom-elements/SubscriptionElement.js","custom-elements/FormsSubscriptionElement.js","custom-elements/FormsOpenTicketElement.js","custom-elements/NavigationElement.js","custom-elements/FormsEnhancementRequestElement.js","custom-elements/AppElement.js"],"names":["OpenTicket","state","ticketNo","customerName","projectName","openedBy","priority","partnerName","ticketDescription","handleChanges","e","input","target","name","value","setState","handleFormSubmit","event","console","log","preventDefault","className","Form","onSubmit","this","TextInput","labelText","onChange","TextArea","placeholder","Button","kind","tabIndex","type","Component","EnhancementRequest","enhancementDescription","SubscriptionForm","customerNo","customerType","customerEmail","startDate","subscriptionLevel","subscriptionLength","contactName","contactEmail","contactNo","Select","defaultValue","SelectItem","text","map","i","toLowerCase","renderForm","DatePicker","dateFormat","datePickerType","DatePickerInput","customerData","CustomerDetails","id","Tile","headerData","header","key","rowData","href","entandoVersion","endDate","openTickets","CustomTable","props","DataTable","rows","headers","getHeaderProps","getTableProps","TableContainer","title","description","Table","TableHead","TableRow","TableHeader","TableBody","row","cells","cell","TableCell","String","data","tickets","AddCustomerModal","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","AuthenticatedView","children","keycloak","initialized","authenticated","UnauthenticatedView","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","forwardedRef","rest","ref","Consumer","defaultProps","forwardRef","customer","label","content","Search","placeHolderText","Accordion","item","index","AccordionItem","getDefaultOptions","Headers","Authorization","window","entando","token","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","json","Promise","reject","Error","statusText","resource","apiCustomersGet","serviceUrl","method","roleType","t","render","fetchData","prevProps","changedAuth","Navigation","to","bool","path","component","RoleCheck","exact","JSON","stringify","getKeycloakInstance","AdminDashboardElement","container","document","createElement","mountPoint","appendChild","attachShadow","mode","ReactDOM","Provider","HTMLElement","customElements","define","AdminAddCustomerElement","AdminRoleCheckElement","subscribeToWidgetEvent","eventType","eventHandler","addEventListener","removeEventListener","KEYCLOAK_EVENT_TYPE","CustomDataTableElement","unsubscribeFromKeycloakEvent","CustomerDetailsElement","subscriptionData","Subscription","commitment","quantityRequest","components","level","license","SubscriptionElement","FormsSubscriptionElement","FormsOpenTicketElement","NavigationElement","FormsEnhancementRequestElement","AppElement"],"mappings":"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","file":"static/js/main.566367d3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\n\r\nexport default class OpenTicket extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        ticketDescription: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n    };\r\n        \r\n    render() {\r\n        const textareaProps = {\r\n            labelText: 'Ticket Description',\r\n            placeholder: 'Add ticket description',\r\n            name: 'ticketDescription',\r\n        }\r\n        return (\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form-desc\">\r\n                        <h3>Open Service Ticket</h3>\r\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                    </div>\r\n\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"ticketNo\" labelText=\"Ticket Number\" value={this.state.ticketNo} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"priority\" labelText=\"Priority\" value={this.state.priority} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"openedBy\" labelText=\"Ticket Opened By\" value={this.state.openedBy} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"partnerName\" labelText=\"Partner Name\" value={this.state.partnerName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextArea {...textareaProps} value={this.state.ticketDescription} onChange={this.handleChanges}  />\r\n                                <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        enhancementDescription: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n    };\r\n      \r\n    render() {\r\n        const textareaProps = {\r\n            labelText: 'Enhancement Description',\r\n            placeholder: 'Add enhancement description',\r\n            name: 'enhamcementDescription',\r\n        }\r\n        return (\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form-desc\">\r\n                        <h3>Request for Enhancements</h3>\r\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                    </div>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"ticketNo\" labelText=\"Ticket Number\" value={this.state.ticketNo} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"priority\" labelText=\"Priority\" value={this.state.priority} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                 <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges}/>\r\n                                 <TextInput name=\"openedBy\" labelText=\"Ticket Opened By\" value={this.state.openedBy} onChange={this.handleChanges}/>\r\n                                 <TextInput name=\"partnerName\" labelText=\"Partner Name\" value={this.state.partnerName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextArea {...textareaProps} value={this.state.enhancementDescription} onChange={this.handleChanges}  />\r\n                                <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput} from 'carbon-components-react';\r\n\r\nexport default class SubscriptionForm extends Component {\r\n    state = {\r\n        customerNo: '',\r\n        customerName: '',\r\n        customerType: '',\r\n        customerEmail: '',\r\n        projectName: '',\r\n        startDate: '',\r\n        subscriptionLevel: '',\r\n        subscriptionLength: '',\r\n        contactName: '',\r\n        contactEmail: '',\r\n        contactNo: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.customerType)\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() {\r\n        const customerType = ['New', 'Existing'];\r\n        return (\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form-desc\">\r\n                        <h3>New / Renew Subscription</h3>\r\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                    </div>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"customer-type\" name=\"customerType\" labelText=\"Customer Type\" value={this.state.customerType} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Select Customer Type\"\r\n                                        value=\"customer-type\"\r\n                                    />\r\n                                    {customerType.map((customerType, i) => <SelectItem key={i} text={customerType} value={customerType.toLowerCase()}>{customerType}</SelectItem>)}\r\n                                </Select>\r\n                                <TextInput name=\"customerNo\" labelText=\"Customer Number\" value={this.state.customerNo} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges} />\r\n                                <TextInput name=\"customerEmail\" labelText=\"Customer Email\" value={this.state.customerEmail} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        { this.renderForm()}\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Render the Customer Type Form\r\n    renderForm() {\r\n        const subscriptionLevel = ['Level1', 'Level2', 'Level3'];\r\n        const subscriptionLength = ['1 Year','2 Years', '3 Years'];\r\n        if (this.state.customerType === 'new') return (\r\n            <div>\r\n                <p><strong>New Subscription</strong></p><br/>\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                        <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges} />\r\n                        <Select defaultValue=\"subscription-level\" name=\"subscriptionLevel\" labelText=\"Desired subscription Level\" value={this.state.subscriptionLevel} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-level\"\r\n                            />\r\n                            {subscriptionLevel.map((subscriptionLevel, i) => <SelectItem key={i} text={subscriptionLevel} value={subscriptionLevel.toLowerCase()}>{subscriptionLevel}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name\" value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactNumber\" labelText=\"Contact Phone Number\" value={this.state.contactNo} onChange={this.handleChanges} />\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Desired Subscription Start Date\"\r\n                                value={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                            />\r\n                        </DatePicker>\r\n                        <Select defaultValue=\"subscription-length\" name=\"subscriptionLength\" labelText=\"Desired subscription Length\" value={this.state.subscriptionLength} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-length\"\r\n                            />\r\n                            {subscriptionLength.map((subscriptionLength, i) => <SelectItem key={i} text={subscriptionLength} value={subscriptionLength.toLowerCase()}>{subscriptionLength}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email\" value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        if (this.state.customerType === 'existing') return (\r\n            <div>\r\n                <p><strong>Renew Subscription</strong></p><br/>\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                        <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges} />\r\n                        <Select defaultValue=\"subscription-level\" name=\"subscriptionLevel\" labelText=\"Desired subscription Level\" value={this.state.subscriptionLevel} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-level\"\r\n                            />\r\n                            {subscriptionLevel.map((subscriptionLevel, i) => <SelectItem key={i} text={subscriptionLevel} value={subscriptionLevel.toLowerCase()}>{subscriptionLevel}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name\" value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactNumber\" labelText=\"Contact Phone Number\" value={this.state.contactNo} onChange={this.handleChanges} />\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Desired Subscription Start Date\"\r\n                                value={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                            />\r\n                        </DatePicker>\r\n                        <Select defaultValue=\"subscription-length\" name=\"subscriptionLength\" labelText=\"Desired subscription Length\" value={this.state.subscriptionLength} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-length\"\r\n                            />\r\n                            {subscriptionLength.map((subscriptionLength, i) => <SelectItem key={i} text={subscriptionLength} value={subscriptionLength.toLowerCase()}>{subscriptionLength}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email\" value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport { Tile } from 'carbon-components-react';\r\n\r\nconst customerData = {\r\n    name: 'Ford',\r\n    id: '5564 4563 3345',\r\n    startDate: '01/01/2020'\r\n}\r\n\r\nconst CustomerDetails = () => {\r\n    const { name, id, startDate } = customerData //destructuring\r\n    return (\r\n        <div className=\"customer-details\">\r\n            <Tile>\r\n                <p><strong>Customer Name:</strong> {name}</p>\r\n                <p><strong>Customer Id:</strong> {id}</p>\r\n                <p><strong>Start Date:</strong> {startDate}</p>\r\n            </Tile>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default CustomerDetails;\r\n","import React from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\n    \r\nconst CustomTable = (props) => {\r\n    return (\r\n        <DataTable rows={rowData} headers={headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title=\"Subscriptions\" description=\"In this table there are open subscriptions\">\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.id} >\r\n                    {row.cells.map((cell) => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n              <p>{String(props.data.tickets)}</p>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    )\r\n}\r\n\r\n\r\nconst headerData = [\r\n  {\r\n    header: 'Project Name',\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: 'Partner Name',\r\n    key: 'partnerName',\r\n  },\r\n  {\r\n    header: 'Entando Version',\r\n    key: 'entandoVersion',\r\n  },\r\n  {\r\n    header: 'Start Date',\r\n    key: 'startDate',\r\n  },\r\n  {\r\n      header: 'End Date',\r\n      key: 'endDate',\r\n  },\r\n  {\r\n      header: 'Open Tickets',\r\n      key: 'openTickets',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: <a href=\"\">Supplier Portal</a>,\r\n       partnerName: 'Leonardo',\r\n       entandoVersion: 5.2,\r\n       startDate: 'October, 2019',\r\n       endDate: 'October, 2022',\r\n       openTickets: '5',\r\n    },\r\n    {\r\n      id: 'b',\r\n      projectName: <a href=\"\">Task Manager</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'July, 2019',\r\n      endDate: 'July, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'c',\r\n      projectName: <a href=\"\">Sales Coordination App</a>,\r\n      partnerName: 'Accenture',\r\n      entandoVersion: 6.2,\r\n      startDate: 'September, 2019',\r\n      endDate: 'September, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'd',\r\n      projectName: <a href=\"\">Website</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'October, 2019',\r\n      endDate: 'October, 2022',\r\n      openTickets: '1',\r\n    }  \r\n];\r\n \r\nexport default CustomTable;\r\n","import React from 'react';\r\nimport { ModalWrapper, Form, TextInput } from 'carbon-components-react';\r\n  \r\nconst AddCustomerModal = () => (\r\n    <ModalWrapper\r\n        buttonTriggerText=\"Add a customer + \"\r\n        modalHeading=\"Add a new customer\"\r\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary\"\r\n        className=\"modal-form\"\r\n    >\r\n    <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n       <Form>\r\n            <TextInput name=\"customerName\" labelText=\"Customer Name\" value='' onChange='' />\r\n            <TextInput name=\"customerNumber\" labelText=\"Customer Number\" value='' onChange='' />\r\n            <TextInput name=\"customerEmail\" labelText=\"Customer Email\" value='' onChange='' />\r\n        </Form>\r\n           \r\n    </ModalWrapper>\r\n);\r\n\r\nexport default AddCustomerModal; ","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.shape({ current: PropTypes.elementType }),\n  PropTypes.shape(null),\n]);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from '../components/__types__/ref';\nimport KeycloakContext from './KeycloakContext';\n\nexport default function withKeycloak(WrappedComponent) {\n  class WithKeycloakComponent extends Component {\n    renderWrappedComponent = value => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\n    };\n\n    render() {\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\n    }\n  }\n\n  \n  WithKeycloakComponent.propTypes = {\n    forwardedRef: refType,\n  };\n  \n\n  WithKeycloakComponent.defaultProps = {\n    forwardedRef: () => {},\n  };\n\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\n}\n","import React from 'react';\r\nimport { Accordion, AccordionItem, Search, Tile} from 'carbon-components-react';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nconst customer = [\r\n    {\r\n        label: <h4>Blue Cross Subscription</h4>,\r\n        content: <CustomTable />\r\n    },\r\n    {\r\n        label: <h4>Ford</h4>,\r\n        content: <CustomTable />\r\n    },\r\n    {\r\n        label: <h4>Veriday</h4>,\r\n        content: <CustomTable />\r\n    }\r\n]\r\n\r\n//const { keycloak } = props;\r\n//const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\nconst AdminDashboard = (props) => (\r\n    <>\r\n    <AuthenticatedView keycloak={props.keycloak}>\r\n    <div className=\"admin-dashboard\">\r\n        <Tile>\r\n            <h4>All Customers</h4><br/>\r\n            <div className=\"bx--grid\">\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                        <Search id=\"search\" placeHolderText=\"Which customer are you looking for?\" />\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                        <AddCustomerModal/> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Tile>  \r\n        \r\n        <div className=\"form-container\">\r\n            <Accordion>\r\n                {customer.map((item, index) => (\r\n                    <AccordionItem index={index} title={item.label}>\r\n                        <p>{item.content}</p>\r\n                    </AccordionItem>\r\n                ))}\r\n            </Accordion>\r\n        </div>\r\n    </div>\r\n    </AuthenticatedView>\r\n    <UnauthenticatedView keycloak={props.keycloak}>\r\n        <p>Unauthenticated</p>\r\n    </UnauthenticatedView>\r\n    </>\r\n);\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const getUrl = (url) => {\n  return `${url}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  const headers = {\n    ...(response.headers.has('X-Total-Count')\n      ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\n      : {}),\n  };\n\n  if (response.status === 204) {\n    return { tickets: '' };\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? { tickets: await response.json(), headers }\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/project-subscriptions';\n\nexport const apiCustomersDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiCustomersGet = async (serviceUrl ) => {\n\n  const url = getUrl(\n    `${serviceUrl}/${resource}`\n  );\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n","import React, {Component} from 'react';\r\nimport { Select, SelectItem} from 'carbon-components-react';\r\nimport CustomerDetails from '../Customer/customerDetails';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport { apiCustomersGet } from '../../api/tickets';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass RoleCheck extends Component {\r\n    state = {\r\n        roleType: 'customer',\r\n        data: {}\r\n    };\r\n\r\n    async fetchData() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            console.log('Authenticated')\r\n            const tickets = await apiCustomersGet(\"http://localhost:8081/services/custportApp\");\r\n            this.setState({\r\n                data: tickets\r\n            });\r\n        }\r\n        else {\r\n            console.log('Not authenticated')\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.fetchData();\r\n        }\r\n      }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.data.tickets)\r\n        const roleType = ['Admin', 'Customer'];\r\n        return (\r\n            <div className='role-check'>  \r\n            <Select defaultValue=\"role-type\" name=\"roleType\" labelText=\"Select Role(Testing)\" value={this.state.roleType} onChange={this.handleChanges}>\r\n                    <SelectItem\r\n                            text=\"Select Role\"\r\n                            value=\"role-type\"\r\n                    />\r\n                    {roleType.map((roleType, i) => <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>{roleType}</SelectItem>)}\r\n                    </Select>\r\n                { this.renderForm()}\r\n            </div>    \r\n            );\r\n    }\r\n\r\n    // Render Dashboard based on role\r\n    renderForm() {\r\n        if (this.state.roleType === 'customer') return (\r\n            <div>\r\n                <h3>Welcome to Entando Customer Portal</h3>\r\n                <CustomerDetails />\r\n                <CustomTable data={this.state.data}/>\r\n            </div>\r\n        )\r\n        if (this.state.roleType === 'admin') return (\r\n            <div>\r\n                <h3>Welcome to Entando Admin Portal</h3>\r\n                <AdminDashboard />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(RoleCheck)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n       <ul id='navigation'>\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/subscription\">New or Renew Subscription</NavLink></li>\r\n          <li><NavLink to=\"/service-ticket\">Open Service Ticket</NavLink></li>\r\n          <li><NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink></li>\r\n       </ul>\r\n    );\r\n}\r\n \r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport OpenTicket from './Forms/openTicket';\r\nimport EnhancementRequest from './Forms/enhancementRequest';\r\nimport SubscriptionForm from './Forms/SubscriptionForm';\r\nimport RoleCheck from './Admin/RoleCheck';\r\nimport Navigation from './Navigation/Navigation';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\r\nimport withKeycloak from '../auth/withKeycloak';\r\n\r\nimport keycloakType from '../components/__types__/keycloak';\r\nimport { apiCustomersGet } from '../api/tickets';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n\r\n    async fetchData() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            console.log('Authenticated')\r\n            const tickets = await apiCustomersGet(\"http://localhost:8081/services/custportApp\");\r\n            this.setState({\r\n                data: tickets\r\n            });\r\n        }\r\n        else {\r\n            console.log('Not authenticated')\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.fetchData();\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { t, keycloak } = this.props;\r\n        return (\r\n            <div>  \r\n                <UnauthenticatedView keycloak={keycloak}>\r\n                    <p>User is not authenticated</p>\r\n                </UnauthenticatedView>\r\n                <AuthenticatedView keycloak={keycloak}>\r\n                    <BrowserRouter>\r\n                        <div id=\"dashboard-widget\">\r\n                            <Navigation/>\r\n                            <Switch>\r\n                                <Route path=\"/\" component={RoleCheck} exact/>\r\n                                <Route path=\"/subscription\" component={SubscriptionForm}/>\r\n                                <Route path=\"/service-ticket\" component={OpenTicket} />\r\n                                <Route path=\"/enhancement\" component={EnhancementRequest}/>\r\n                            </Switch>\r\n                        </div>\r\n                    </BrowserRouter>\r\n                    <p>Tickets:</p>\r\n                    <p>{JSON.stringify(this.state.data)}</p>\r\n                </AuthenticatedView>\r\n                \r\n            </div>\r\n        )\r\n        \r\n     }\r\n  }\r\n\r\n  App.propTypes = {\r\n    keycloak: keycloakType.isRequired\r\n}\r\n  \r\nexport default withKeycloak(App);","import PropTypes from 'prop-types';\n\nconst keycloakType = PropTypes.shape({\n  initialized: PropTypes.bool,\n  authenticated: PropTypes.bool,\n});\n\nexport default keycloakType;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminDashboard from '../components/Admin/AdminDashboard';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak &&\n    { ...window.entando.keycloak, initialized: true }\n  ) || { initialized: false };\n\nclass AdminDashboardElement extends HTMLElement {\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.container = document.createElement('div');\n        this.mountPoint = document.createElement('div');\n        this.container.appendChild(this.mountPoint);\n\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        shadowRoot.appendChild(this.container);\n        this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n        this.render();\n  }\n\n  render() {\n    ReactDOM.render(<KeycloakContext.Provider value={this.keycloak}>\n      <AdminDashboard />\n  </KeycloakContext.Provider>, this.mountPoint);\n  }\n}\n\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\n\nexport default AdminDashboardElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\n\nclass AdminAddCustomerElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<AddCustomerModal />, this.mountPoint);\n  }\n}\n\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\n\nexport default AdminAddCustomerElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RoleCheck from '../components/Admin/RoleCheck';\n\nclass AdminRoleCheckElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<RoleCheck />, this.mountPoint);\n  }\n}\n\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\n\nexport default AdminRoleCheckElement;\n","export const publishWidgetEvent = (eventId, payload) => {\n  const widgetEvent = new CustomEvent(eventId, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload =>\n  publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","export const INPUT_EVENT_TYPES = {\n    formUpdate: 'customer.form.update',\n    formCreate: 'customer.form.create',\n    formDelete: 'customer.form.delete',\n  };\n  \n  export const OUTPUT_EVENT_TYPES = {\n    select: 'customer.table.select',\n    add: 'customer.table.add',\n    error: 'customer.table.error',\n    delete: 'customer.table.delete',\n  };\n  \n  export const KEYCLOAK_EVENT_TYPE = 'keycloak';\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomDataTable from '../components/Customer/customDataTable';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {\n  subscribeToWidgetEvent\n} from '../helpers/widgetEvents';\nimport {\n  KEYCLOAK_EVENT_TYPE,\n} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nclass CustomDataTableElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n\n  unsubscribeFromKeycloakEvent;\n\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    //this.container = document.createElement('div');\n    this.mountPoint = document.createElement('div');\n    //this.container.appendChild(this.mountPoint);\n\n    //const shadowRoot = this.attachShadow({ mode: 'open' });\n    //shadowRoot.appendChild(this.container);\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    \n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <CustomDataTable />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('custom-datatable-widget', CustomDataTableElement);\n\nexport default CustomDataTableElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomerDetails from '../components/Customer/customerDetails';\n\nclass CustomerDetailsElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<CustomerDetails />, this.mountPoint);\n  }\n}\n\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\n\nexport default CustomerDetailsElement;\n","import React from 'react';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport { Tile } from 'carbon-components-react';\r\n\r\nconst subscriptionData = {\r\n    description: 'Entando Product Support Subscription Suplier Portal',\r\n    commitment: 'Leonardo',\r\n    type: 'Product Support Subscription Entando Platform',\r\n    quantityRequest: '1(8 Crore)',\r\n    components: '',\r\n    level: 'Gold',\r\n    startDate: 'May 2019',\r\n    endDate: 'May 2020',\r\n    license: 'Free Commercial Open Source'\r\n}\r\nconst Subscription = () => {\r\n    const { description, commitment, type, quantityRequest, components, level, startDate, endDate, license } = subscriptionData\r\n    return (\r\n        <div className=\"subscription-details\">\r\n            <Tile>\r\n                <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <p><strong>Description:</strong> {description}</p>\r\n                            <p><strong>Commitment:</strong> {commitment}</p>\r\n                            <p><strong>Type:</strong> {type}</p>\r\n                            <p><strong>Quantity Request:</strong> {quantityRequest}</p>\r\n                            <p><strong>Components:</strong> {components}</p>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <p><strong>Level:</strong> {level}</p>\r\n                            <p><strong>Start Date:</strong> {startDate}</p>\r\n                            <p><strong>End Date:</strong> {endDate}</p>\r\n                            <p><strong>License:</strong> {license}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Tile>\r\n            <br/>\r\n            <CustomTable/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscription;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Subscription from '../components/SubscriptionDetails/subscription';\n\nclass SubscriptionElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<Subscription />, this.mountPoint);\n  }\n}\n\ncustomElements.define('subscription-widget', SubscriptionElement);\n\nexport default SubscriptionElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\n\nclass FormsSubscriptionElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<SubscriptionForm />, this.mountPoint);\n  }\n}\n\ncustomElements.define('subscription-form-widget', FormsSubscriptionElement);\n\nexport default FormsSubscriptionElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicket from '../components/Forms/openTicket';\n\nclass FormsOpenTicketElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<OpenTicket />, this.mountPoint);\n  }\n}\n\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\n\nexport default FormsOpenTicketElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navigation from '../components/Navigation/Navigation';\n\nclass NavigationElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<Navigation />, this.mountPoint);\n  }\n}\n\ncustomElements.define('navigation-widget', NavigationElement);\n\nexport default NavigationElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\n\nclass FormsEnhancementRequestElement extends HTMLElement {\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.appendChild(this.mountPoint);\n    ReactDOM.render(<EnhancementRequest />, this.mountPoint);\n  }\n}\n\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\n\nexport default FormsEnhancementRequestElement;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport retargetEvents from 'react-shadow-dom-retarget-events';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    //this.container = document.createElement('div');\r\n    this.mountPoint = document.createElement('div');\r\n    //this.container.appendChild(this.mountPoint);\r\n\r\n    //const shadowRoot = this.attachShadow({ mode: 'open' });\r\n    //shadowRoot.appendChild(this.container);\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('app-element', AppElement);"],"sourceRoot":""}