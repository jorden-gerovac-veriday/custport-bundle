{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","auth/KeycloakViews.js","components/Admin/EditProjectModal.js","components/Customer/customDataTable.js","components/Customer/customerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","api/subscriptions.js","api/productVersion.js","components/Forms/SubscriptionForm.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUser/AssignUser.js","components/Admin/ManageUser/DeleteUser.js","components/Admin/ManageUser/ManageUser.js","components/Admin/AdminDashboard.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminDashboardElement.js","api/tickets.js","api/ticketingsystem.js","components/SubscriptionDetails/TicketList.js","components/Admin/EditSubscriptionModal.js","components/SubscriptionDetails/subscription.js","components/App.js","custom-elements/AdminAddCustomerElement.js","components/Admin/RoleCheck.js","custom-elements/AdminRoleCheckElement.js","custom-elements/CustomDataTableElement.js","custom-elements/CustomerDetailsElement.js","custom-elements/SubscriptionElement.js","components/Forms/openTicket.js","custom-elements/FormsOpenTicketElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","components/Forms/enhancementRequest.js","custom-elements/FormsEnhancementRequestElement.js","custom-elements/AppElement.js","custom-elements/TicketListElement.js","components/Admin/Configuration/TicketingSystem.js","components/Admin/AddProductVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","custom-elements/OpenTicketElement.js","custom-elements/ManageUserElement.js","custom-elements/AssignUserElement.js","custom-elements/DeleteUserElement.js","custom-elements/TicketingSystemElement.js","custom-elements/ProductVersionElement.js","custom-elements/SubscriptionFormElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getKeycloakToken","window","entando","authenticated","token","hasKeycloakClientRole","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","data","json","Promise","reject","Error","statusText","resource","apiCustomersGet","serviceUrl","method","apiCustomerGet","id","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiGetCustomersProjects","customerId","apiAddProjectToCustomer","projectId","apiAdminCustomersGet","myResource","apiMyCustomersGet","apiGetMyCustomersProjects","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","render","location","reload","clearValues","document","querySelector","className","baseState","customerNumber","contactName","contactPhone","contactEmail","notes","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","addEventListener","ModalWrapper","buttonTriggerText","t","modalHeading","buttonTriggerClassName","handleSubmit","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","project","apiProjectPut","apiAddTicketToProject","ticketId","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiAddPartnerToProject","partnerId","apiGetProjectIdNames","apiAdminProjectsGet","apiMyProjectsGet","partnerNumber","partnerPost","projectList","prevProps","initialized","changedAuth","getProjects","projects","result","Select","defaultValue","SelectItem","text","Object","keys","map","i","console","log","description","systemId","alert","projectPost","customerList","getCustomers","getAllProjects","customers","label","AuthenticatedView","children","UnauthenticatedView","projectPut","modalId","buttonId","buttonClassName","CustomTable","fetchData","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","title","Table","TableHead","TableRow","header","TableHeader","TableBody","index","projectSubscriptions","TableCell","partners","tickets","sub","to","entandoVersion","String","Date","startDate","toDateString","setMonth","getMonth","lengthInMonths","key","projectName","href","partnerName","endDate","openTickets","getCustomer","Tile","updateCustomer","getCustomersProjects","AccordionItem","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiGetMySubscription","apiRenewSubscription","projectSubscriptionRenew","apiProductVersionsGet","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","subscriptionLevel","GOLD","PLATINUM","subscriptionStatus","subscriptionTypes","submitSuccess","submitError","event","preventDefault","subscriptionType","newSubscription","then","res","catch","err","renewSubscription","subscriptionLength","entandoVersionId","productVersions","selectedProjectId","match","Number","isInteger","subscriptionRequest","projectSubscription","level","projectIdsNames","unshift","subscriptionLevelList","entries","versionList","version","formInputs","formComponents","setupFormComponents","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","type","isAdmin","createFormMessage","subMessageKey","required","toLowerCase","renderForm","Button","kind","tabIndex","successErrorMessage","apiUserDelete","apiUsersGet","apiUserPost","user","apiUserGetByUsername","username","apiKeycloakUserGet","client_id","password","grant_type","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","email","assignUser","handleFormValidation","assignUserToProject","getPortalUserId","users","portalUserId","portalUserApi","portalUser","message","createPortalUser","authServerUrl","keycloakUrl","userList","size","handleRemoveUser","portalUsers","updatedPortalUsers","delete","handleUserDisplay","displayUsers","filterText","handleMapFormatting","portalUsernames","values","dateAdded","createdTimestamp","toLocaleString","month","getFullYear","userAccess","onClick","fill","row","cells","cell","ManageUser","userFunctionality","content","open","Accordion","toString","handleSearch","newFilteredState","filter","startsWith","filteredCustomers","currentPage","undefined","forceUpdate","customersProjects","role","numberOfPages","Math","ceil","Search","placeHolderText","onKeyPress","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","totalItems","itemsShown","cssClass","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminDashboardElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","appendChild","getAttribute","ReactDOM","Provider","HTMLElement","customElements","define","jiraResource","apiJiraTicketsGet","organization","apiJiraTicketPost","ticket","apiTicketingSystemDelete","apiTicketingSystemsGet","apiTicketingSystemPost","ticketingsystem","apiTicketingSystemPut","TicketList","ticketingSystems","currentTicketingSystem","split","createDate","creationDate","openTicket","subscription","moment","format","subscriptionPut","submitMsg","calendar","disabled","subscriptionData","params","getSubscription","quantityRequest","license","path","AdminAddCustomerElement","RoleCheck","roleType","AdminRoleCheckElement","CustomDataTableElement","CustomerDetailsElement","SubscriptionElement","createTicket","priority","updateDate","types","priorities","ticketingSystem","fetchProjects","getTicketingSystem","FormsOpenTicketElement","Navigation","NavigationElement","EnhancementRequest","ticketNo","customerName","openedBy","enhancementDescription","FormsEnhancementRequestElement","AppElement","TicketListCustomerElement","createTicketingSystem","updateTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","getTicketingSystems","confirm","handleDelete","ProductVersion","getProductVersions","ToggleSmall","handleToggleChange","aria-label","defaultToggled","entVersion","AdminConfiguration","adminConfig","class","AdminConfigurationElement","OpenTicketElement","ManageUserElement","AssignUserElement","DeleteUserElement","TicketingSystemElement","ProductVersionElement","SubsciptionFormElement"],"mappings":"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","file":"static/js/main.e253d908.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport default i18n;","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([\r\n  PropTypes.func,\r\n  PropTypes.shape({ current: PropTypes.elementType }),\r\n  PropTypes.shape(null),\r\n]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  \r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n  \r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","export const getKeycloakToken = () => {\r\n  if (\r\n    window &&\r\n    window.entando &&\r\n    window.entando.keycloak &&\r\n    window.entando.keycloak.authenticated\r\n  ) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const hasKeycloakClientRole = (clientRole) => {\r\n  if (getKeycloakToken()) {\r\n    const { resourceAccess } = window.entando.keycloak;\r\n    if (resourceAccess) {\r\n      for (const client in resourceAccess) {\r\n        const item = resourceAccess[client];\r\n        if (item.roles && item.roles.includes(clientRole)) {\r\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json'\r\n  }),\r\n});\r\n\r\nexport const getDefaultKeycloakOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  }),\r\n});\r\n\r\nexport const getUrl = (url) => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count')\r\n      ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\r\n      : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '', status: response.status};\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers, status: response.status }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomersDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGetForAdminDashboard = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}/all`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/customers/admin';\r\nexport const apiAdminCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/customers/mycustomers';\r\nexport const apiMyCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${myResource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost } from '../../api/customers';\r\n\r\nclass AddCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {}\r\n        };\r\n\r\n        this.baseState = this.state\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = apiCustomerPost(this.props.serviceUrl, this.state);\r\n            this.render();\r\n            window.location.reload(false);\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const customerModalElement = document.querySelector('#modal-form-customer');\r\n        if(!customerModalElement.className.includes(\"is-visible\")) {\r\n            this.setState(this.baseState);\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const modalOpenButton = document.querySelector('.add-customer-button');\r\n        modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n                modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n                buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-customer\"\r\n                handleSubmit={this.handleFormSubmit}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <p> {i18n.t('adminDashboard.addCustomer.desc')} </p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName')}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber')}\r\n                            value={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            value={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            value={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail')}\r\n                            value={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        {/*<button disabled={!this.isValid()} type=\"submit\">Submit</button>*/}\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${id}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGetForCustomer = async (serviceUrl, customerNumber) => {\r\n  const url = `${serviceUrl}/${resource}/subscriptions/customer/${customerNumber}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsTickets = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectIdNames = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/nameId/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/projects/admin';\r\nexport const apiAdminProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/projects/myprojects';\r\nexport const apiMyProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiPartnerPost } from '../../api/partners';\r\nimport { apiProjectPost, apiProjectsGet, apiAddPartnerToProject } from '../../api/projects';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {}\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getProjects();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getProjects() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const projects = await apiProjectsGet(this.props.serviceUrl);\r\n      this.setState({ projectList: projects });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n    window.location.reload(false);\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes\r\n      };\r\n      this.partnerPost(partner);\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if(!partnerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {}\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-partner-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addPartner')}\r\n        modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-partner\"\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        <div className=\"form-container\">\r\n          <p> {i18n.t('adminDashboard.addPartner.desc')}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"project-list\"\r\n              name=\"projectId\"\r\n              labelText={i18n.t('adminDashboard.addPartner.projectList')}\r\n              value={this.state.projectId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['projectId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\r\n              {Object.keys(this.state.projectList).length !== 0\r\n                ? this.state.projectList.data.map((projectList, i) => (\r\n                    <SelectItem key={i} text={projectList.name} value={projectList.id}>\r\n                      {projectList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerName')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"partnerNumber\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerNumber')}\r\n              value={this.state.partnerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['partnerNumber']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n            {/*<button disabled={!this.isValid()} type=\"submit\">Submit</button>*/}\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectsGet } from '../../api/projects';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {}\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') == -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({ customerList: customers });\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n    window.location.reload(false);\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    console.log(this.state.customerId)\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId) {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project);\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if(!projectModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {}\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n  \r\n  render() {\r\n    const customerList = ['Customer1', 'Customer2', 'Customer3'];\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading=\"Add a project\"\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-project\"\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        <div className=\"form-container\">\r\n          <p> {i18n.t('adminDashboard.addProject.desc')} </p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"customer-list\"\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList')}\r\n              defaultValue={{ label: \"Select Dept\", value: 0 }}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.state.customerList).length !== 0\r\n                ? this.state.customerList.data.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc')}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail')}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n            {/*<button disabled={!this.isValid()} type=\"submit\">Submit</button>*/}\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPut, apiProjectsGet } from '../../api/projects';\r\n\r\nclass EditProjectModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            projects: {},\r\n            customerList: {},\r\n            customerId: '',\r\n            name: '',\r\n            description: '',\r\n            systemId: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail:'',\r\n            notes:'',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: ''\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if(this.state.name === ''){\r\n          formIsValid = false;\r\n          invalid[\"name\"] = true;\r\n        }\r\n\r\n        //description\r\n        if(this.state.description === ''){\r\n            formIsValid = false;\r\n            invalid[\"description\"] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if(typeof this.state.contactEmail !== \"undefined\"){\r\n          let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n          let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n    \r\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && this.state.contactEmail.indexOf('@@') == -1 && lastDotPos > 2 && (this.state.contactEmail.length - lastDotPos) > 2)) {\r\n            formIsValid = false;\r\n            invalid[\"contactEmail\"] = true;\r\n          }\r\n        }\r\n    \r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n          this.getAllProjects();\r\n        }\r\n      }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customers = await apiCustomersGet(this.props.serviceUrl);\r\n            this.setState({customerList: customers})\r\n        }\r\n    }\r\n\r\n    async getAllProjects() {\r\n        const projects = await apiProjectsGet(this.props.serviceUrl);\r\n        this.setState({\r\n          projects: projects.data\r\n        });\r\n      }\r\n\r\n    async projectPut(project) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const result = await apiProjectPut(this.props.serviceUrl, project);\r\n            //await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id)\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const project = {\r\n                id: this.props.project.id,\r\n                customer: this.props.project.customer,\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                systemId: this.state.systemId,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail: this.state.contactEmail,\r\n                notes: this.state.notes\r\n            }\r\n            for (var i = 0; i < this.state.projects.length; i++) {\r\n                if((project.systemId === this.state.projects[i].systemId) && (project.id !== this.state.projects[i].id)) {\r\n                    window.alert('That system id is already in use in another project');\r\n                    return;\r\n                }\r\n            }\r\n            this.projectPut(project);\r\n            window.location.reload(false);\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.project.name,\r\n                description: this.props.project.description,\r\n                systemId: this.props.project.systemId,\r\n                contactName: this.props.project.contactName,\r\n                contactPhone: this.props.project.contactPhone,\r\n                contactEmail:this.props.project.contactEmail,\r\n                notes:this.props.project.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            this.getCustomers();\r\n            this.getAllProjects();\r\n            this.setState({\r\n                name: this.props.project.name,\r\n                description: this.props.project.description,\r\n                systemId: this.props.project.systemId,\r\n                contactName: this.props.project.contactName,\r\n                contactPhone: this.props.project.contactPhone,\r\n                contactEmail:this.props.project.contactEmail,\r\n                notes:this.props.project.notes,\r\n                modalId: \"modal-form-project-edit-\" + this.props.project.id,\r\n                buttonId: \"edit-project-button-\" + this.props.project.id\r\n            })\r\n\r\n            const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\r\n            modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-project-button-\" + this.props.project.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <p> {i18n.t('adminDashboard.addProject.desc')} </p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput \r\n                            name=\"name\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectName')} \r\n                            value={this.state.name} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"name\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"description\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectDesc')} \r\n                            value={this.state.description} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"description\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"systemId\" \r\n                            labelText={i18n.t('adminDashboard.addProject.systemId')} \r\n                            value={this.state.systemId}\r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactName\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactName')} \r\n                            value={this.state.contactName} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactPhone\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactPhone')} \r\n                            value={this.state.contactPhone} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactEmail\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactEmail')} \r\n                            value={this.state.contactEmail} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.email')} \r\n                            invalid={this.state.invalid[\"contactEmail\"]} \r\n                        />\r\n                        <TextArea \r\n                            name=\"notes\" \r\n                            labelText={i18n.t('adminDashboard.addProject.notes')} \r\n                            value={this.state.notes} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        {/*<button disabled={!this.isValid()} type=\"submit\">Submit</button>*/}\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(EditProjectModal)","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport { apiGetCustomersProjects, apiGetMyCustomersProjects } from '../../api/customers';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Link } from 'react-router-dom';\r\nimport i18n from '../../i18n';\r\nimport EditProjectModal from '../Admin/EditProjectModal'\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\n\r\nclass CustomTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      projects: {}\r\n     }\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n    if (authenticated) {\r\n      var projects;\r\n      if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n        projects = await apiGetCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\r\n      }\r\n      else {\r\n        projects = await apiGetMyCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\r\n      }\r\n      \r\n      this.setState({\r\n          projects: projects\r\n      });\r\n    }\r\n    this.render();\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.fetchData();\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <DataTable rows={rowData} headers={headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title={i18n.t('customerDashboard.subscriptions')} description={i18n.t('customerDashboard.tableDesc')}>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {Object.keys(this.state.projects).length !== 0 ? \r\n                  this.state.projects.data.map((project, index) => {\r\n                    if (project.projectSubscriptions.length === 0) {\r\n                      return(\r\n                        <TableRow key={index} >\r\n                          <TableCell>{project.name}</TableCell>\r\n                          {project.partners.length !== 0 ? \r\n                            <TableCell>\r\n                              {project.partners.map(partner => (\r\n                                <p>{partner.name}</p>\r\n                              ))}\r\n                            </TableCell> \r\n                          : <TableCell>None</TableCell>}\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>{project.tickets.length}</TableCell>\r\n                          <TableCell>{hasKeycloakClientRole('ROLE_ADMIN') ? <EditProjectModal project={project} serviceUrl={this.props.serviceUrl}/> : null}</TableCell>\r\n                      </TableRow>\r\n                      )\r\n                    }\r\n                    else {\r\n                      var sub = project.projectSubscriptions[project.projectSubscriptions.length - 1];\r\n                      return(\r\n                          <TableRow key={index} >\r\n                              <TableCell><Link to={`/subscription-details/${sub.id}`}>{project.name}</Link></TableCell>\r\n                              {project.partners.length !== 0 ? \r\n                                <TableCell>\r\n                                  {project.partners.map(partner => (\r\n                                    <p>{partner.name}</p>\r\n                                  ))}\r\n                                </TableCell> \r\n                                : <TableCell>None</TableCell>}\r\n                              {sub.entandoVersion ? <TableCell>{sub.entandoVersion.name}</TableCell> : <TableCell>None</TableCell>}\r\n                              <TableCell>{sub.status}</TableCell>\r\n                              <TableCell>{String(new Date(sub.startDate).toDateString())}</TableCell>\r\n                              <TableCell>{String(new Date(new Date(sub.startDate).setMonth(new Date(sub.startDate).getMonth() + sub.lengthInMonths)).toDateString())}</TableCell>\r\n                              <TableCell>{project.tickets.length}</TableCell>\r\n                              <TableCell>{hasKeycloakClientRole('ROLE_ADMIN') ? <EditProjectModal project={project} serviceUrl={this.props.serviceUrl}/> : null}</TableCell>\r\n                          </TableRow>\r\n                        \r\n                      )\r\n                    }\r\n                  }) : null\r\n              }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('customerDashboard.projectName'),\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.partners'),\r\n    key: 'partners',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.entandoVersion'),\r\n    key: 'entandoVersion',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.status'),\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.startDate'),\r\n    key: 'startDate',\r\n  },\r\n  {\r\n      header: i18n.t('customerDashboard.endDate'),\r\n      key: 'endDate',\r\n  },\r\n  {\r\n      header: i18n.t('customerDashboard.openTickets'),\r\n      key: 'openTickets',\r\n  },\r\n  {\r\n      header: i18n.t('customerDashboard.action'),\r\n      key: 'action',\r\n  }\r\n];\r\n\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: <a href=\"\">Supplier Portal</a>,\r\n       partnerName: 'Leonardo',\r\n       entandoVersion: 5.2,\r\n       startDate: 'October, 2019',\r\n       endDate: 'October, 2022',\r\n       openTickets: '5',\r\n    },\r\n    {\r\n      id: 'b',\r\n      projectName: <a href=\"\">Task Manager</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'July, 2019',\r\n      endDate: 'July, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'c',\r\n      projectName: <a href=\"\">Sales Coordination App</a>,\r\n      partnerName: 'Accenture',\r\n      entandoVersion: 6.2,\r\n      startDate: 'September, 2019',\r\n      endDate: 'September, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'd',\r\n      projectName: <a href=\"\">Website</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'October, 2019',\r\n      endDate: 'October, 2022',\r\n      openTickets: '1',\r\n    }  \r\n];\r\n \r\nexport default withKeycloak(CustomTable);","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiCustomerGet } from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nconst customerData = {\r\n  name: 'Ford',\r\n  id: '5564 4563 3345',\r\n  startDate: '01/01/2020'\r\n};\r\n\r\nclass CustomerDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  async getCustomer() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerNumber);\r\n      this.setState({\r\n        customer: customer.data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, id, startDate } = customerData; //destructuring\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.state.customer.name}\r\n          </p>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.state.customer.id}\r\n          </p>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPut } from '../../api/customers';\r\n\r\nclass EditCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: ''\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async updateCustomer(customer) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const result = await apiCustomerPut(this.props.serviceUrl, customer);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = {\r\n                id: this.props.customer.id,\r\n                name: this.state.name,\r\n                customerNumber: this.state.customerNumber,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail:this.state.contactEmail,\r\n                notes:this.state.notes\r\n            }\r\n            this.updateCustomer(customer);\r\n            window.location.reload(false);\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.customer.name,\r\n                customerNumber: this.props.customer.customerNumber,\r\n                contactName: this.props.customer.contactName,\r\n                contactPhone: this.props.customer.contactPhone,\r\n                contactEmail:this.props.customer.contactEmail,\r\n                notes:this.props.customer.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n          this.setState({\r\n            name: this.props.customer.name,\r\n            customerNumber: this.props.customer.customerNumber,\r\n            contactName: this.props.customer.contactName,\r\n            contactPhone: this.props.customer.contactPhone,\r\n            contactEmail:this.props.customer.contactEmail,\r\n            notes:this.props.customer.notes,\r\n            modalId: \"modal-form-customer-edit-\" + this.props.customer.id,\r\n            buttonId: \"edit-customer-button-\" + this.props.customer.id\r\n          })\r\n\r\n          const modalOpenButton = document.querySelector('.edit-customer-button-' + this.props.customer.id);\r\n          modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            this.setState({\r\n                name: this.props.customer.name,\r\n                customerNumber: this.props.customer.customerNumber,\r\n                contactName: this.props.customer.contactName,\r\n                contactPhone: this.props.customer.contactPhone,\r\n                contactEmail: this.props.customer.contactEmail,\r\n                notes: this.props.customer.notes\r\n              })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-customer-button-\" + this.props.customer.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <p> {i18n.t('adminDashboard.editCustomer.desc')} </p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName')}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber')}\r\n                            value={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            value={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            value={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail')}\r\n                            value={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        {/*<button disabled={!this.isValid()} type=\"submit\">Submit</button>*/}\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import React from 'react';\r\nimport { AccordionItem } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerGet, apiGetCustomersProjects,  apiGetMyCustomersProjects } from '../../api/customers';\r\nimport { apiGetProjectsUsers } from '../../api/projects';\r\nimport CustomTable from './customDataTable';\r\nimport CustomerDetails from './customerDetails';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\n\r\nclass CustomerAccordian extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: {},\r\n            customer: {},\r\n            authenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getCustomersProjects(this.props.customerNumber);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            this.getCustomersProjects(this.props.customerNumber);\r\n        }\r\n      }\r\n\r\n    async getCustomersProjects(id) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customer = await apiCustomerGet(this.props.serviceUrl, id);\r\n\r\n            var projects;\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                projects = await apiGetCustomersProjects(this.props.serviceUrl, id);\r\n            }\r\n            else {\r\n                projects = await apiGetMyCustomersProjects(this.props.serviceUrl, id);\r\n            }\r\n\r\n            this.setState({\r\n                projects: projects.data,\r\n                customer: customer.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                        <CustomerDetails serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} /> : null \r\n                    }\r\n                    <AccordionItem title={this.props.title}>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                            <EditCustomerModal serviceUrl={this.props.serviceUrl} customer={this.state.customer} key={this.state.customer.id}/>  : null\r\n                        }\r\n                        <CustomTable serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} />\r\n                    </AccordionItem>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/project-subscriptions'\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiSubscriptionGetAll = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n * \r\n * @param {string} serviceUrl \r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation \r\n * @returns \r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'POST',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/project-subscriptions/mysubscription'\r\nexport const apiGetMySubscription = async (serviceUrl, customerId) => {\r\n    const url = `${serviceUrl}/${myResource}/${customerId}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'GET'\r\n    };\r\n  \r\n    return request(url, options);\r\n  };\r\n\r\n  // Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n    const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null\r\n    };\r\n\r\n    return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'PUT',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'POST',\r\n      body: productVersion ? JSON.stringify(productVersion) : null,\r\n    };\r\n    return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport { apiGetProjectIdNames } from '../../api/projects';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPost, apiRenewSubscription } from '../../api/subscriptions';\r\nimport { apiProductVersionsGet } from '../../api/productVersion';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport { apiAddSubscriptionToProject } from '../../api/projects';\r\n\r\nconst subscriptionLevel = {\r\n    GOLD: 'Gold',\r\n    PLATINUM: 'Platinum'\r\n}\r\n\r\nconst subscriptionStatus = {\r\n    requested: 'REQUESTED',\r\n    pending: 'PENDING',\r\n    active: 'ACTIVE',\r\n    expired: 'EXPIRED'\r\n}\r\n\r\nconst subscriptionTypes = ['New', 'Existing'];\r\n\r\nclass SubscriptionForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subscriptionType: '',\r\n            projectId: '',\r\n            startDate: '',\r\n            subscriptionLevel: '',\r\n            subscriptionLength: '',\r\n            entandoVersionId: '',\r\n            invalid: {},\r\n            projects: {},\r\n            productVersions: [],\r\n            selectedProjectId: '',\r\n            submitSuccess: false,\r\n            submitError: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    async fetchData() {\r\n        const projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\r\n        const productVersions = (await apiProductVersionsGet(this.props.serviceUrl)).data;\r\n\r\n        this.setState({\r\n            projects,\r\n            productVersions\r\n        });\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.subscriptionType === '') {\r\n            formIsValid = false;\r\n            invalid['subscriptionType'] = true;\r\n        }\r\n\r\n        if (this.state.projectId === '') {\r\n            formIsValid = false;\r\n            invalid['projectId'] = true;\r\n        }\r\n\r\n        if (typeof this.state.startDate !== \"undefined\") {\r\n            if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n                formIsValid = false;\r\n                invalid[\"startDate\"] = true;\r\n            }\r\n        }\r\n\r\n        if (this.state.subscriptionLength === '' || !Number.isInteger(Number.parseInt(this.state.subscriptionLength))) {\r\n            formIsValid = false;\r\n            invalid['subscriptionLength'] = true;\r\n        }\r\n\r\n        if (this.state.subscriptionLevel === '') {\r\n            formIsValid = false;\r\n            invalid['level'] = true;\r\n        }\r\n\r\n        if (this.state.entandoVersionId === '') {\r\n            formIsValid = false;\r\n            invalid['entandoVersionId'] = true;\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n        this.setState({\r\n            submitSuccess: false,\r\n            submitError: false\r\n        });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            submitSuccess: false,\r\n            submitError: false\r\n        });\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            if (this.state.subscriptionType === 'new') {\r\n                this.newSubscription().then(res => {\r\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\r\n                    this.setState({\r\n                        submitSuccess: true,\r\n                        submitError: false\r\n                    });\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        submitSuccess: false,\r\n                        submitError: true\r\n                    });\r\n                });\r\n            } else if (this.state.subscriptionType === 'existing') {\r\n                this.renewSubscription().then(res => {\r\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\r\n                    this.setState({\r\n                        submitSuccess: true,\r\n                        submitError: false\r\n                    });\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        submitSuccess: false,\r\n                        submitError: true\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    async newSubscription() {\r\n        const subscriptionRequest = {\r\n            entandoVersionId: this.state.entandoVersionId,\r\n            projectId: this.state.projectId,\r\n            projectSubscription: {\r\n                startDate: new Date(this.state.startDate),\r\n                lengthInMonths: this.state.subscriptionLength,\r\n                level: this.state.subscriptionLevel,\r\n                status: this.subscriptionStatus()\r\n            }\r\n        }\r\n\r\n        return await apiProjectSubscriptionPost(this.props.serviceUrl, subscriptionRequest);\r\n    }\r\n\r\n    async renewSubscription() {\r\n        const subscriptionRequest = {\r\n            entandoVersionId: this.state.entandoVersionId,\r\n            projectId: this.state.projectId,\r\n            projectSubscription: {\r\n                startDate: new Date(this.state.startDate),\r\n                lengthInMonths: this.state.subscriptionLength,\r\n                level: this.state.subscriptionLevel,\r\n                status: this.subscriptionStatus()\r\n            }\r\n        }\r\n\r\n        return await apiRenewSubscription(this.props.serviceUrl, subscriptionRequest);\r\n    }\r\n\r\n    subscriptionStatus() {\r\n        return hasKeycloakClientRole('ROLE_ADMIN') ? subscriptionStatus.active : subscriptionStatus.requested;\r\n    }\r\n\r\n    setupFormComponents() {\r\n        const projectIdsNames = this.state.projects;\r\n        let projectList = null;\r\n\r\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\r\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\r\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>{projectIdsNames[projectId]}</SelectItem>\r\n            ));\r\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\r\n        } else {\r\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\r\n        }\r\n\r\n        const subscriptionLevelList = Object.entries(subscriptionLevel).map(([key, value]) => (\r\n            <SelectItem key={key} text={value} value={key}>{value}</SelectItem>\r\n        ));\r\n        subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\" />)\r\n\r\n        const versionList = this.state.productVersions.map(version => (\r\n            <SelectItem key={version.id} text={version.name} value={version.id}>{version.name}</SelectItem>\r\n        ));\r\n        versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\" />)\r\n\r\n        return { projectList, subscriptionLevelList, versionList }\r\n    }\r\n\r\n    renderForm() {\r\n        const formComponents = this.setupFormComponents()\r\n        const { projectList, subscriptionLevelList, versionList } = formComponents;\r\n        let formInputs;\r\n\r\n        if (this.state.subscriptionType === 'new') {\r\n            formInputs = (\r\n                <div>\r\n                    <p><strong>{i18n.t('subscriptionForm.newSubscription')}</strong></p><br />\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Select\r\n                                id=\"projectId\"\r\n                                name=\"projectId\"\r\n                                labelText={i18n.t('subscriptionForm.projectName')}\r\n                                value={this.state.projectId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['projectId']}\r\n                            >\r\n                                {projectList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"subscriptionLevel\"\r\n                                name=\"subscriptionLevel\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel')}\r\n                                value={this.state.subscriptionLevel} onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['level']}\r\n                            >\r\n                                {subscriptionLevelList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"entandoVersionId\"\r\n                                name=\"entandoVersionId\"\r\n                                labelText={i18n.t('subscriptionForm.entandoVersion')}\r\n                                value={this.state.entandoVersionId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['entandoVersionId']}\r\n                            >\r\n                                {versionList}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                                <DatePickerInput\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    placeholder=\"mm/dd/yyyy\"\r\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\r\n                                    value={this.state.startDate}\r\n                                    onChange={this.handleChanges}\r\n                                    type=\"text\"\r\n                                    invalidText={i18n.t('validation.invalid.date')}\r\n                                    invalid={this.state.invalid['startDate']}\r\n                                />\r\n                            </DatePicker>\r\n                            <TextInput\r\n                                id=\"subscriptionLength\"\r\n                                name=\"subscriptionLength\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength')}\r\n                                value={this.state.subscriptionLength}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.number')}\r\n                                invalid={this.state.invalid['subscriptionLength']}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.subscriptionType === 'existing') {\r\n            formInputs = (\r\n                <div>\r\n                    <p><strong>{i18n.t('subscriptionForm.renewSubscription')}</strong></p><br />\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Select\r\n                                id=\"projectId\"\r\n                                name=\"projectId\"\r\n                                labelText={i18n.t('subscriptionForm.projectName')}\r\n                                value={this.state.projectId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['projectId']}\r\n                            >\r\n                                {projectList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"subscriptionLevel\"\r\n                                name=\"subscriptionLevel\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel')}\r\n                                value={this.state.subscriptionLevel}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['level']}\r\n                            >\r\n                                {subscriptionLevelList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"entandoVersionId\"\r\n                                name=\"entandoVersionId\"\r\n                                labelText={i18n.t('subscriptionForm.entandoVersion')}\r\n                                value={this.state.entandoVersionId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['entandoVersionId']}\r\n                            >\r\n                                {versionList}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                                <DatePickerInput\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    placeholder=\"mm/dd/yyyy\"\r\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\r\n                                    value={this.state.startDate}\r\n                                    onChange={this.handleChanges}\r\n                                    type=\"text\"\r\n                                    invalidText={i18n.t('validation.invalid.date')}\r\n                                    invalid={this.state.invalid['startDate']}\r\n                                />\r\n                            </DatePicker>\r\n                            <TextInput\r\n                                id=\"subscriptionLength\"\r\n                                name=\"subscriptionLength\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength')}\r\n                                value={this.state.subscriptionLength}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.number')}\r\n                                invalid={this.state.invalid['subscriptionLength']}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return formInputs;\r\n    }\r\n\r\n    successErrorMessage() {\r\n        const isAdmin = hasKeycloakClientRole('ROLE_ADMIN');\r\n        const { subscriptionType, submitSuccess, submitError } = this.state;\r\n\r\n        if (subscriptionType === 'new') {\r\n            if (submitSuccess) {\r\n                return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n            } else if (submitError) {\r\n                return this.createFormMessage('newSubError');\r\n            }\r\n        } else {\r\n            if (submitSuccess) {\r\n                return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n            } else if (submitError) {\r\n                return this.createFormMessage('renewSubError');\r\n            }\r\n        }\r\n    }\r\n\r\n    createFormMessage(subMessageKey) {\r\n        return <p>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">{i18n.t('subscriptionForm.title')}</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>{i18n.t('subscriptionForm.formTitle')}</h4>\r\n                            <p>{i18n.t('subscriptionForm.desc')}</p>\r\n                        </div>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <Select id=\"subscriptionType\" name=\"subscriptionType\" labelText={i18n.t('subscriptionForm.subscriptionType')} required value={this.state.subscriptionType} onChange={this.handleChanges}>\r\n                                        <SelectItem\r\n                                            text={i18n.t('subscriptionForm.selectType')}\r\n                                            value=\"\"\r\n                                        />\r\n                                        {subscriptionTypes.map((subscriptionType, i) => <SelectItem key={i} text={subscriptionType} required value={subscriptionType.toLowerCase()}>{subscriptionType}</SelectItem>)}\r\n                                    </Select>\r\n                                </div>\r\n                            </div>\r\n                            {this.renderForm()}\r\n                            {this.state.subscriptionType ? <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}</Button> : ''}\r\n                            {this.successErrorMessage()}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(SubscriptionForm);","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${userId}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsername = async (serviceUrl, username) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/username/${username}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};","import { getDefaultOptions, getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\nconst usersResource = 'admin/realms/entando/users'\r\nconst tokenResource = 'realms/entando/protocol/openid-connect/token';\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${usersResource}`;\r\n  const keycloakBody = {\r\n    client_id: \"admin_cli\",\r\n    username: \"admin\",\r\n    password: \"admin\",\r\n    grant_type: \"password\"\r\n  }\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${tokenResource}`\r\n  );\r\n  const keycloakBody = {\r\n    client_id: \"web_app\",\r\n    username: \"admin\",\r\n    password: \"admin\",\r\n    grant_type: \"password\"\r\n  }\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join(\"&\");\r\n}","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport { apiAddUserToProject, apiGetProjectIdNames } from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nclass AssignUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectId: '',\r\n            assignUser: '',\r\n            users: new Map(),\r\n            projects: {},\r\n            invalid: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloakUrl)).data);\r\n        const projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\r\n        this.setState({\r\n            users,\r\n            projects\r\n        });\r\n    }\r\n\r\n    mapKeycloakUserEmails = keycloakUsers => {\r\n        const usernameEmailMap = new Map();\r\n        keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n        return usernameEmailMap;\r\n    };\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        const { projectId, assignUser } = this.state;\r\n        const formIsValid = this.handleFormValidation();\r\n\r\n        if (formIsValid) {\r\n            this.assignUserToProject(projectId, assignUser).then(res => {\r\n                if (res.status === 201) {\r\n                    window.location.reload();\r\n                } else {\r\n                    // TODO: Show error message\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleFormValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n        const { projectId, assignUser } = this.state;\r\n\r\n        //name\r\n        if (projectId === '') {\r\n            formIsValid = false;\r\n            invalid['projectId'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (assignUser === '') {\r\n            formIsValid = false;\r\n            invalid['assignUser'] = true;\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    assignUserToProject = async (projectId, username) => {\r\n        const portalUserId = await this.getPortalUserId({ username, email: this.state.users.get(username) });\r\n        return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n    };\r\n\r\n    getPortalUserId = async keycloakUser => {\r\n        let portalUserId = null;\r\n        try {\r\n            const portalUser = await portalUserApi.apiUserGetByUsername(this.props.serviceUrl, keycloakUser.username);\r\n            portalUserId = portalUser.data.id;\r\n        } catch (e) {\r\n            if (e.message.toLowerCase().includes('not found')) {\r\n                const portalUser = await this.createPortalUser(keycloakUser);\r\n                portalUserId = portalUser.data.id;\r\n            }\r\n        }\r\n\r\n        return portalUserId;\r\n    };\r\n\r\n    createPortalUser = async keycloakUser => {\r\n        return await portalUserApi.apiUserPost(this.props.serviceUrl, { username: keycloakUser.username, email: keycloakUser.email });\r\n    };\r\n\r\n    setupFormComponents() {\r\n        const users = this.state.users;\r\n        const projectIdsNames = this.state.projects;\r\n        let userList, projectList = (userList = null);\r\n\r\n        if (users.size > 0) {\r\n            userList = [...users.keys()].map((assignUser, i) => (\r\n                <SelectItem key={i} text={assignUser} value={assignUser}>\r\n                    {assignUser}\r\n                </SelectItem>\r\n            ));\r\n            userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\" />);\r\n        } else {\r\n            userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\" />;\r\n        }\r\n\r\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\r\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\r\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>\r\n                    test\r\n                </SelectItem>\r\n            ));\r\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\r\n        } else {\r\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\r\n        }\r\n\r\n        return { userList, projectList };\r\n    }\r\n\r\n    render() {\r\n        const { userList, projectList } = this.setupFormComponents();\r\n\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"projectId\"\r\n                                    labelText={i18n.t('manageUsers.assign.projectName')}\r\n                                    value={this.state.projectId}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['projectId']}\r\n                                >\r\n                                    {projectList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"assignUser\"\r\n                                    labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                                    value={this.state.assignUser}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['assignUser']}\r\n                                >\r\n                                    {userList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                            {' '}\r\n                            {i18n.t('buttons.submit')}{' '}\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiUsersGet, apiUserDelete } from '../../../api/portalusers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\n\r\nconst headerData = [\r\n    {\r\n        header: i18n.t('manageUsers.delete.userName'),\r\n        key: 'username',\r\n    },\r\n    {\r\n        header: i18n.t('manageUsers.delete.userEmail'),\r\n        key: 'email',\r\n    },\r\n    {\r\n        header: i18n.t('manageUsers.delete.dateAdded'),\r\n        key: 'dateAdded',\r\n    },\r\n    {\r\n        header: i18n.t('manageUsers.delete.userAccess'),\r\n        key: 'userAccess',\r\n    }\r\n];\r\n\r\nclass DeleteUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            portalUsers: new Map(),\r\n            keycloakUsers: new Map(),\r\n            displayUsers: [],\r\n            filterText: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const { keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const portalUsers = this.handleMapFormatting((await apiUsersGet(this.props.serviceUrl)).data);\r\n            const keycloakUsers = this.handleMapFormatting((await apiKeycloakUserGet(keycloakUrl)).data);\r\n\r\n            this.setState({\r\n                portalUsers,\r\n                keycloakUsers\r\n            });\r\n\r\n            this.handleUserDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Turns the list of user objects into a map where the key is the unique username.\r\n     */\r\n    handleMapFormatting(users) {\r\n        return new Map(users.map(user => [user.username, user]));\r\n    }\r\n\r\n    handleUserDisplay() {\r\n        const { portalUsers, keycloakUsers } = this.state;\r\n        const portalUsernames = [...portalUsers.keys()];\r\n        const keycloakUserObjects = [...keycloakUsers.values()];\r\n\r\n        const displayUsers = keycloakUserObjects.map(keycloakUser => (\r\n            {\r\n                id:  keycloakUser.username,\r\n                username: keycloakUser.username,\r\n                email: keycloakUser.email,\r\n                dateAdded: `${new Date(keycloakUser.createdTimestamp).toLocaleString('default', { month: 'long'})} ${new Date(keycloakUser.createdTimestamp).getFullYear()}`,\r\n                userAccess: portalUsernames.includes(keycloakUser.username) ? <a onClick={event => this.handleRemoveUser(keycloakUser.username, event)} href=\"\"><SubtractAlt16 fill=\"red\" />{i18n.t('manageUsers.delete.removeUser')}</a> : ''\r\n            }\r\n        ));\r\n\r\n        this.setState({\r\n            displayUsers\r\n        });\r\n    }\r\n\r\n    handleRemoveUser = (username, event) => {\r\n        event.preventDefault();\r\n        const userId = this.state.portalUsers.get(username).id;\r\n        apiUserDelete(this.props.serviceUrl, userId).then(res => {\r\n            if (res.status === 204) {\r\n                const updatedPortalUsers = this.state.portalUsers;\r\n                updatedPortalUsers.delete(username);\r\n                this.setState({\r\n                    portalUsers: updatedPortalUsers\r\n                });\r\n                this.handleUserDisplay();\r\n            } else {\r\n                // TODO: Error message\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataTable rows={this.state.displayUsers} headers={headerData}>\r\n                {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                    <TableContainer>\r\n                        <Table {...getTableProps()}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headers.map((header) => (\r\n                                        <TableHeader {...getHeaderProps({ header })}>\r\n                                            {header.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        {row.cells.map((cell) => (\r\n                                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </DataTable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(DeleteUser);","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUser from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\n\r\nclass ManageUser extends Component {\r\n  userFunctionality;\r\n  constructor(props) {\r\n    super(props);\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            {/*<p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>*/}\r\n            <p className=\"desc\">Assign a user to an existing project</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUser serviceUrl={this.props.serviceUrl} />,\r\n        open: true\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            {/*<p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>*/}\r\n            <p className=\"desc\">View and delete existing users</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUser serviceUrl={this.props.serviceUrl} />,\r\n        open: false\r\n      }\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n      return (\r\n        <div>\r\n          <h3 className=\"pageTitle\">Entando Admin View</h3>\r\n          <div className=\"form-container\">\r\n            <Accordion>\r\n              {this.userFunctionality.map((item, index) => (\r\n                <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\r\n                  <p>{item.content}</p>\r\n                </AccordionItem>\r\n              ))}\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return(<p>You are not authorized to view this</p>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default ManageUser;\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Accordion, AccordionItem, PaginationNav, Search, Tile, Pagination} from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport AddProjectModal from './AddProjectModal'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminCustomersGet, apiCustomersGet, apiMyCustomersGet } from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport { number } from 'prop-types';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport SubscriptionForm from '../Forms/SubscriptionForm';\r\nimport ManageUser from '../Admin/ManageUser/ManageUser';\r\nclass AdminDashboard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: {},\r\n            customersProjects: {},\r\n            role: '',\r\n            filteredCustomers: {},\r\n            currentPage: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCustomers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n        }\r\n      }\r\n\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            var customers;\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                customers = await apiAdminCustomersGet(this.props.serviceUrl);\r\n            }\r\n            else {\r\n                customers = await apiMyCustomersGet(this.props.serviceUrl);\r\n            }\r\n\r\n            this.setState({\r\n                customers: customers.data,\r\n                filteredCustomers: customers.data\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        if (event.key === 'Enter') {\r\n            const newFilteredState = this.state.customers.filter(customer => customer.name.toLowerCase().startsWith(event.target.value.toLowerCase()))\r\n            this.setState({\r\n                filteredCustomers: newFilteredState,\r\n                currentPage: 0\r\n            })\r\n        }\r\n        else {\r\n            if (event.target.value === '' || event.target.value === undefined) {\r\n                this.setState({\r\n                    filteredCustomers: this.state.customers\r\n                })\r\n            }\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render(){\r\n        var numberOfPages = 1;\r\n        if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n            numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n        }\r\n        else {\r\n            numberOfPages = 1;\r\n        }\r\n        \r\n        const props = () => ({\r\n            loop: Boolean(false),\r\n            page: Number(this.state.currentPage),\r\n            totalItems: Number(numberOfPages),\r\n            itemsShown: Number(1),\r\n            onChange: (event) => this.setState({currentPage: event}),\r\n        });\r\n\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.title')} Admin {i18n.t('adminDashboard.view')}</h3> : \r\n                hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.title')} Support {i18n.t('adminDashboard.view')}</h3> : \r\n                hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.title')} Customer {i18n.t('adminDashboard.view')}</h3> : \r\n                hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.title')} Partner {i18n.t('adminDashboard.view')}</h3> : \r\n                null}\r\n            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_PARTNER') ?\r\n                <Tile>\r\n                    <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Search onChange={this.handleSearch} id=\"search\" placeHolderText={i18n.t('adminDashboard.searchText')} onKeyPress={this.handleSearch}/>\r\n                        </div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                        <div className=\"bx--col\">\r\n                            \r\n                            <div>\r\n                                <AddPartnerModal serviceUrl={this.props.serviceUrl} />\r\n                                <AddCustomerModal serviceUrl={this.props.serviceUrl} />\r\n                                <AddProjectModal serviceUrl={this.props.serviceUrl} />\r\n                            </div>\r\n                        </div> : null}\r\n                    </div>\r\n                </Tile>  \r\n                : null\r\n            }\r\n                    \r\n                <div className=\"form-container\">\r\n                    <Accordion>\r\n                        {Object.keys(this.state.customers).length !== 0 ? this.state.filteredCustomers.map((customer, index) => {\r\n                            // Pagination for Admin and Support roles (5 items per page)\r\n                            var indexOfLastItem = ((this.state.currentPage + 1) * 5) - 1;\r\n                            var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                            \r\n                            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                                if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                                    return(\r\n                                        <CustomerAccordian key={customer.id} serviceUrl={this.props.serviceUrl} customerNumber={customer.id} title={customer.name}/>\r\n                                    )\r\n                                }\r\n                                else {\r\n                                    return(null)\r\n                                }\r\n                            }\r\n                            // For Partner / Customer roles just show what they have access to\r\n                            else {\r\n                                return(null)\r\n                            }\r\n                        }) : null}\r\n                    </Accordion>\r\n                    <PaginationNav {...props()} cssClass='pagination-right' />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload =>\r\n  publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n    formUpdate: 'customer.form.update',\r\n    formCreate: 'customer.form.create',\r\n    formDelete: 'customer.form.delete',\r\n  };\r\n  \r\n  export const OUTPUT_EVENT_TYPES = {\r\n    select: 'customer.table.select',\r\n    add: 'customer.table.add',\r\n    error: 'customer.table.error',\r\n    delete: 'customer.table.delete',\r\n  };\r\n  \r\n  export const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminDashboard from '../components/Admin/AdminDashboard';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminDashboardElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminDashboard serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async (serviceUrl ) => {\r\n\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\nexport const apiJiraTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectName, organization) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectName, organization, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { apiJiraTicketsGet } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet, apiTicketingSystemPost } from '../../api/ticketingsystem';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiGetProjectsUsers, apiProjectGet, apiGetProjectsTickets, apiAddTicketToProject } from '../../api/projects';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      tickets: {}\r\n     }\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      try {\r\n          const project = await apiProjectGet(this.props.serviceUrl, this.props.projectId);\r\n          const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n          const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n          const tickets = await apiJiraTicketsGet(this.props.serviceUrl, currentTicketingSystem.systemId, project.data.systemId);\r\n          for(var i = 0; i < tickets.data.length; i++) {\r\n            apiAddTicketToProject(this.props.serviceUrl, this.props.projectId, tickets.data[i].id);\r\n          }\r\n          this.setState({\r\n              tickets: tickets\r\n          });\r\n      }\r\n      catch(err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  if(authenticated) {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n  if (authenticated && changedAuth) {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n}\r\n\r\n  render() { \r\n    return ( \r\n      <div>\r\n        <DataTable rows={rowData} headers={headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title=\"List of Tickets\" description=\"Tickets\">\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.keys(this.state.tickets).length !== 0 ? this.state.tickets.data.map((ticket) => {\r\n                  return (\r\n                    <TableRow key={ticket.id}>\r\n                      <TableCell key={ticket.id}>{ticket.systemId}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.systemId.split(\"-\")[0]}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.description}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.type}</TableCell>\r\n                      <TableCell key={ticket.id}>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                      <TableCell key={ticket.id}><a href={\"https://jorden-test-partner-portal.atlassian.net/browse/\" + ticket.systemId} target=\"_blank\">View Ticket</a></TableCell>\r\n                    </TableRow>\r\n                  )\r\n                }) : <p></p> }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: 'Issue',\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: 'Project',\r\n    key: 'project',\r\n  },\r\n  {\r\n    header: 'Description',\r\n    key: 'description',\r\n  },\r\n  {\r\n    header: 'Type',\r\n    key: 'type',\r\n  },\r\n  {\r\n    header: 'Creation Date',\r\n    key: 'creationDate',\r\n  },\r\n  {\r\n      header: 'Link',\r\n      key: 'openTicket',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: 'Ticket1',\r\n       project: 'Leonardo',\r\n       entandoVersion: 6.2,\r\n       creationDate: 'October, 2019',\r\n       openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n     },\r\n  \r\n];\r\n \r\nexport default withKeycloak(TicketList);","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea, Select, SelectItem, DatePicker, DatePickerInput} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPut } from '../../api/subscriptions';\r\nimport moment from 'moment';\r\n\r\nclass EditSubscriptionModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            level: '',\r\n            status: '',\r\n            lengthInMonths: '',\r\n            startDate: '',\r\n            notes: '',\r\n            invalid: {},\r\n            submitMsg: ''\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.level === 'level') {\r\n            formIsValid = false;\r\n            invalid['level'] = true;\r\n        }\r\n\r\n        if (this.state.status === 'status') {\r\n            formIsValid = false;\r\n            invalid['status'] = true;\r\n        }\r\n\r\n        if(typeof this.state.startDate !== \"undefined\"){\r\n            if(!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['startDate'] = true;\r\n            }      \t\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const subscriptionRequest = {\r\n                projectSubscription : {\r\n                    id: this.props.subscription.id,\r\n                    level: this.state.level,\r\n                    status: this.state.status,\r\n                    lengthInMonths: this.state.lengthInMonths,\r\n                    startDate: moment(this.state.startDate).format(),\r\n                    notes: this.state.notes,\r\n                    project: this.props.project,\r\n                    entandoVersion: this.props.subscription.entandoVersion\r\n                }\r\n            }\r\n            this.subscriptionPut(subscriptionRequest).then(result => {\r\n                this.setState({\r\n                    submitMsg: 'Successfully updated subscription'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: 'An error occurred when udating the subscription'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            level: this.props.subscription.level,\r\n            status: this.props.subscription.status,\r\n            lengthInMonths: this.props.subscription.lengthInMonths,\r\n            startDate: moment(this.props.subscription.startDate).calendar(),\r\n            notes: this.props.subscription.notes,\r\n            submitMsg: ''\r\n        })\r\n\r\n        const modalOpenButton = document.querySelector('.edit-sub-button');\r\n        modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n    }\r\n\r\n    clearValues = () => {\r\n        const customerModalElement = document.querySelector('#modal-form-sub-edit');\r\n        if(!customerModalElement.className.includes(\"is-visible\")) {\r\n            this.setState({\r\n                level: this.props.subscription.level,\r\n                status: this.props.subscription.status,\r\n                lengthInMonths: this.props.subscription.lengthInMonths,\r\n                startDate: moment(this.props.subscription.startDate).calendar(),\r\n                notes: this.props.subscription.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    async subscriptionPut(subscription) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProjectSubscriptionPut(this.props.serviceUrl, subscription);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const levelList = ['GOLD', 'PLATINUM'];\r\n        const statusList = ['REQUESTED', 'PENDING', 'ACTIVE', 'EXPIRED'];\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('editSubscription.title')}\r\n                buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary edit-sub-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-sub-edit\"\r\n                handleSubmit={this.handleFormSubmit}\r\n            >\r\n                <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <Select\r\n                            name=\"level\"\r\n                            labelText=\"Level\"\r\n                            value={this.state.level}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['level']} \r\n                            >\r\n                            <SelectItem disabled text=\"Select Level\" value=\"level\" />\r\n                            {levelList.map((level, i) => (\r\n                                    <SelectItem key={i} text={level} value={level}>\r\n                                        {level}\r\n                                    </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <Select\r\n                            name=\"status\"\r\n                            labelText=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['status']} \r\n                            >\r\n                            <SelectItem disabled text=\"Select Status\" value=\"status\" />\r\n                            {statusList.map((status, i) => (\r\n                                <SelectItem key={i} text={status} value={status}>\r\n                                    {status}\r\n                                </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Start Date\"\r\n                                value={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')} \r\n                                invalid={this.state.invalid['startDate']} \r\n                            />\r\n                        </DatePicker>\r\n                        <TextInput name=\"lengthInMonths\" labelText=\"Length In Months\" value={this.state.lengthInMonths} onChange={this.handleChanges} />\r\n                        <TextArea \r\n                            name=\"notes\" \r\n                            labelText={i18n.t('adminDashboard.addProject.notes')} \r\n                            value={this.state.notes} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <p>{this.state.submitMsg}</p>\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditSubscriptionModal)\r\n\r\n\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiSubscriptionGet, apiGetMySubscription } from '../../api/subscriptions'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiUsersGet } from '../../api/portalusers';\r\nimport { apiProjectGet } from '../../api/projects'; \r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport EditSubscriptionModal from '../Admin/EditSubscriptionModal';\r\n\r\nconst subscriptionData = {\r\n    description: 'Entando Product Support Subscription Suplier Portal',\r\n    commitment: 'Leonardo',\r\n    type: 'Product Support Subscription Entando Platform',\r\n    quantityRequest: '1(8 Core)',\r\n    components: '',\r\n    level: 'Gold',\r\n    startDate: 'May 2019',\r\n    endDate: 'May 2020',\r\n    license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subscription: {},\r\n            users: {},\r\n            project: {}\r\n        }\r\n    }\r\n\r\n    async getSubscription() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            try {\r\n                var subscription;\r\n                if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                    subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n                    var project = '';\r\n                    if (subscription.data.project) {\r\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\r\n                    }\r\n                }\r\n                else if (hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                    subscription = await apiGetMySubscription(this.props.serviceUrl, this.props.match.params.id);\r\n                    var project = '';\r\n                    if (subscription.data.project) {\r\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\r\n                    }\r\n                }\r\n                this.setState({\r\n                    subscription: subscription,\r\n                    project: project\r\n                })\r\n            }\r\n            catch(err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.getSubscription();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.getSubscription();\r\n            }\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { description, commitment, type, quantityRequest, components, level, startDate, endDate, license } = subscriptionData\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n            return (\r\n                <div className=\"subscription-details\">\r\n                    <div>\r\n                    <Tile>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <p><strong>Description:</strong> {this.state.subscription.data.project.description}</p>\r\n                                    <p><strong>Commitment:</strong>\r\n                                    {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? \r\n                                        <>\r\n                                            {this.state.project.data.partners.map(partner => (\r\n                                                <> {partner.name} </>\r\n                                            ))}\r\n                                        </>\r\n                                        : <> None </>\r\n                                    }\r\n                                    </p>\r\n                                    <p><strong>Type:</strong> {type}</p>\r\n                                    <p><strong>Quantity Request:</strong> {quantityRequest}</p>\r\n                                    <p><strong>Status:</strong> {this.state.subscription.data.status}</p>\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <p><strong>Level:</strong> {this.state.subscription.data.level}</p>\r\n                                    <p><strong>Start Date:</strong> {String(new Date(this.state.subscription.data.startDate).toDateString())}</p>\r\n                                    <p><strong>End Date:</strong> {String(new Date(new Date(this.state.subscription.data.startDate).setMonth(new Date(this.state.subscription.data.startDate).getMonth() + this.state.subscription.data.lengthInMonths)).toDateString())}</p>\r\n                                    <p><strong>License:</strong> {license}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                            <EditSubscriptionModal project={this.state.project.data} subscription={this.state.subscription.data} serviceUrl={this.props.serviceUrl}/>\r\n                        : null}\r\n                    </Tile>\r\n                    <br/>\r\n                    <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return(<p>No Data</p>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(Subscription);","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\r\nimport { apiKeycloakToken, apiKeycloakUserGet } from '../api/keycloak';\r\nimport { hasKeycloakClientRole } from '../api/helpers';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: 'admin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n        \r\n        if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_PARTNER') || hasKeycloakClientRole(\"ROLE_CUSTOMER\")) {\r\n            return (\r\n                <div id=\"entando-customer-portal\">\r\n                    <AuthenticatedView keycloak={keycloak}>\r\n                        <BrowserRouter>\r\n                            <Switch>\r\n                                <Route path=\"**/subscription-details/:id\" render={(props) => (\r\n                                    <Subscription {...props} serviceUrl={this.props.serviceUrl} />\r\n                                )}/>\r\n                                <Route path=\"**/\" render={(props) => (\r\n                                    <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} />\r\n                                )}/>\r\n                            </Switch>\r\n                        </BrowserRouter>\r\n                    </AuthenticatedView>\r\n                    <UnauthenticatedView keycloak={keycloak}>\r\n                        <p>Unauthenticated</p>\r\n                    </UnauthenticatedView>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div id=\"entando-customer-portal\">\r\n                    <BrowserRouter>\r\n                        <Switch>\r\n                            <Route path=\"**/subscription-details/:id\" render={(props) => (\r\n                                <Subscription {...props} serviceUrl={this.props.serviceUrl} />\r\n                            )}/>\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </div>    \r\n            )\r\n        }\r\n     }\r\n  }\r\n  \r\nexport default withKeycloak(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminAddCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AddCustomerModal serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\r\n\r\n","import React, {Component} from 'react';\r\nimport { Select, SelectItem} from 'carbon-components-react';\r\nimport CustomerDetails from '../Customer/customerDetails';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport '../../index.scss';\r\n\r\nexport default class RoleCheck extends Component {\r\n    state = {\r\n        roleType: 'customer'\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const roleType = ['Admin', 'Customer'];\r\n        return (\r\n            \r\n                <div className='role-check'>  \r\n                <Select defaultValue=\"role-type\" name=\"roleType\" labelText=\"Select Role(Testing)\" value={this.state.roleType} onChange={this.handleChanges}>\r\n                        <SelectItem\r\n                                text=\"Select Role\"\r\n                                value=\"role-type\"\r\n                        />\r\n                        {roleType.map((roleType, i) => <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>{roleType}</SelectItem>)}\r\n                        </Select>\r\n                    { this.renderForm()}\r\n                </div>\r\n            \r\n            );\r\n    }\r\n\r\n    // Render Dashboard based on role\r\n    renderForm() {\r\n        if (this.state.roleType === 'customer') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Customer Portal</h3>\r\n                <CustomerDetails />\r\n                <CustomTable />\r\n            </div>\r\n        )\r\n        if (this.state.roleType === 'admin') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Admin View</h3>\r\n                <AdminDashboard />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport RoleCheck from '../components/Admin/RoleCheck';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass AdminRoleCheckElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <RoleCheck serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\r\n\r\n//export default AdminRoleCheckElement;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomDataTable from '../components/Customer/customDataTable';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomDataTableElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomDataTable serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('custom-datatable-widget', CustomDataTableElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomerDetails from '../components/Customer/customerDetails';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomerDetailsElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomerDetails serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Subscription from '../components/SubscriptionDetails/subscription';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass SubscriptionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Subscription serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-widget', SubscriptionElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectsGet, apiAdminProjectsGet, apiMyProjectsGet, apiAddTicketToProject } from '../../api/projects';\r\nimport { apiUsersGet } from '../../api/portalusers';\r\nimport { apiJiraTicketPost } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\n\r\nclass OpenTicket extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            projects: [],\r\n            systemId: '',\r\n            type: '',\r\n            description: '',\r\n            priority: '',\r\n            status: 'To Do',\r\n            createDate: '',\r\n            updateDate: '',\r\n            role: '',\r\n            invalid: {}\r\n        };\r\n        this.types = [\"Bug\", \"Task\"];\r\n        this.priorities = ['Lowest', 'Low', 'High', 'Highest'];\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.systemId === ''){\r\n          formIsValid = false;\r\n          invalid['systemId'] = true;\r\n        }\r\n\r\n        if(this.state.type === ''){\r\n            formIsValid = false;\r\n            invalid['type'] = true;\r\n        }\r\n\r\n        if(this.state.description === ''){\r\n            formIsValid = false;\r\n            invalid['description'] = true;\r\n        }\r\n\r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            this.createTicket();\r\n            window.location.reload(false);\r\n        }\r\n    };\r\n\r\n    async fetchProjects() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                var projects = await apiAdminProjectsGet(this.props.serviceUrl)\r\n                this.setState({\r\n                    projects: projects.data\r\n                })\r\n            }\r\n            else if (hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                var projects = await apiMyProjectsGet(this.props.serviceUrl)\r\n                this.setState({\r\n                    projects: projects.data\r\n                })\r\n            }\r\n        }\r\n\r\n        this.render();\r\n    }\r\n\r\n    async createTicket() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            const ticket = {\r\n                systemId: this.state.systemId,\r\n                type: this.state.type,\r\n                description: this.state.description,\r\n                priority: this.state.priority,\r\n                status: 'To Do',\r\n                // these dates are just placeholder to validate the POST request (date will be updated in the backend)\r\n                createDate: '2021-02-22T14:14:09-05:00',\r\n                updateDate: '2021-02-22T14:14:09-05:00'\r\n            }\r\n            const result = await apiJiraTicketPost(this.props.serviceUrl, this.state.ticketingSystem.systemId, this.state.systemId, ticket);\r\n            //const addedTicket = await apiAddTicketToProject(this.props.serviceUrl, this.state.project.id, result.data.id);\r\n        }\r\n    }\r\n\r\n    async getTicketingSystem() {\r\n        const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n        const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n        this.setState({\r\n            ticketingSystem: currentTicketingSystem\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.fetchProjects();\r\n            this.getTicketingSystem();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchProjects();\r\n            this.getTicketingSystem();\r\n        }\r\n    }\r\n        \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">{i18n.t('supportTicketForm.title')}</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\r\n                            {/*<p>{i18n.t('supportTicketForm.desc')}</p>*/}\r\n                            <p>Create a support ticket for an existing project</p>\r\n                        </div>\r\n\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <Select \r\n                                        defaultValue=\"ticketing-system\" \r\n                                        name=\"systemId\" \r\n                                        labelText={i18n.t('supportTicketForm.selectProject')} \r\n                                        value={this.state.systemId} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['systemId']} \r\n                                    >\r\n                                        <SelectItem\r\n                                            text={i18n.t('supportTicketForm.select')}\r\n                                            value=\"ticketing-system\"\r\n                                        />\r\n                                        {Object.keys(this.state.projects).length !== 0 ? this.state.projects.map((project, i) => {\r\n                                        return (\r\n                                            <SelectItem key={i} text={project.name} value={project.systemId}>{project.name}</SelectItem>\r\n                                        )}) : null}\r\n                                    </Select>\r\n                                    <Select \r\n                                        defaultValue=\"Task\" \r\n                                        name=\"type\" \r\n                                        labelText={i18n.t('supportTicketForm.type')} \r\n                                        value={this.state.type} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['type']} \r\n                                    >\r\n                                        <SelectItem\r\n                                            text=\"Select\"\r\n                                            value=\"Task\"\r\n                                        />\r\n                                        {this.types.map((type, i) => (\r\n                                            <SelectItem key={i} text={type} value={type}>{type}</SelectItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                    <Select \r\n                                        defaultValue=\"Low\" \r\n                                        name=\"priority\" \r\n                                        labelText={i18n.t('supportTicketForm.priority')} \r\n                                        value={this.state.priority} \r\n                                        onChange={this.handleChanges}\r\n                                    >\r\n                                        <SelectItem\r\n                                            text=\"Select\"\r\n                                            value=\"Low\"\r\n                                        />\r\n                                        {this.priorities.map((priority, i) => (\r\n                                            <SelectItem key={i} text={priority} value={priority}>{priority}</SelectItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextArea \r\n                                        labelText={i18n.t('supportTicketForm.ticketDescription')} \r\n                                        placeholder={i18n.t('supportTicketForm.addticketDescription')} \r\n                                        name=\"description\" \r\n                                        value={this.state.description} \r\n                                        onChange={this.handleChanges}  \r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['description']} \r\n                                    />\r\n                                    <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}  </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(OpenTicket);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsOpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n       <ul id='navigation'>\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/subscription-details\">Subscription Details</NavLink></li>\r\n          <li><NavLink to=\"/subscription\">New or Renew Subscription</NavLink></li>\r\n          <li><NavLink to=\"/service-ticket\">Open Service Ticket</NavLink></li>\r\n          <li><NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink></li>\r\n          <li><NavLink to=\"/manage-users\">Manage Users</NavLink></li>\r\n          <li><NavLink to=\"/configuration-settings\">Configuration Settings</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n \r\nexport default Navigation;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass NavigationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Navigation serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('navigation-widget', NavigationElement);\r\n","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\nimport i18n from '../../i18n';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        enhancementDescription: '',\r\n        invalid: {}\r\n    };\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.ticketNo === ''){\r\n          formIsValid = false;\r\n          invalid['ticketNo'] = true;\r\n        }\r\n\r\n        if(this.state.customerName === ''){\r\n            formIsValid = false;\r\n            invalid['customerName'] = true;\r\n        }\r\n\r\n        if(this.state.projectName === ''){\r\n            formIsValid = false;\r\n            invalid['projectName'] = true;\r\n        }\r\n\r\n        if(this.state.openedBy === ''){\r\n            formIsValid = false;\r\n            invalid['openedBy'] = true;\r\n        }\r\n\r\n        if(this.state.partnerName === ''){\r\n            formIsValid = false;\r\n            invalid['partnerName'] = true;\r\n        }\r\n\r\n        if(this.state.enhancementDescription === ''){\r\n            formIsValid = false;\r\n            invalid['enhancementDescription'] = true;\r\n        }\r\n\r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            // placeholder\r\n        }\r\n    };\r\n      \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">{i18n.t('enhancementForm.title')}</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>{i18n.t('enhancementForm.formTitle')}</h4>\r\n                            <p>{i18n.t('enhancementForm.desc')}</p>\r\n                        </div>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"ticketNo\" \r\n                                        labelText={i18n.t('enhancementForm.ticketNumber')} \r\n                                        value={this.state.ticketNo} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['ticketNo']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"projectName\" \r\n                                        labelText={i18n.t('enhancementForm.projectName')} \r\n                                        value={this.state.projectName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['projectName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"priority\" \r\n                                        labelText={i18n.t('enhancementForm.priority')} \r\n                                        value={this.state.priority} \r\n                                        onChange={this.handleChanges}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"customerName\" \r\n                                        labelText={i18n.t('enhancementForm.customerName')} \r\n                                        value={this.state.customerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['customerName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"openedBy\" \r\n                                        labelText={i18n.t('enhancementForm.ticketOpenedBy')} \r\n                                        value={this.state.openedBy} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['openedBy']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"partnerName\" \r\n                                        labelText={i18n.t('enhancementForm.partnerName')} \r\n                                        value={this.state.partnerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['partnerName']} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextArea \r\n                                        labelText={i18n.t('enhancementForm.enhancementDescription')} \r\n                                        placeholder={i18n.t('enhancementForm.addenhancementDescription')} \r\n                                        name=\"enhancementDescription\"  \r\n                                        value={this.state.enhancementDescription} \r\n                                        onChange={this.handleChanges}  \r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['enhancementDescription']} \r\n                                    />\r\n                                    <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsEnhancementRequestElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <EnhancementRequest serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport retargetEvents from 'react-shadow-dom-retarget-events';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url'\r\n};\r\n\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('app-element', AppElement);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketList from '../components/SubscriptionDetails/TicketList';\r\nimport '../index.scss'\r\n//import './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketListCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketList serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticket-list-widget', TicketListCustomerElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\nimport { apiTicketingSystemPost, apiTicketingSystemsGet, apiTicketingSystemPut, apiTicketingSystemDelete } from '../../../api/ticketingsystem';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            ticketingSystem: '',\r\n            ticketingSystemType:'',\r\n            url: '',\r\n            serviceAccount: '',\r\n            serviceAccount: '',\r\n            systemId: ''\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async createTicketingSystem() {\r\n        const ticketingSystem = {\r\n            url: this.state.url,\r\n            serviceAccount: this.state.serviceAccount,\r\n            serviceAccountSecret: this.state.serviceAccountSecret,\r\n            systemId: this.state.systemId\r\n        }\r\n        await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem);\r\n    }\r\n\r\n    async updateTicketingSystem() {\r\n        const ticketingSystem = {\r\n            id: this.state.ticketingSystem.id,\r\n            url: this.state.url,\r\n            serviceAccount: this.state.serviceAccount,\r\n            serviceAccountSecret: this.state.serviceAccountSecret,\r\n            systemId: this.state.systemId\r\n        }\r\n        await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem);\r\n    }\r\n\r\n    async getTicketingSystems() {\r\n        const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl)\r\n        if (ticketingSystems.data.length > 0) {\r\n            const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n            \r\n            this.setState({\r\n                ticketingSystem: currentTicketingSystem,\r\n                url: currentTicketingSystem.url,\r\n                serviceAccount: currentTicketingSystem.serviceAccount,\r\n                serviceAccountSecret: currentTicketingSystem.serviceAccountSecret,\r\n                systemId: currentTicketingSystem.systemId\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getTicketingSystems();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.getTicketingSystems();\r\n        }\r\n    }\r\n\r\n    handleDelete(e) {\r\n        if (window.confirm(\"Are you sure you want to delete this ticketing system?\")) {\r\n            apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.ticketingSystem === '') {\r\n            this.createTicketingSystem();\r\n        }\r\n        else {\r\n            this.updateTicketingSystem();\r\n        }\r\n        window.location.reload(false);\r\n    };\r\n\r\n    render() { \r\n        const ticketingSystem = ['Jira', 'Other'];\r\n        if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n            return (\r\n                <div className=\"cp-form\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <Select defaultValue=\"ticketing-system\" name=\"ticketingSystemType\" labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')} value={this.state.ticketingSystemType} onChange={this.handleChanges}>\r\n                                        <SelectItem\r\n                                            text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                            value=\"ticketing-system\"\r\n                                        />\r\n                                        {ticketingSystem.map((ticketingSystem, i) => <SelectItem key={i} text={ticketingSystem} value={ticketingSystem.toLowerCase()}>{ticketingSystem}</SelectItem>)}\r\n                                    </Select>\r\n                                    <TextInput name=\"serviceAccount\" labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')} value={this.state.serviceAccount} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"systemId\" labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')} value={this.state.systemId} onChange={this.handleChanges}/>\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput name=\"url\" labelText={i18n.t('adminConfig.integrationTicketingSystem.url')} value={this.state.url} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"serviceAccountSecret\" type=\"password\" labelText={i18n.t('adminConfig.integrationTicketingSystem.password')} value={this.state.serviceAccountSecret} onChange={this.handleChanges}/>\r\n                                </div>\r\n                            </div>\r\n                            <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\r\n                            {this.state.ticketingSystem ?\r\n                                <Button kind=\"danger\" onClick={() => this.handleDelete()}> Delete </Button> : null\r\n                            }\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return(<p>You are not authorized to view this</p>)\r\n        }\r\n    }\r\n}\r\n \r\nexport default withKeycloak(TicketingSystem);","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {}\r\n    };\r\n\r\n    this.baseState = this.state\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const productVersion = apiProductVersionPost(this.props.serviceUrl, this.state);\r\n      this.render();\r\n      window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if(!customerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState(this.baseState);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-product-version\"\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        <div className=\"form-container\">\r\n          <p> {i18n.t('adminDashboard.addProductVersion.desc')} </p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n              <DatePickerInput\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n              <DatePickerInput\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  ToggleSmall,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        data: productVersions\r\n      });\r\n    }\r\n  }\r\n\r\n  async handleToggleChange(id) {\r\n    await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.data).length !== 0\r\n                      ? this.state.data.data.map((productVersion, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{productVersion.name}</TableCell>\r\n                            <TableCell>\r\n                              <ToggleSmall\r\n                                onClick={() => this.handleToggleChange(productVersion.id)}\r\n                                aria-label=\"toggle button\"\r\n                                id={productVersion.id}\r\n                                defaultToggled={productVersion.status ? true : false}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{productVersion.startDate}</TableCell>\r\n                            <TableCell>{productVersion.endDate}</TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return(<p>You are not authorized to view this</p>)\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate'\r\n  }\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022'\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <ToggleSmall aria-label=\"toggle button\" id=\"status-2\" />,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023'\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024'\r\n  }\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import React from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\n\r\nclass AdminConfiguration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.adminConfig = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />\r\n      }\r\n    ];\r\n  }\r\n\r\nrender() {\r\n  if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n    return(\r\n      <div>\r\n        <h3 className=\"pageTitle\">Entando Admin View</h3>\r\n        <div className=\"form-container\">\r\n          <Tile>\r\n            {/*\r\n            <p className=\"title\">{i18n.t('adminConfig.title')}</p>\r\n            <p class=\"desc\">{i18n.t('adminConfig.desc')}</p>\r\n            */}\r\n            <p className=\"title\">Admin Configuration</p>\r\n            <p class=\"desc\">Configure the Ticketing System and Entando Versions below</p>\r\n          </Tile>\r\n          <Accordion>\r\n            {this.adminConfig.map((item, index) => (\r\n              <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\r\n                <p>{item.content}</p>\r\n              </AccordionItem>\r\n            ))}\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return(<p>You are not authorized to view this</p>)\r\n  }\r\n}\r\n\r\n}\r\nexport default AdminConfiguration;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminConfigurationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminConfiguration serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-configuration-widget', AdminConfigurationElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass OpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('open-ticket-widget', OpenTicketElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url'\r\n};\r\n\r\nclass ManageUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ManageUser serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('manage-user-widget', ManageUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url'\r\n};\r\n\r\nclass AssignUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AssignUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('assign-user-widget', AssignUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass DeleteUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <DeleteUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('delete-user-widget', DeleteUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketingSystemElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketingSystem serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticketing-system-widget', TicketingSystemElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ProductVersionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ProductVersion serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('product-version-widget', ProductVersionElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SubsciptionForm from '../components/Forms/SubscriptionForm';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass SubsciptionFormElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <SubsciptionForm serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-form-widget', SubsciptionFormElement);\r\n\r\n"],"sourceRoot":""}